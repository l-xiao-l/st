ARM GAS  /tmp/cc5Zd4W1.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_uart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.code	16
  19              		.thumb_func
  20              		.fpu softvfp
  22              	UART_EndTxTransfer:
  23              	.LFB78:
  24              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @file    stm32f0xx_hal_uart.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   [..]
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 RXNE interrupt and Error Interrupts) are managed using the macros
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit and receive 
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
ARM GAS  /tmp/cc5Zd4W1.s 			page 2


  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         the HAL_UART_Init() API.
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    [..]
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (@) These APIs(HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_MultiProcessor_Init(),
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    [..]
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    [..] Three operation modes are available within this driver :     
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** Polling mode IO operation ***
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      =================================
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..]    
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit() 
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** Interrupt mode IO operation ***    
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      ===================================
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..]    
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT() 
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT() 
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback          
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** DMA mode IO operation ***    
ARM GAS  /tmp/cc5Zd4W1.s 			page 3


  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      ==============================
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..] 
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA() 
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback          
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()      
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()  
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()      
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** UART HAL driver macros list ***
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      ============================================= 
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..]
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral 
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral     
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..] 
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros 
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   @endverbatim
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @attention
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      without specific prior written permission.
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /tmp/cc5Zd4W1.s 			page 4


 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #include "stm32f0xx_hal.h"
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @addtogroup STM32F0xx_HAL_Driver
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8)) /*!< UART or U
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/cc5Zd4W1.s 			page 5


 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** ===============================================================================
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     in asynchronous mode.
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Baud Rate
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Word Length
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Stop Bit
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Parity
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Hardware flow control
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Receiver/transmitter modes
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Over Sampling Method
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) One-Bit Sampling Method
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) data logical level inversion
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) RX and TX pins swap
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) RX overrun detection disabling
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) DMA disabling on RX error
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) MSB first on communication line
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) auto Baud rate detection
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init() and HAL_MultiProcessor_Init()
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     API follow respectively the UART asynchronous, UART Half duplex and multiprocessor mode
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manual).
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /*
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   Additional Table:  If the parity is enabled, then the MSB bit of the data written
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      in the data register is transmitted but is changed by the parity bit.
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      According to device capability (support or not of 7-bit word length),
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      frame length is either defined by the M bit (8-bits or 9-bits)
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      or by the M1 and M0 bits (7-bit, 8-bit or 9-bit).
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      Possible UART frame formats are as listed in the following table:
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       Table 1. UART frame format.             
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |       M bit       |  PCE bit  |             UART frame                |
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         0         |     0     |    | SB |    8-bit data   | STB |     |
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         0         |     1     |    | SB | 7-bit data | PB | STB |     |
ARM GAS  /tmp/cc5Zd4W1.s 			page 6


 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         1         |     0     |    | SB |    9-bit data   | STB |     |
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         1         |     1     |    | SB | 8-bit data | PB | STB |     |
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    0    |     0     |    | SB |    8 bit data   | STB |     |
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    0    |     1     |    | SB | 7 bit data | PB | STB |     |
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    1    |     0     |    | SB |    9 bit data   | STB |     |
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    1    |     1     |    | SB | 8 bit data | PB | STB |     |
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    1    |    0    |     0     |    | SB |    7 bit data   | STB |     |
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    1    |    0    |     1     |    | SB | 6 bit data | PB | STB |     |
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check the parameters */
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check the parameters */
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /tmp/cc5Zd4W1.s 			page 7


 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported)  bits in the USART_CR3 
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Peripheral */
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/cc5Zd4W1.s 			page 8


 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check UART instance */
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), and IREN (if IrDA is supported)  bits in the USART_CR3 regist
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_SCEN);
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_IREN);
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Peripheral */
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
ARM GAS  /tmp/cc5Zd4W1.s 			page 9


 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Address UART node address (4-, 6-, 7- or 8-bit long).
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param WakeUpMethod specifies the UART wakeup method.
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the wake up method parameter */
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/cc5Zd4W1.s 			page 10


 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported) bits in the USART_CR3 r
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Peripheral */
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/cc5Zd4W1.s 			page 11


 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DeInit the low level hardware */
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlock */
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
ARM GAS  /tmp/cc5Zd4W1.s 			page 12


 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                       ##### IO operation functions #####
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and Half duplex data transfers.
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) There are two mode of transfer:
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode.
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            after finishing transfer.
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (++) Non-Blocking mode: The communication is performed using Interrupts
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The end of the data processing will be indicated through the
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            using DMA mode.
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Blocking mode API's are :
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Receive()
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_DMAPause()
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_DMAResume()
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_DMAStop()
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_TxHalfCpltCallback()
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_RxHalfCpltCallback()
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Abort()
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit()
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortReceive()
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Abort_IT()
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit_IT()
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortReceive_IT()
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortCpltCallback()
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortTransmitCpltCallback()
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortReceiveCpltCallback()
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
ARM GAS  /tmp/cc5Zd4W1.s 			page 13


 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         Errors are handled as follows :
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Error is considered as Recoverable and non blocking : Transfer could go till end, but 
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in In
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              Received character is then retrieved and stored in Rx buffer, Error code is set to all
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UA
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              If user wants to abort it, Abort services should be called by user.
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Error is considered as Blocking : Transfer could not be completed properly and is abor
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() u
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData Pointer to data buffer.
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size Amount of data to be sent.
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout Timeout duration.
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart = 0U;
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return  HAL_ERROR;
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be 
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/cc5Zd4W1.s 			page 14


 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tickstart = HAL_GetTick();
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while(huart->TxXferCount > 0)
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData += 2;
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_TIMEOUT;
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be received.
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout Timeout duration.
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
ARM GAS  /tmp/cc5Zd4W1.s 			page 15


 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t uhMask;
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart = 0;
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return  HAL_ERROR;
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be 
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tickstart = HAL_GetTick();
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* as long as data have to be received */
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxXferCount--;
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData +=2U;
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
ARM GAS  /tmp/cc5Zd4W1.s 			page 16


 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be sent.
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be 
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/cc5Zd4W1.s 			page 17


 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Transmit Data Register Empty Interrupt */
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be received.
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be 
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
ARM GAS  /tmp/cc5Zd4W1.s 			page 18


 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be sent.
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled by DMA from halfword frontier). Depending on compilation 
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy into TDR will be 
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
ARM GAS  /tmp/cc5Zd4W1.s 			page 19


1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA error callback */
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA abort callback */
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->TDR, S
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be received.
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled by DMA from halfword frontier). Depending on compilat
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
ARM GAS  /tmp/cc5Zd4W1.s 			page 20


1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy from RDR will be 
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA error callback */
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA abort callback */
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA channel */
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPtr, S
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/cc5Zd4W1.s 			page 21


1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
ARM GAS  /tmp/cc5Zd4W1.s 			page 22


1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback: 
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete  
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of 
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
ARM GAS  /tmp/cc5Zd4W1.s 			page 23


1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U; 
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
ARM GAS  /tmp/cc5Zd4W1.s 			page 24


1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Handle ErrorCode to No Error */
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Tx transfer counter */
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/cc5Zd4W1.s 			page 25


1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Rx transfer counter */
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U; 
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
ARM GAS  /tmp/cc5Zd4W1.s 			page 26


1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
1407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      before any call to DMA Abort functions */
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Otherwise, set it to NULL */
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Otherwise, set it to NULL */
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA TX */
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
ARM GAS  /tmp/cc5Zd4W1.s 			page 27


1460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 0U;
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA RX */
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 1U;
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 0U;
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (abortcplt == 1U)
1492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U; 
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset errorCode */
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/cc5Zd4W1.s 			page 28


1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA TX */
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Reset Tx transfer counter */
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount = 0U; 
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Tx transfer counter */
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U; 
1568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
ARM GAS  /tmp/cc5Zd4W1.s 			page 29


1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
1610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA RX */
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Reset Rx transfer counter */
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxXferCount = 0U; 
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
1625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
ARM GAS  /tmp/cc5Zd4W1.s 			page 30


1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Rx transfer counter */
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U; 
1637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Handle UART interrupt request.
1653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr3its;
1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t errorflags;
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If no error occurs */
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (errorflags == RESET)
1666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       UART_Receive_IT(huart);
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
1672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }  
1674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If some errors occur */
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   cr3its = READ_REG(huart->Instance->CR3);
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(   (errorflags != RESET)
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
1680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
1685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
ARM GAS  /tmp/cc5Zd4W1.s 			page 31


1688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
1693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
1701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     
1705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_ORE) != RESET) &&
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
1708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
1710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         UART_Receive_IT(huart);
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          consider error as blocking */
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {  
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
1741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/cc5Zd4W1.s 			page 32


1745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Abort DMA RX */
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             {
1748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             }
1751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
1752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           else
1753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
1754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Call user error callback */
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
1757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         else
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Call user error callback */
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Error is notified to user through user error callback */
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
1773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   } /* End if some error occurs */
1775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
1777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(((isrflags & USART_ISR_WUF) != RESET) && ((cr3its & USART_CR3_WUFIE) != RESET))
1779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_WUF);
1781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
1788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_Transmit_IT(huart);
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
1801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/cc5Zd4W1.s 			page 33


1802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
1807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
1817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
1822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
1832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Rx Transfer completed callback.
1837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
1847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
1852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  /tmp/cc5Zd4W1.s 			page 34


1859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
1862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief UART error callback.
1867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
1877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
ARM GAS  /tmp/cc5Zd4W1.s 			page 35


1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
1927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
1930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief   UART control functions
1931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
1932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
1933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
1934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
1936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
1937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
1938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
1940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
1942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
1943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
1944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
1945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Enable UART in mute mode (does not mean UART enters mute mode;
1949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
1950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
1962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
1970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
1971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/cc5Zd4W1.s 			page 36


1973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
1983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
1992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear TE and RE bits */
2012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status.
2028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
ARM GAS  /tmp/cc5Zd4W1.s 			page 37


2030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
2033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear TE and RE bits */
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  *  @brief   UART Peripheral State functions
2053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  *
2054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
2055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ==============================================================================
2056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ==============================================================================
2058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
2059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides functions allowing to :
2060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) Return the UART handle state.
2061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) Return the UART handle error code
2062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
2064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
2065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Return the UART handle state.
2069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL state
2072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
2076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp1 = huart->gState;
2077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp2 = huart->RxState;
2078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval UART Error Code
ARM GAS  /tmp/cc5Zd4W1.s 			page 38


2087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return huart->ErrorCode;
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
2102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
2112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
2113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
2114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000U;
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
2118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling:
2131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value
2132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
2133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
2134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
2135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
2137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    * to huart->Init.StopBits value */
2141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
ARM GAS  /tmp/cc5Zd4W1.s 			page 39


2144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Configure
2145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
2146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value
2147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
2148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *   to huart->Init.OneBitSampling */
2149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
2150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
2151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (clocksource)
2159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
2174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
2175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0U;
2179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
2180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
2181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (clocksource)
2185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
2188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
2191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
2194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
2197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
2200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
ARM GAS  /tmp/cc5Zd4W1.s 			page 40


2201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return ret;
2206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
2215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
2217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
2218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
2220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
2221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
2223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
2224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
2227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
2228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
2230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
2231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure data inversion */
2234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
2235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
2237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
2238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
2241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
2242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
2244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
2245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
2248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
2249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
2251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
2252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
2255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
2256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
ARM GAS  /tmp/cc5Zd4W1.s 			page 41


2258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
2259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
2263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
2265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
2267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
2268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
2269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
2271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
2272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
2276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
2277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
2280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Check the UART Idle State.
2285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
2291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart = 0U;
2292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
2293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
2298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tickstart = HAL_GetTick();
2300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and REACK bits in ISR are checked only when available (not available on all F0 devices).
2302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      Bits are defined for some specific devices, and are available only for UART instances supporti
2303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (IS_UART_WAKEUP_FROMSTOP_INSTANCE(huart->Instance))
2305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check if the Transmitter is enabled */
2307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
2308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Wait until TEACK flag is set */
2310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VAL
2311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Timeout occurred */
2313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
2314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
ARM GAS  /tmp/cc5Zd4W1.s 			page 42


2315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check if the Receiver is enabled */
2318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
2319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Wait until REACK flag is set */
2321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VAL
2322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Timeout occurred */
2324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
2325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
2329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART State */
2331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
2342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Flag Specifies the UART flag to check
2344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Status Flag status (SET or RESET)
2345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Tickstart Tick start value
2346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Timeout Timeout duration
2347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
2350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Wait until flag is set */
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
2353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check for the Timeout */
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
2358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Process Unlocked */
2367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
2369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/cc5Zd4W1.s 			page 43


2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
  25              		.loc 1 2382 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
2383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  31              		.loc 1 2384 0
  32 0000 0268     		ldr	r2, [r0]
  33 0002 1368     		ldr	r3, [r2]
  34 0004 C021     		movs	r1, #192
  35 0006 8B43     		bics	r3, r1
  36 0008 1360     		str	r3, [r2]
2385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  37              		.loc 1 2387 0
  38 000a 6923     		movs	r3, #105
  39 000c 2022     		movs	r2, #32
  40 000e C254     		strb	r2, [r0, r3]
2388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
  41              		.loc 1 2388 0
  42              		@ sp needed
  43 0010 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE78:
  47              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  48              		.align	1
  49              		.syntax unified
  50              		.code	16
  51              		.thumb_func
  52              		.fpu softvfp
  54              	UART_EndRxTransfer:
  55              	.LFB79:
2389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
  56              		.loc 1 2397 0
  57              		.cfi_startproc
ARM GAS  /tmp/cc5Zd4W1.s 			page 44


  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61              	.LVL1:
2398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  62              		.loc 1 2399 0
  63 0000 0268     		ldr	r2, [r0]
  64 0002 1368     		ldr	r3, [r2]
  65 0004 0649     		ldr	r1, .L3
  66 0006 0B40     		ands	r3, r1
  67 0008 1360     		str	r3, [r2]
2400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  68              		.loc 1 2400 0
  69 000a 0268     		ldr	r2, [r0]
  70 000c 9368     		ldr	r3, [r2, #8]
  71 000e 2331     		adds	r1, r1, #35
  72 0010 FF31     		adds	r1, r1, #255
  73 0012 8B43     		bics	r3, r1
  74 0014 9360     		str	r3, [r2, #8]
2401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  75              		.loc 1 2403 0
  76 0016 6A23     		movs	r3, #106
  77 0018 2022     		movs	r2, #32
  78 001a C254     		strb	r2, [r0, r3]
2404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
  79              		.loc 1 2404 0
  80              		@ sp needed
  81 001c 7047     		bx	lr
  82              	.L4:
  83 001e C046     		.align	2
  84              	.L3:
  85 0020 DFFEFFFF 		.word	-289
  86              		.cfi_endproc
  87              	.LFE79:
  89              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  90              		.align	1
  91              		.weak	HAL_UART_MspInit
  92              		.syntax unified
  93              		.code	16
  94              		.thumb_func
  95              		.fpu softvfp
  97              	HAL_UART_MspInit:
  98              	.LFB41:
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
  99              		.loc 1 574 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.LVL2:
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 105              		.loc 1 581 0
 106              		@ sp needed
 107 0000 7047     		bx	lr
ARM GAS  /tmp/cc5Zd4W1.s 			page 45


 108              		.cfi_endproc
 109              	.LFE41:
 111              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 112              		.align	1
 113              		.weak	HAL_UART_MspDeInit
 114              		.syntax unified
 115              		.code	16
 116              		.thumb_func
 117              		.fpu softvfp
 119              	HAL_UART_MspDeInit:
 120              	.LFB42:
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 121              		.loc 1 589 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126              	.LVL3:
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 127              		.loc 1 596 0
 128              		@ sp needed
 129 0000 7047     		bx	lr
 130              		.cfi_endproc
 131              	.LFE42:
 133              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 134              		.align	1
 135              		.global	HAL_UART_DeInit
 136              		.syntax unified
 137              		.code	16
 138              		.thumb_func
 139              		.fpu softvfp
 141              	HAL_UART_DeInit:
 142              	.LFB40:
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 143              		.loc 1 536 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              	.LVL4:
 148 0000 70B5     		push	{r4, r5, r6, lr}
 149              	.LCFI0:
 150              		.cfi_def_cfa_offset 16
 151              		.cfi_offset 4, -16
 152              		.cfi_offset 5, -12
 153              		.cfi_offset 6, -8
 154              		.cfi_offset 14, -4
 155 0002 041E     		subs	r4, r0, #0
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 156              		.loc 1 538 0
 157 0004 18D0     		beq	.L9
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 158              		.loc 1 546 0
 159 0006 6926     		movs	r6, #105
 160 0008 2423     		movs	r3, #36
 161 000a 8355     		strb	r3, [r0, r6]
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 162              		.loc 1 549 0
ARM GAS  /tmp/cc5Zd4W1.s 			page 46


 163 000c 0268     		ldr	r2, [r0]
 164 000e 1368     		ldr	r3, [r2]
 165 0010 0121     		movs	r1, #1
 166 0012 8B43     		bics	r3, r1
 167 0014 1360     		str	r3, [r2]
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 168              		.loc 1 551 0
 169 0016 0368     		ldr	r3, [r0]
 170 0018 0025     		movs	r5, #0
 171 001a 1D60     		str	r5, [r3]
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 172              		.loc 1 552 0
 173 001c 0368     		ldr	r3, [r0]
 174 001e 5D60     		str	r5, [r3, #4]
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 175              		.loc 1 553 0
 176 0020 0368     		ldr	r3, [r0]
 177 0022 9D60     		str	r5, [r3, #8]
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 178              		.loc 1 556 0
 179 0024 FFF7FEFF 		bl	HAL_UART_MspDeInit
 180              	.LVL5:
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 181              		.loc 1 558 0
 182 0028 E566     		str	r5, [r4, #108]
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 183              		.loc 1 559 0
 184 002a A555     		strb	r5, [r4, r6]
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 185              		.loc 1 560 0
 186 002c 6A23     		movs	r3, #106
 187 002e E554     		strb	r5, [r4, r3]
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 188              		.loc 1 563 0
 189 0030 023B     		subs	r3, r3, #2
 190 0032 E554     		strb	r5, [r4, r3]
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 191              		.loc 1 565 0
 192 0034 0020     		movs	r0, #0
 193              	.L8:
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 194              		.loc 1 566 0
 195              		@ sp needed
 196              	.LVL6:
 197 0036 70BD     		pop	{r4, r5, r6, pc}
 198              	.LVL7:
 199              	.L9:
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 200              		.loc 1 540 0
 201 0038 0120     		movs	r0, #1
 202              	.LVL8:
 203 003a FCE7     		b	.L8
 204              		.cfi_endproc
 205              	.LFE40:
 207              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 208              		.align	1
 209              		.global	HAL_UART_Transmit_IT
ARM GAS  /tmp/cc5Zd4W1.s 			page 47


 210              		.syntax unified
 211              		.code	16
 212              		.thumb_func
 213              		.fpu softvfp
 215              	HAL_UART_Transmit_IT:
 216              	.LFB45:
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 217              		.loc 1 862 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              	.LVL9:
 222 0000 10B5     		push	{r4, lr}
 223              	.LCFI1:
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 4, -8
 226              		.cfi_offset 14, -4
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 227              		.loc 1 864 0
 228 0002 6923     		movs	r3, #105
 229 0004 C35C     		ldrb	r3, [r0, r3]
 230 0006 202B     		cmp	r3, #32
 231 0008 26D1     		bne	.L13
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 232              		.loc 1 866 0
 233 000a 0029     		cmp	r1, #0
 234 000c 26D0     		beq	.L14
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 235              		.loc 1 866 0 is_stmt 0 discriminator 1
 236 000e 002A     		cmp	r2, #0
 237 0010 26D0     		beq	.L15
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 238              		.loc 1 874 0 is_stmt 1
 239 0012 8023     		movs	r3, #128
 240 0014 5B01     		lsls	r3, r3, #5
 241 0016 8468     		ldr	r4, [r0, #8]
 242 0018 9C42     		cmp	r4, r3
 243 001a 16D0     		beq	.L18
 244              	.L12:
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 245              		.loc 1 883 0
 246 001c 6823     		movs	r3, #104
 247 001e C35C     		ldrb	r3, [r0, r3]
 248 0020 012B     		cmp	r3, #1
 249 0022 1FD0     		beq	.L17
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 250              		.loc 1 885 0 discriminator 2
 251 0024 C164     		str	r1, [r0, #76]
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 252              		.loc 1 886 0 discriminator 2
 253 0026 5023     		movs	r3, #80
 254 0028 C252     		strh	r2, [r0, r3]
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 255              		.loc 1 887 0 discriminator 2
 256 002a 0233     		adds	r3, r3, #2
 257 002c C252     		strh	r2, [r0, r3]
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
ARM GAS  /tmp/cc5Zd4W1.s 			page 48


 258              		.loc 1 889 0 discriminator 2
 259 002e 0023     		movs	r3, #0
 260 0030 C366     		str	r3, [r0, #108]
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 261              		.loc 1 890 0 discriminator 2
 262 0032 6922     		movs	r2, #105
 263              	.LVL10:
 264 0034 2121     		movs	r1, #33
 265              	.LVL11:
 266 0036 8154     		strb	r1, [r0, r2]
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 267              		.loc 1 893 0 discriminator 2
 268 0038 013A     		subs	r2, r2, #1
 269 003a 8354     		strb	r3, [r0, r2]
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 270              		.loc 1 896 0 discriminator 2
 271 003c 0268     		ldr	r2, [r0]
 272 003e 1368     		ldr	r3, [r2]
 273 0040 5F31     		adds	r1, r1, #95
 274 0042 0B43     		orrs	r3, r1
 275 0044 1360     		str	r3, [r2]
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 276              		.loc 1 898 0 discriminator 2
 277 0046 0020     		movs	r0, #0
 278              	.LVL12:
 279 0048 07E0     		b	.L11
 280              	.LVL13:
 281              	.L18:
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 282              		.loc 1 874 0 discriminator 1
 283 004a 0369     		ldr	r3, [r0, #16]
 284 004c 002B     		cmp	r3, #0
 285 004e E5D1     		bne	.L12
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 286              		.loc 1 876 0
 287 0050 CB07     		lsls	r3, r1, #31
 288 0052 E3D5     		bpl	.L12
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 289              		.loc 1 878 0
 290 0054 0120     		movs	r0, #1
 291              	.LVL14:
 292 0056 00E0     		b	.L11
 293              	.LVL15:
 294              	.L13:
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 295              		.loc 1 902 0
 296 0058 0220     		movs	r0, #2
 297              	.LVL16:
 298              	.L11:
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 299              		.loc 1 904 0
 300              		@ sp needed
 301 005a 10BD     		pop	{r4, pc}
 302              	.LVL17:
 303              	.L14:
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 304              		.loc 1 868 0
ARM GAS  /tmp/cc5Zd4W1.s 			page 49


 305 005c 0120     		movs	r0, #1
 306              	.LVL18:
 307 005e FCE7     		b	.L11
 308              	.LVL19:
 309              	.L15:
 310 0060 0120     		movs	r0, #1
 311              	.LVL20:
 312 0062 FAE7     		b	.L11
 313              	.LVL21:
 314              	.L17:
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 315              		.loc 1 883 0
 316 0064 0220     		movs	r0, #2
 317              	.LVL22:
 318 0066 F8E7     		b	.L11
 319              		.cfi_endproc
 320              	.LFE45:
 322              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 323              		.align	1
 324              		.global	HAL_UART_Receive_IT
 325              		.syntax unified
 326              		.code	16
 327              		.thumb_func
 328              		.fpu softvfp
 330              	HAL_UART_Receive_IT:
 331              	.LFB46:
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 332              		.loc 1 918 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              	.LVL23:
 337 0000 30B5     		push	{r4, r5, lr}
 338              	.LCFI2:
 339              		.cfi_def_cfa_offset 12
 340              		.cfi_offset 4, -12
 341              		.cfi_offset 5, -8
 342              		.cfi_offset 14, -4
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 343              		.loc 1 920 0
 344 0002 6A23     		movs	r3, #106
 345 0004 C35C     		ldrb	r3, [r0, r3]
 346 0006 202B     		cmp	r3, #32
 347 0008 4AD1     		bne	.L26
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 348              		.loc 1 922 0
 349 000a 0029     		cmp	r1, #0
 350 000c 4AD0     		beq	.L27
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 351              		.loc 1 922 0 is_stmt 0 discriminator 1
 352 000e 002A     		cmp	r2, #0
 353 0010 4AD0     		beq	.L28
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 354              		.loc 1 930 0 is_stmt 1
 355 0012 8368     		ldr	r3, [r0, #8]
 356 0014 8024     		movs	r4, #128
 357 0016 6401     		lsls	r4, r4, #5
ARM GAS  /tmp/cc5Zd4W1.s 			page 50


 358 0018 A342     		cmp	r3, r4
 359 001a 18D0     		beq	.L31
 360              	.L21:
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 361              		.loc 1 939 0
 362 001c 6824     		movs	r4, #104
 363 001e 045D     		ldrb	r4, [r0, r4]
 364 0020 012C     		cmp	r4, #1
 365 0022 43D0     		beq	.L30
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 366              		.loc 1 939 0 is_stmt 0 discriminator 2
 367 0024 6824     		movs	r4, #104
 368 0026 0125     		movs	r5, #1
 369 0028 0555     		strb	r5, [r0, r4]
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 370              		.loc 1 941 0 is_stmt 1 discriminator 2
 371 002a 4165     		str	r1, [r0, #84]
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 372              		.loc 1 942 0 discriminator 2
 373 002c 5821     		movs	r1, #88
 374              	.LVL24:
 375 002e 4252     		strh	r2, [r0, r1]
 376              	.LVL25:
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 377              		.loc 1 943 0 discriminator 2
 378 0030 0231     		adds	r1, r1, #2
 379 0032 4252     		strh	r2, [r0, r1]
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 380              		.loc 1 946 0 discriminator 2
 381 0034 8022     		movs	r2, #128
 382              	.LVL26:
 383 0036 5201     		lsls	r2, r2, #5
 384 0038 9342     		cmp	r3, r2
 385 003a 0FD0     		beq	.L32
 386 003c 002B     		cmp	r3, #0
 387 003e 13D1     		bne	.L24
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 388              		.loc 1 946 0 is_stmt 0 discriminator 5
 389 0040 0369     		ldr	r3, [r0, #16]
 390 0042 002B     		cmp	r3, #0
 391 0044 28D1     		bne	.L25
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 392              		.loc 1 946 0 discriminator 6
 393 0046 5C33     		adds	r3, r3, #92
 394 0048 FF22     		movs	r2, #255
 395 004a C252     		strh	r2, [r0, r3]
 396              	.LVL27:
 397 004c 0CE0     		b	.L24
 398              	.LVL28:
 399              	.L31:
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 400              		.loc 1 930 0 is_stmt 1 discriminator 1
 401 004e 0469     		ldr	r4, [r0, #16]
 402 0050 002C     		cmp	r4, #0
 403 0052 E3D1     		bne	.L21
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 404              		.loc 1 932 0
ARM GAS  /tmp/cc5Zd4W1.s 			page 51


 405 0054 CC07     		lsls	r4, r1, #31
 406 0056 E1D5     		bpl	.L21
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 407              		.loc 1 934 0
 408 0058 0120     		movs	r0, #1
 409              	.LVL29:
 410 005a 22E0     		b	.L20
 411              	.LVL30:
 412              	.L32:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 413              		.loc 1 946 0 discriminator 1
 414 005c 0369     		ldr	r3, [r0, #16]
 415 005e 002B     		cmp	r3, #0
 416 0060 16D1     		bne	.L23
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 417              		.loc 1 946 0 is_stmt 0 discriminator 3
 418 0062 5C33     		adds	r3, r3, #92
 419 0064 124A     		ldr	r2, .L33
 420 0066 C252     		strh	r2, [r0, r3]
 421              	.LVL31:
 422              	.L24:
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 423              		.loc 1 948 0 is_stmt 1
 424 0068 0023     		movs	r3, #0
 425 006a C366     		str	r3, [r0, #108]
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 426              		.loc 1 949 0
 427 006c 6A22     		movs	r2, #106
 428 006e 2221     		movs	r1, #34
 429 0070 8154     		strb	r1, [r0, r2]
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 430              		.loc 1 952 0
 431 0072 023A     		subs	r2, r2, #2
 432 0074 8354     		strb	r3, [r0, r2]
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 433              		.loc 1 955 0
 434 0076 0268     		ldr	r2, [r0]
 435 0078 9368     		ldr	r3, [r2, #8]
 436 007a 2139     		subs	r1, r1, #33
 437 007c 0B43     		orrs	r3, r1
 438 007e 9360     		str	r3, [r2, #8]
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 439              		.loc 1 958 0
 440 0080 0268     		ldr	r2, [r0]
 441 0082 1168     		ldr	r1, [r2]
 442 0084 9023     		movs	r3, #144
 443 0086 5B00     		lsls	r3, r3, #1
 444 0088 0B43     		orrs	r3, r1
 445 008a 1360     		str	r3, [r2]
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 446              		.loc 1 960 0
 447 008c 0020     		movs	r0, #0
 448              	.LVL32:
 449 008e 08E0     		b	.L20
 450              	.LVL33:
 451              	.L23:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/cc5Zd4W1.s 			page 52


 452              		.loc 1 946 0 discriminator 4
 453 0090 5C23     		movs	r3, #92
 454 0092 FF22     		movs	r2, #255
 455 0094 C252     		strh	r2, [r0, r3]
 456              	.LVL34:
 457 0096 E7E7     		b	.L24
 458              	.LVL35:
 459              	.L25:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 460              		.loc 1 946 0 is_stmt 0 discriminator 7
 461 0098 5C23     		movs	r3, #92
 462 009a 7F22     		movs	r2, #127
 463 009c C252     		strh	r2, [r0, r3]
 464              	.LVL36:
 465 009e E3E7     		b	.L24
 466              	.LVL37:
 467              	.L26:
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 468              		.loc 1 964 0 is_stmt 1
 469 00a0 0220     		movs	r0, #2
 470              	.LVL38:
 471              	.L20:
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 472              		.loc 1 966 0
 473              		@ sp needed
 474 00a2 30BD     		pop	{r4, r5, pc}
 475              	.LVL39:
 476              	.L27:
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 477              		.loc 1 924 0
 478 00a4 0120     		movs	r0, #1
 479              	.LVL40:
 480 00a6 FCE7     		b	.L20
 481              	.LVL41:
 482              	.L28:
 483 00a8 0120     		movs	r0, #1
 484              	.LVL42:
 485 00aa FAE7     		b	.L20
 486              	.LVL43:
 487              	.L30:
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 488              		.loc 1 939 0
 489 00ac 0220     		movs	r0, #2
 490              	.LVL44:
 491 00ae F8E7     		b	.L20
 492              	.L34:
 493              		.align	2
 494              	.L33:
 495 00b0 FF010000 		.word	511
 496              		.cfi_endproc
 497              	.LFE46:
 499              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 500              		.align	1
 501              		.global	HAL_UART_Transmit_DMA
 502              		.syntax unified
 503              		.code	16
 504              		.thumb_func
ARM GAS  /tmp/cc5Zd4W1.s 			page 53


 505              		.fpu softvfp
 507              	HAL_UART_Transmit_DMA:
 508              	.LFB47:
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 509              		.loc 1 980 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              	.LVL45:
 514 0000 70B5     		push	{r4, r5, r6, lr}
 515              	.LCFI3:
 516              		.cfi_def_cfa_offset 16
 517              		.cfi_offset 4, -16
 518              		.cfi_offset 5, -12
 519              		.cfi_offset 6, -8
 520              		.cfi_offset 14, -4
 521 0002 0400     		movs	r4, r0
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 522              		.loc 1 982 0
 523 0004 6920     		movs	r0, #105
 524              	.LVL46:
 525 0006 205C     		ldrb	r0, [r4, r0]
 526 0008 2028     		cmp	r0, #32
 527 000a 3ED1     		bne	.L38
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 528              		.loc 1 984 0
 529 000c 0029     		cmp	r1, #0
 530 000e 3ED0     		beq	.L39
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 531              		.loc 1 984 0 is_stmt 0 discriminator 1
 532 0010 002A     		cmp	r2, #0
 533 0012 3ED0     		beq	.L40
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 534              		.loc 1 992 0 is_stmt 1
 535 0014 8023     		movs	r3, #128
 536 0016 5B01     		lsls	r3, r3, #5
 537 0018 A068     		ldr	r0, [r4, #8]
 538 001a 9842     		cmp	r0, r3
 539 001c 2ED0     		beq	.L43
 540              	.L37:
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 541              		.loc 1 1001 0
 542 001e 6823     		movs	r3, #104
 543 0020 E35C     		ldrb	r3, [r4, r3]
 544 0022 012B     		cmp	r3, #1
 545 0024 37D0     		beq	.L42
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 546              		.loc 1 1001 0 is_stmt 0 discriminator 2
 547 0026 6826     		movs	r6, #104
 548 0028 0123     		movs	r3, #1
 549 002a A355     		strb	r3, [r4, r6]
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 550              		.loc 1 1003 0 is_stmt 1 discriminator 2
 551 002c E164     		str	r1, [r4, #76]
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 552              		.loc 1 1004 0 discriminator 2
 553 002e 4F33     		adds	r3, r3, #79
ARM GAS  /tmp/cc5Zd4W1.s 			page 54


 554 0030 E252     		strh	r2, [r4, r3]
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 555              		.loc 1 1005 0 discriminator 2
 556 0032 0233     		adds	r3, r3, #2
 557 0034 E252     		strh	r2, [r4, r3]
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 558              		.loc 1 1007 0 discriminator 2
 559 0036 0025     		movs	r5, #0
 560 0038 E566     		str	r5, [r4, #108]
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 561              		.loc 1 1008 0 discriminator 2
 562 003a 1733     		adds	r3, r3, #23
 563 003c 2121     		movs	r1, #33
 564              	.LVL47:
 565 003e E154     		strb	r1, [r4, r3]
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 566              		.loc 1 1011 0 discriminator 2
 567 0040 236E     		ldr	r3, [r4, #96]
 568 0042 1649     		ldr	r1, .L44
 569 0044 9962     		str	r1, [r3, #40]
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 570              		.loc 1 1014 0 discriminator 2
 571 0046 236E     		ldr	r3, [r4, #96]
 572 0048 1549     		ldr	r1, .L44+4
 573 004a D962     		str	r1, [r3, #44]
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 574              		.loc 1 1017 0 discriminator 2
 575 004c 236E     		ldr	r3, [r4, #96]
 576 004e 1549     		ldr	r1, .L44+8
 577 0050 1963     		str	r1, [r3, #48]
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 578              		.loc 1 1020 0 discriminator 2
 579 0052 236E     		ldr	r3, [r4, #96]
 580 0054 5D63     		str	r5, [r3, #52]
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 581              		.loc 1 1023 0 discriminator 2
 582 0056 2168     		ldr	r1, [r4]
 583 0058 2831     		adds	r1, r1, #40
 584 005a 1300     		movs	r3, r2
 585 005c 0A00     		movs	r2, r1
 586              	.LVL48:
 587 005e E16C     		ldr	r1, [r4, #76]
 588 0060 206E     		ldr	r0, [r4, #96]
 589 0062 FFF7FEFF 		bl	HAL_DMA_Start_IT
 590              	.LVL49:
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 591              		.loc 1 1026 0 discriminator 2
 592 0066 2368     		ldr	r3, [r4]
 593 0068 4022     		movs	r2, #64
 594 006a 1A62     		str	r2, [r3, #32]
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 595              		.loc 1 1029 0 discriminator 2
 596 006c A555     		strb	r5, [r4, r6]
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 597              		.loc 1 1033 0 discriminator 2
 598 006e 2268     		ldr	r2, [r4]
 599 0070 9368     		ldr	r3, [r2, #8]
ARM GAS  /tmp/cc5Zd4W1.s 			page 55


 600 0072 8021     		movs	r1, #128
 601 0074 0B43     		orrs	r3, r1
 602 0076 9360     		str	r3, [r2, #8]
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 603              		.loc 1 1035 0 discriminator 2
 604 0078 0020     		movs	r0, #0
 605 007a 07E0     		b	.L36
 606              	.LVL50:
 607              	.L43:
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 608              		.loc 1 992 0 discriminator 1
 609 007c 2369     		ldr	r3, [r4, #16]
 610 007e 002B     		cmp	r3, #0
 611 0080 CDD1     		bne	.L37
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 612              		.loc 1 994 0
 613 0082 CB07     		lsls	r3, r1, #31
 614 0084 CBD5     		bpl	.L37
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 615              		.loc 1 996 0
 616 0086 0120     		movs	r0, #1
 617 0088 00E0     		b	.L36
 618              	.L38:
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 619              		.loc 1 1039 0
 620 008a 0220     		movs	r0, #2
 621              	.LVL51:
 622              	.L36:
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 623              		.loc 1 1041 0
 624              		@ sp needed
 625              	.LVL52:
 626 008c 70BD     		pop	{r4, r5, r6, pc}
 627              	.LVL53:
 628              	.L39:
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 629              		.loc 1 986 0
 630 008e 0120     		movs	r0, #1
 631 0090 FCE7     		b	.L36
 632              	.L40:
 633 0092 0120     		movs	r0, #1
 634 0094 FAE7     		b	.L36
 635              	.L42:
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 636              		.loc 1 1001 0
 637 0096 0220     		movs	r0, #2
 638 0098 F8E7     		b	.L36
 639              	.L45:
 640 009a C046     		.align	2
 641              	.L44:
 642 009c 00000000 		.word	UART_DMATransmitCplt
 643 00a0 00000000 		.word	UART_DMATxHalfCplt
 644 00a4 00000000 		.word	UART_DMAError
 645              		.cfi_endproc
 646              	.LFE47:
 648              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 649              		.align	1
ARM GAS  /tmp/cc5Zd4W1.s 			page 56


 650              		.global	HAL_UART_Receive_DMA
 651              		.syntax unified
 652              		.code	16
 653              		.thumb_func
 654              		.fpu softvfp
 656              	HAL_UART_Receive_DMA:
 657              	.LFB48:
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 658              		.loc 1 1055 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 0
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 662              	.LVL54:
 663 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 664              	.LCFI4:
 665              		.cfi_def_cfa_offset 24
 666              		.cfi_offset 3, -24
 667              		.cfi_offset 4, -20
 668              		.cfi_offset 5, -16
 669              		.cfi_offset 6, -12
 670              		.cfi_offset 7, -8
 671              		.cfi_offset 14, -4
 672 0002 0400     		movs	r4, r0
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 673              		.loc 1 1057 0
 674 0004 6A20     		movs	r0, #106
 675              	.LVL55:
 676 0006 205C     		ldrb	r0, [r4, r0]
 677 0008 2028     		cmp	r0, #32
 678 000a 42D1     		bne	.L49
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 679              		.loc 1 1059 0
 680 000c 0029     		cmp	r1, #0
 681 000e 42D0     		beq	.L50
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 682              		.loc 1 1059 0 is_stmt 0 discriminator 1
 683 0010 002A     		cmp	r2, #0
 684 0012 42D0     		beq	.L51
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 685              		.loc 1 1067 0 is_stmt 1
 686 0014 8023     		movs	r3, #128
 687 0016 5B01     		lsls	r3, r3, #5
 688 0018 A068     		ldr	r0, [r4, #8]
 689 001a 9842     		cmp	r0, r3
 690 001c 32D0     		beq	.L54
 691              	.L48:
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 692              		.loc 1 1076 0
 693 001e 6823     		movs	r3, #104
 694 0020 E35C     		ldrb	r3, [r4, r3]
 695 0022 012B     		cmp	r3, #1
 696 0024 3BD0     		beq	.L53
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 697              		.loc 1 1076 0 is_stmt 0 discriminator 2
 698 0026 6827     		movs	r7, #104
 699 0028 0126     		movs	r6, #1
 700 002a E655     		strb	r6, [r4, r7]
ARM GAS  /tmp/cc5Zd4W1.s 			page 57


1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 701              		.loc 1 1078 0 is_stmt 1 discriminator 2
 702 002c 6165     		str	r1, [r4, #84]
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 703              		.loc 1 1079 0 discriminator 2
 704 002e 5823     		movs	r3, #88
 705 0030 E252     		strh	r2, [r4, r3]
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 706              		.loc 1 1081 0 discriminator 2
 707 0032 0025     		movs	r5, #0
 708 0034 E566     		str	r5, [r4, #108]
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 709              		.loc 1 1082 0 discriminator 2
 710 0036 1233     		adds	r3, r3, #18
 711 0038 2221     		movs	r1, #34
 712              	.LVL56:
 713 003a E154     		strb	r1, [r4, r3]
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 714              		.loc 1 1085 0 discriminator 2
 715 003c 636E     		ldr	r3, [r4, #100]
 716 003e 1949     		ldr	r1, .L55
 717 0040 9962     		str	r1, [r3, #40]
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 718              		.loc 1 1088 0 discriminator 2
 719 0042 636E     		ldr	r3, [r4, #100]
 720 0044 1849     		ldr	r1, .L55+4
 721 0046 D962     		str	r1, [r3, #44]
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 722              		.loc 1 1091 0 discriminator 2
 723 0048 636E     		ldr	r3, [r4, #100]
 724 004a 1849     		ldr	r1, .L55+8
 725 004c 1963     		str	r1, [r3, #48]
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 726              		.loc 1 1094 0 discriminator 2
 727 004e 636E     		ldr	r3, [r4, #100]
 728 0050 5D63     		str	r5, [r3, #52]
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 729              		.loc 1 1097 0 discriminator 2
 730 0052 2168     		ldr	r1, [r4]
 731 0054 2431     		adds	r1, r1, #36
 732 0056 1300     		movs	r3, r2
 733 0058 626D     		ldr	r2, [r4, #84]
 734              	.LVL57:
 735 005a 606E     		ldr	r0, [r4, #100]
 736 005c FFF7FEFF 		bl	HAL_DMA_Start_IT
 737              	.LVL58:
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 738              		.loc 1 1100 0 discriminator 2
 739 0060 E555     		strb	r5, [r4, r7]
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 740              		.loc 1 1103 0 discriminator 2
 741 0062 2268     		ldr	r2, [r4]
 742 0064 1168     		ldr	r1, [r2]
 743 0066 8023     		movs	r3, #128
 744 0068 5B00     		lsls	r3, r3, #1
 745 006a 0B43     		orrs	r3, r1
 746 006c 1360     		str	r3, [r2]
ARM GAS  /tmp/cc5Zd4W1.s 			page 58


1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 747              		.loc 1 1106 0 discriminator 2
 748 006e 2268     		ldr	r2, [r4]
 749 0070 9368     		ldr	r3, [r2, #8]
 750 0072 3343     		orrs	r3, r6
 751 0074 9360     		str	r3, [r2, #8]
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 752              		.loc 1 1110 0 discriminator 2
 753 0076 2268     		ldr	r2, [r4]
 754 0078 9368     		ldr	r3, [r2, #8]
 755 007a 4021     		movs	r1, #64
 756 007c 0B43     		orrs	r3, r1
 757 007e 9360     		str	r3, [r2, #8]
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 758              		.loc 1 1112 0 discriminator 2
 759 0080 0020     		movs	r0, #0
 760 0082 07E0     		b	.L47
 761              	.LVL59:
 762              	.L54:
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 763              		.loc 1 1067 0 discriminator 1
 764 0084 2369     		ldr	r3, [r4, #16]
 765 0086 002B     		cmp	r3, #0
 766 0088 C9D1     		bne	.L48
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 767              		.loc 1 1069 0
 768 008a CB07     		lsls	r3, r1, #31
 769 008c C7D5     		bpl	.L48
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 770              		.loc 1 1071 0
 771 008e 0120     		movs	r0, #1
 772 0090 00E0     		b	.L47
 773              	.L49:
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 774              		.loc 1 1116 0
 775 0092 0220     		movs	r0, #2
 776              	.LVL60:
 777              	.L47:
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 778              		.loc 1 1118 0
 779              		@ sp needed
 780              	.LVL61:
 781 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 782              	.LVL62:
 783              	.L50:
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 784              		.loc 1 1061 0
 785 0096 0120     		movs	r0, #1
 786 0098 FCE7     		b	.L47
 787              	.L51:
 788 009a 0120     		movs	r0, #1
 789 009c FAE7     		b	.L47
 790              	.L53:
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 791              		.loc 1 1076 0
 792 009e 0220     		movs	r0, #2
 793 00a0 F8E7     		b	.L47
ARM GAS  /tmp/cc5Zd4W1.s 			page 59


 794              	.L56:
 795 00a2 C046     		.align	2
 796              	.L55:
 797 00a4 00000000 		.word	UART_DMAReceiveCplt
 798 00a8 00000000 		.word	UART_DMARxHalfCplt
 799 00ac 00000000 		.word	UART_DMAError
 800              		.cfi_endproc
 801              	.LFE48:
 803              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 804              		.align	1
 805              		.global	HAL_UART_DMAPause
 806              		.syntax unified
 807              		.code	16
 808              		.thumb_func
 809              		.fpu softvfp
 811              	HAL_UART_DMAPause:
 812              	.LFB49:
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 813              		.loc 1 1126 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 0
 816              		@ frame_needed = 0, uses_anonymous_args = 0
 817              		@ link register save eliminated.
 818              	.LVL63:
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 819              		.loc 1 1128 0
 820 0000 6823     		movs	r3, #104
 821 0002 C35C     		ldrb	r3, [r0, r3]
 822 0004 012B     		cmp	r3, #1
 823 0006 2CD0     		beq	.L61
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 824              		.loc 1 1128 0 is_stmt 0 discriminator 2
 825 0008 6823     		movs	r3, #104
 826 000a 0122     		movs	r2, #1
 827 000c C254     		strb	r2, [r0, r3]
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 828              		.loc 1 1130 0 is_stmt 1 discriminator 2
 829 000e 0133     		adds	r3, r3, #1
 830 0010 C35C     		ldrb	r3, [r0, r3]
 831 0012 212B     		cmp	r3, #33
 832 0014 08D0     		beq	.L62
 833              	.L59:
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 834              		.loc 1 1136 0
 835 0016 6A23     		movs	r3, #106
 836 0018 C35C     		ldrb	r3, [r0, r3]
 837 001a 222B     		cmp	r3, #34
 838 001c 0DD0     		beq	.L63
 839              	.L60:
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 840              		.loc 1 1148 0
 841 001e 6823     		movs	r3, #104
 842 0020 0022     		movs	r2, #0
 843 0022 C254     		strb	r2, [r0, r3]
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 844              		.loc 1 1150 0
 845 0024 0020     		movs	r0, #0
ARM GAS  /tmp/cc5Zd4W1.s 			page 60


 846              	.LVL64:
 847              	.L58:
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 848              		.loc 1 1151 0
 849              		@ sp needed
 850 0026 7047     		bx	lr
 851              	.LVL65:
 852              	.L62:
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 853              		.loc 1 1131 0 discriminator 1
 854 0028 0368     		ldr	r3, [r0]
 855 002a 9A68     		ldr	r2, [r3, #8]
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 856              		.loc 1 1130 0 discriminator 1
 857 002c 1206     		lsls	r2, r2, #24
 858 002e F2D5     		bpl	.L59
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 859              		.loc 1 1134 0
 860 0030 9A68     		ldr	r2, [r3, #8]
 861 0032 8021     		movs	r1, #128
 862 0034 8A43     		bics	r2, r1
 863 0036 9A60     		str	r2, [r3, #8]
 864 0038 EDE7     		b	.L59
 865              	.L63:
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 866              		.loc 1 1137 0 discriminator 1
 867 003a 0368     		ldr	r3, [r0]
 868 003c 9A68     		ldr	r2, [r3, #8]
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 869              		.loc 1 1136 0 discriminator 1
 870 003e 5206     		lsls	r2, r2, #25
 871 0040 EDD5     		bpl	.L60
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 872              		.loc 1 1140 0
 873 0042 1A68     		ldr	r2, [r3]
 874 0044 0849     		ldr	r1, .L64
 875 0046 0A40     		ands	r2, r1
 876 0048 1A60     		str	r2, [r3]
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 877              		.loc 1 1141 0
 878 004a 0268     		ldr	r2, [r0]
 879 004c 9368     		ldr	r3, [r2, #8]
 880 004e 0331     		adds	r1, r1, #3
 881 0050 FF31     		adds	r1, r1, #255
 882 0052 8B43     		bics	r3, r1
 883 0054 9360     		str	r3, [r2, #8]
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 884              		.loc 1 1144 0
 885 0056 0268     		ldr	r2, [r0]
 886 0058 9368     		ldr	r3, [r2, #8]
 887 005a 3F31     		adds	r1, r1, #63
 888 005c 8B43     		bics	r3, r1
 889 005e 9360     		str	r3, [r2, #8]
 890 0060 DDE7     		b	.L60
 891              	.L61:
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 892              		.loc 1 1128 0
ARM GAS  /tmp/cc5Zd4W1.s 			page 61


 893 0062 0220     		movs	r0, #2
 894              	.LVL66:
 895 0064 DFE7     		b	.L58
 896              	.L65:
 897 0066 C046     		.align	2
 898              	.L64:
 899 0068 FFFEFFFF 		.word	-257
 900              		.cfi_endproc
 901              	.LFE49:
 903              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 904              		.align	1
 905              		.global	HAL_UART_DMAResume
 906              		.syntax unified
 907              		.code	16
 908              		.thumb_func
 909              		.fpu softvfp
 911              	HAL_UART_DMAResume:
 912              	.LFB50:
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 913              		.loc 1 1159 0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 0
 916              		@ frame_needed = 0, uses_anonymous_args = 0
 917              		@ link register save eliminated.
 918              	.LVL67:
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 919              		.loc 1 1161 0
 920 0000 6823     		movs	r3, #104
 921 0002 C35C     		ldrb	r3, [r0, r3]
 922 0004 012B     		cmp	r3, #1
 923 0006 29D0     		beq	.L70
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 924              		.loc 1 1161 0 is_stmt 0 discriminator 2
 925 0008 6823     		movs	r3, #104
 926 000a 0122     		movs	r2, #1
 927 000c C254     		strb	r2, [r0, r3]
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 928              		.loc 1 1163 0 is_stmt 1 discriminator 2
 929 000e 0133     		adds	r3, r3, #1
 930 0010 C35C     		ldrb	r3, [r0, r3]
 931 0012 212B     		cmp	r3, #33
 932 0014 08D0     		beq	.L71
 933              	.L68:
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 934              		.loc 1 1168 0
 935 0016 6A23     		movs	r3, #106
 936 0018 C35C     		ldrb	r3, [r0, r3]
 937 001a 222B     		cmp	r3, #34
 938 001c 0AD0     		beq	.L72
 939              	.L69:
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 940              		.loc 1 1182 0
 941 001e 6823     		movs	r3, #104
 942 0020 0022     		movs	r2, #0
 943 0022 C254     		strb	r2, [r0, r3]
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 944              		.loc 1 1184 0
ARM GAS  /tmp/cc5Zd4W1.s 			page 62


 945 0024 0020     		movs	r0, #0
 946              	.LVL68:
 947              	.L67:
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 948              		.loc 1 1185 0
 949              		@ sp needed
 950 0026 7047     		bx	lr
 951              	.LVL69:
 952              	.L71:
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 953              		.loc 1 1166 0
 954 0028 0268     		ldr	r2, [r0]
 955 002a 9368     		ldr	r3, [r2, #8]
 956 002c 8021     		movs	r1, #128
 957 002e 0B43     		orrs	r3, r1
 958 0030 9360     		str	r3, [r2, #8]
 959 0032 F0E7     		b	.L68
 960              	.L72:
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 961              		.loc 1 1171 0
 962 0034 0368     		ldr	r3, [r0]
 963 0036 0822     		movs	r2, #8
 964 0038 1A62     		str	r2, [r3, #32]
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 965              		.loc 1 1174 0
 966 003a 0268     		ldr	r2, [r0]
 967 003c 1168     		ldr	r1, [r2]
 968 003e 8023     		movs	r3, #128
 969 0040 5B00     		lsls	r3, r3, #1
 970 0042 0B43     		orrs	r3, r1
 971 0044 1360     		str	r3, [r2]
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 972              		.loc 1 1175 0
 973 0046 0268     		ldr	r2, [r0]
 974 0048 9368     		ldr	r3, [r2, #8]
 975 004a 0121     		movs	r1, #1
 976 004c 0B43     		orrs	r3, r1
 977 004e 9360     		str	r3, [r2, #8]
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 978              		.loc 1 1178 0
 979 0050 0268     		ldr	r2, [r0]
 980 0052 9368     		ldr	r3, [r2, #8]
 981 0054 3F31     		adds	r1, r1, #63
 982 0056 0B43     		orrs	r3, r1
 983 0058 9360     		str	r3, [r2, #8]
 984 005a E0E7     		b	.L69
 985              	.L70:
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 986              		.loc 1 1161 0
 987 005c 0220     		movs	r0, #2
 988              	.LVL70:
 989 005e E2E7     		b	.L67
 990              		.cfi_endproc
 991              	.LFE50:
 993              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 994              		.align	1
 995              		.global	HAL_UART_DMAStop
ARM GAS  /tmp/cc5Zd4W1.s 			page 63


 996              		.syntax unified
 997              		.code	16
 998              		.thumb_func
 999              		.fpu softvfp
 1001              	HAL_UART_DMAStop:
 1002              	.LFB51:
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1003              		.loc 1 1193 0
 1004              		.cfi_startproc
 1005              		@ args = 0, pretend = 0, frame = 0
 1006              		@ frame_needed = 0, uses_anonymous_args = 0
 1007              	.LVL71:
 1008 0000 10B5     		push	{r4, lr}
 1009              	.LCFI5:
 1010              		.cfi_def_cfa_offset 8
 1011              		.cfi_offset 4, -8
 1012              		.cfi_offset 14, -4
 1013 0002 0400     		movs	r4, r0
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1014              		.loc 1 1202 0
 1015 0004 6923     		movs	r3, #105
 1016 0006 C35C     		ldrb	r3, [r0, r3]
 1017 0008 212B     		cmp	r3, #33
 1018 000a 05D0     		beq	.L78
 1019              	.LVL72:
 1020              	.L74:
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1021              		.loc 1 1217 0
 1022 000c 6A23     		movs	r3, #106
 1023 000e E35C     		ldrb	r3, [r4, r3]
 1024 0010 222B     		cmp	r3, #34
 1025 0012 12D0     		beq	.L79
 1026              	.L76:
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1027              		.loc 1 1232 0
 1028 0014 0020     		movs	r0, #0
 1029              		@ sp needed
 1030              	.LVL73:
 1031 0016 10BD     		pop	{r4, pc}
 1032              	.LVL74:
 1033              	.L78:
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1034              		.loc 1 1203 0 discriminator 1
 1035 0018 0368     		ldr	r3, [r0]
 1036 001a 9A68     		ldr	r2, [r3, #8]
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1037              		.loc 1 1202 0 discriminator 1
 1038 001c 1206     		lsls	r2, r2, #24
 1039 001e F5D5     		bpl	.L74
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1040              		.loc 1 1205 0
 1041 0020 9A68     		ldr	r2, [r3, #8]
 1042 0022 8021     		movs	r1, #128
 1043 0024 8A43     		bics	r2, r1
 1044 0026 9A60     		str	r2, [r3, #8]
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1045              		.loc 1 1208 0
ARM GAS  /tmp/cc5Zd4W1.s 			page 64


 1046 0028 006E     		ldr	r0, [r0, #96]
 1047              	.LVL75:
 1048 002a 0028     		cmp	r0, #0
 1049 002c 01D0     		beq	.L75
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1050              		.loc 1 1210 0
 1051 002e FFF7FEFF 		bl	HAL_DMA_Abort
 1052              	.LVL76:
 1053              	.L75:
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1054              		.loc 1 1213 0
 1055 0032 2000     		movs	r0, r4
 1056 0034 FFF7FEFF 		bl	UART_EndTxTransfer
 1057              	.LVL77:
 1058 0038 E8E7     		b	.L74
 1059              	.L79:
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1060              		.loc 1 1218 0 discriminator 1
 1061 003a 2368     		ldr	r3, [r4]
 1062 003c 9A68     		ldr	r2, [r3, #8]
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1063              		.loc 1 1217 0 discriminator 1
 1064 003e 5206     		lsls	r2, r2, #25
 1065 0040 E8D5     		bpl	.L76
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1066              		.loc 1 1220 0
 1067 0042 9A68     		ldr	r2, [r3, #8]
 1068 0044 4021     		movs	r1, #64
 1069 0046 8A43     		bics	r2, r1
 1070 0048 9A60     		str	r2, [r3, #8]
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1071              		.loc 1 1223 0
 1072 004a 606E     		ldr	r0, [r4, #100]
 1073 004c 0028     		cmp	r0, #0
 1074 004e 01D0     		beq	.L77
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1075              		.loc 1 1225 0
 1076 0050 FFF7FEFF 		bl	HAL_DMA_Abort
 1077              	.LVL78:
 1078              	.L77:
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1079              		.loc 1 1228 0
 1080 0054 2000     		movs	r0, r4
 1081 0056 FFF7FEFF 		bl	UART_EndRxTransfer
 1082              	.LVL79:
 1083 005a DBE7     		b	.L76
 1084              		.cfi_endproc
 1085              	.LFE51:
 1087              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1088              		.align	1
 1089              		.global	HAL_UART_Abort
 1090              		.syntax unified
 1091              		.code	16
 1092              		.thumb_func
 1093              		.fpu softvfp
 1095              	HAL_UART_Abort:
 1096              	.LFB52:
ARM GAS  /tmp/cc5Zd4W1.s 			page 65


1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1097              		.loc 1 1247 0
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 0
 1100              		@ frame_needed = 0, uses_anonymous_args = 0
 1101              	.LVL80:
 1102 0000 10B5     		push	{r4, lr}
 1103              	.LCFI6:
 1104              		.cfi_def_cfa_offset 8
 1105              		.cfi_offset 4, -8
 1106              		.cfi_offset 14, -4
 1107 0002 0400     		movs	r4, r0
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1108              		.loc 1 1249 0
 1109 0004 0268     		ldr	r2, [r0]
 1110 0006 1368     		ldr	r3, [r2]
 1111 0008 1C49     		ldr	r1, .L83
 1112 000a 0B40     		ands	r3, r1
 1113 000c 1360     		str	r3, [r2]
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1114              		.loc 1 1250 0
 1115 000e 0268     		ldr	r2, [r0]
 1116 0010 9368     		ldr	r3, [r2, #8]
 1117 0012 E331     		adds	r1, r1, #227
 1118 0014 FF31     		adds	r1, r1, #255
 1119 0016 8B43     		bics	r3, r1
 1120 0018 9360     		str	r3, [r2, #8]
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1121              		.loc 1 1253 0
 1122 001a 0368     		ldr	r3, [r0]
 1123 001c 9A68     		ldr	r2, [r3, #8]
 1124 001e 1206     		lsls	r2, r2, #24
 1125 0020 0BD5     		bpl	.L81
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1126              		.loc 1 1255 0
 1127 0022 9A68     		ldr	r2, [r3, #8]
 1128 0024 7F31     		adds	r1, r1, #127
 1129 0026 8A43     		bics	r2, r1
 1130 0028 9A60     		str	r2, [r3, #8]
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1131              		.loc 1 1258 0
 1132 002a 036E     		ldr	r3, [r0, #96]
 1133 002c 002B     		cmp	r3, #0
 1134 002e 04D0     		beq	.L81
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1135              		.loc 1 1262 0
 1136 0030 0022     		movs	r2, #0
 1137 0032 5A63     		str	r2, [r3, #52]
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1138              		.loc 1 1264 0
 1139 0034 006E     		ldr	r0, [r0, #96]
 1140              	.LVL81:
 1141 0036 FFF7FEFF 		bl	HAL_DMA_Abort
 1142              	.LVL82:
 1143              	.L81:
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1144              		.loc 1 1269 0
ARM GAS  /tmp/cc5Zd4W1.s 			page 66


 1145 003a 2368     		ldr	r3, [r4]
 1146 003c 9A68     		ldr	r2, [r3, #8]
 1147 003e 5206     		lsls	r2, r2, #25
 1148 0040 0BD5     		bpl	.L82
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1149              		.loc 1 1271 0
 1150 0042 9A68     		ldr	r2, [r3, #8]
 1151 0044 4021     		movs	r1, #64
 1152 0046 8A43     		bics	r2, r1
 1153 0048 9A60     		str	r2, [r3, #8]
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1154              		.loc 1 1274 0
 1155 004a 636E     		ldr	r3, [r4, #100]
 1156 004c 002B     		cmp	r3, #0
 1157 004e 04D0     		beq	.L82
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1158              		.loc 1 1278 0
 1159 0050 0022     		movs	r2, #0
 1160 0052 5A63     		str	r2, [r3, #52]
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1161              		.loc 1 1280 0
 1162 0054 606E     		ldr	r0, [r4, #100]
 1163 0056 FFF7FEFF 		bl	HAL_DMA_Abort
 1164              	.LVL83:
 1165              	.L82:
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U; 
 1166              		.loc 1 1285 0
 1167 005a 0023     		movs	r3, #0
 1168 005c 5222     		movs	r2, #82
 1169 005e A352     		strh	r3, [r4, r2]
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1170              		.loc 1 1286 0
 1171 0060 0832     		adds	r2, r2, #8
 1172 0062 A352     		strh	r3, [r4, r2]
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1173              		.loc 1 1289 0
 1174 0064 2268     		ldr	r2, [r4]
 1175 0066 0F21     		movs	r1, #15
 1176 0068 1162     		str	r1, [r2, #32]
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1177              		.loc 1 1292 0
 1178 006a 2022     		movs	r2, #32
 1179 006c 5A31     		adds	r1, r1, #90
 1180 006e 6254     		strb	r2, [r4, r1]
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1181              		.loc 1 1293 0
 1182 0070 0131     		adds	r1, r1, #1
 1183 0072 6254     		strb	r2, [r4, r1]
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1184              		.loc 1 1296 0
 1185 0074 E366     		str	r3, [r4, #108]
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1186              		.loc 1 1299 0
 1187 0076 0020     		movs	r0, #0
 1188              		@ sp needed
 1189              	.LVL84:
 1190 0078 10BD     		pop	{r4, pc}
ARM GAS  /tmp/cc5Zd4W1.s 			page 67


 1191              	.L84:
 1192 007a C046     		.align	2
 1193              	.L83:
 1194 007c 1FFEFFFF 		.word	-481
 1195              		.cfi_endproc
 1196              	.LFE52:
 1198              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1199              		.align	1
 1200              		.global	HAL_UART_AbortTransmit
 1201              		.syntax unified
 1202              		.code	16
 1203              		.thumb_func
 1204              		.fpu softvfp
 1206              	HAL_UART_AbortTransmit:
 1207              	.LFB53:
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1208              		.loc 1 1314 0
 1209              		.cfi_startproc
 1210              		@ args = 0, pretend = 0, frame = 0
 1211              		@ frame_needed = 0, uses_anonymous_args = 0
 1212              	.LVL85:
 1213 0000 10B5     		push	{r4, lr}
 1214              	.LCFI7:
 1215              		.cfi_def_cfa_offset 8
 1216              		.cfi_offset 4, -8
 1217              		.cfi_offset 14, -4
 1218 0002 0400     		movs	r4, r0
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1219              		.loc 1 1316 0
 1220 0004 0268     		ldr	r2, [r0]
 1221 0006 1368     		ldr	r3, [r2]
 1222 0008 C021     		movs	r1, #192
 1223 000a 8B43     		bics	r3, r1
 1224 000c 1360     		str	r3, [r2]
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1225              		.loc 1 1319 0
 1226 000e 0368     		ldr	r3, [r0]
 1227 0010 9A68     		ldr	r2, [r3, #8]
 1228 0012 1206     		lsls	r2, r2, #24
 1229 0014 0BD5     		bpl	.L86
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1230              		.loc 1 1321 0
 1231 0016 9A68     		ldr	r2, [r3, #8]
 1232 0018 4039     		subs	r1, r1, #64
 1233 001a 8A43     		bics	r2, r1
 1234 001c 9A60     		str	r2, [r3, #8]
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1235              		.loc 1 1324 0
 1236 001e 036E     		ldr	r3, [r0, #96]
 1237 0020 002B     		cmp	r3, #0
 1238 0022 04D0     		beq	.L86
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1239              		.loc 1 1328 0
 1240 0024 0022     		movs	r2, #0
 1241 0026 5A63     		str	r2, [r3, #52]
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1242              		.loc 1 1330 0
ARM GAS  /tmp/cc5Zd4W1.s 			page 68


 1243 0028 006E     		ldr	r0, [r0, #96]
 1244              	.LVL86:
 1245 002a FFF7FEFF 		bl	HAL_DMA_Abort
 1246              	.LVL87:
 1247              	.L86:
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1248              		.loc 1 1335 0
 1249 002e 5223     		movs	r3, #82
 1250 0030 0022     		movs	r2, #0
 1251 0032 E252     		strh	r2, [r4, r3]
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1252              		.loc 1 1338 0
 1253 0034 1733     		adds	r3, r3, #23
 1254 0036 2032     		adds	r2, r2, #32
 1255 0038 E254     		strb	r2, [r4, r3]
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1256              		.loc 1 1341 0
 1257 003a 0020     		movs	r0, #0
 1258              		@ sp needed
 1259              	.LVL88:
 1260 003c 10BD     		pop	{r4, pc}
 1261              		.cfi_endproc
 1262              	.LFE53:
 1264              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1265              		.align	1
 1266              		.global	HAL_UART_AbortReceive
 1267              		.syntax unified
 1268              		.code	16
 1269              		.thumb_func
 1270              		.fpu softvfp
 1272              	HAL_UART_AbortReceive:
 1273              	.LFB54:
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1274              		.loc 1 1356 0
 1275              		.cfi_startproc
 1276              		@ args = 0, pretend = 0, frame = 0
 1277              		@ frame_needed = 0, uses_anonymous_args = 0
 1278              	.LVL89:
 1279 0000 10B5     		push	{r4, lr}
 1280              	.LCFI8:
 1281              		.cfi_def_cfa_offset 8
 1282              		.cfi_offset 4, -8
 1283              		.cfi_offset 14, -4
 1284 0002 0400     		movs	r4, r0
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1285              		.loc 1 1358 0
 1286 0004 0268     		ldr	r2, [r0]
 1287 0006 1368     		ldr	r3, [r2]
 1288 0008 1149     		ldr	r1, .L89
 1289 000a 0B40     		ands	r3, r1
 1290 000c 1360     		str	r3, [r2]
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1291              		.loc 1 1359 0
 1292 000e 0268     		ldr	r2, [r0]
 1293 0010 9368     		ldr	r3, [r2, #8]
 1294 0012 2331     		adds	r1, r1, #35
 1295 0014 FF31     		adds	r1, r1, #255
ARM GAS  /tmp/cc5Zd4W1.s 			page 69


 1296 0016 8B43     		bics	r3, r1
 1297 0018 9360     		str	r3, [r2, #8]
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1298              		.loc 1 1362 0
 1299 001a 0368     		ldr	r3, [r0]
 1300 001c 9A68     		ldr	r2, [r3, #8]
 1301 001e 5206     		lsls	r2, r2, #25
 1302 0020 0BD5     		bpl	.L88
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1303              		.loc 1 1364 0
 1304 0022 9A68     		ldr	r2, [r3, #8]
 1305 0024 3F31     		adds	r1, r1, #63
 1306 0026 8A43     		bics	r2, r1
 1307 0028 9A60     		str	r2, [r3, #8]
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1308              		.loc 1 1367 0
 1309 002a 436E     		ldr	r3, [r0, #100]
 1310 002c 002B     		cmp	r3, #0
 1311 002e 04D0     		beq	.L88
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1312              		.loc 1 1371 0
 1313 0030 0022     		movs	r2, #0
 1314 0032 5A63     		str	r2, [r3, #52]
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1315              		.loc 1 1373 0
 1316 0034 406E     		ldr	r0, [r0, #100]
 1317              	.LVL90:
 1318 0036 FFF7FEFF 		bl	HAL_DMA_Abort
 1319              	.LVL91:
 1320              	.L88:
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1321              		.loc 1 1378 0
 1322 003a 5A23     		movs	r3, #90
 1323 003c 0022     		movs	r2, #0
 1324 003e E252     		strh	r2, [r4, r3]
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1325              		.loc 1 1381 0
 1326 0040 2368     		ldr	r3, [r4]
 1327 0042 0F32     		adds	r2, r2, #15
 1328 0044 1A62     		str	r2, [r3, #32]
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1329              		.loc 1 1384 0
 1330 0046 6A23     		movs	r3, #106
 1331 0048 1132     		adds	r2, r2, #17
 1332 004a E254     		strb	r2, [r4, r3]
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1333              		.loc 1 1387 0
 1334 004c 0020     		movs	r0, #0
 1335              		@ sp needed
 1336              	.LVL92:
 1337 004e 10BD     		pop	{r4, pc}
 1338              	.L90:
 1339              		.align	2
 1340              	.L89:
 1341 0050 DFFEFFFF 		.word	-289
 1342              		.cfi_endproc
 1343              	.LFE54:
ARM GAS  /tmp/cc5Zd4W1.s 			page 70


 1345              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1346              		.align	1
 1347              		.weak	HAL_UART_TxCpltCallback
 1348              		.syntax unified
 1349              		.code	16
 1350              		.thumb_func
 1351              		.fpu softvfp
 1353              	HAL_UART_TxCpltCallback:
 1354              	.LFB59:
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1355              		.loc 1 1811 0
 1356              		.cfi_startproc
 1357              		@ args = 0, pretend = 0, frame = 0
 1358              		@ frame_needed = 0, uses_anonymous_args = 0
 1359              		@ link register save eliminated.
 1360              	.LVL93:
1818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1361              		.loc 1 1818 0
 1362              		@ sp needed
 1363 0000 7047     		bx	lr
 1364              		.cfi_endproc
 1365              	.LFE59:
 1367              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1368              		.align	1
 1369              		.syntax unified
 1370              		.code	16
 1371              		.thumb_func
 1372              		.fpu softvfp
 1374              	UART_DMATransmitCplt:
 1375              	.LFB80:
2405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
2409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1376              		.loc 1 2413 0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 0
 1379              		@ frame_needed = 0, uses_anonymous_args = 0
 1380              	.LVL94:
 1381 0000 10B5     		push	{r4, lr}
 1382              	.LCFI9:
 1383              		.cfi_def_cfa_offset 8
 1384              		.cfi_offset 4, -8
 1385              		.cfi_offset 14, -4
2414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1386              		.loc 1 2414 0
 1387 0002 436A     		ldr	r3, [r0, #36]
 1388              	.LVL95:
2415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Normal mode */
2417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 1389              		.loc 1 2417 0
ARM GAS  /tmp/cc5Zd4W1.s 			page 71


 1390 0004 0268     		ldr	r2, [r0]
 1391 0006 1268     		ldr	r2, [r2]
 1392 0008 9206     		lsls	r2, r2, #26
 1393 000a 0DD4     		bmi	.L93
2418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0;
 1394              		.loc 1 2419 0
 1395 000c 5222     		movs	r2, #82
 1396 000e 0021     		movs	r1, #0
 1397 0010 9952     		strh	r1, [r3, r2]
2420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
2422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
2423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1398              		.loc 1 2423 0
 1399 0012 1968     		ldr	r1, [r3]
 1400 0014 8A68     		ldr	r2, [r1, #8]
 1401 0016 8020     		movs	r0, #128
 1402              	.LVL96:
 1403 0018 8243     		bics	r2, r0
 1404 001a 8A60     		str	r2, [r1, #8]
2424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1405              		.loc 1 2426 0
 1406 001c 1A68     		ldr	r2, [r3]
 1407 001e 1368     		ldr	r3, [r2]
 1408              	.LVL97:
 1409 0020 4021     		movs	r1, #64
 1410 0022 0B43     		orrs	r3, r1
 1411 0024 1360     		str	r3, [r2]
 1412              	.L92:
2427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Circular mode */
2429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1413              		.loc 1 2434 0
 1414              		@ sp needed
 1415 0026 10BD     		pop	{r4, pc}
 1416              	.LVL98:
 1417              	.L93:
2431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1418              		.loc 1 2431 0
 1419 0028 1800     		movs	r0, r3
 1420              	.LVL99:
 1421 002a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1422              	.LVL100:
 1423              		.loc 1 2434 0
 1424 002e FAE7     		b	.L92
 1425              		.cfi_endproc
 1426              	.LFE80:
 1428              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1429              		.align	1
ARM GAS  /tmp/cc5Zd4W1.s 			page 72


 1430              		.weak	HAL_UART_TxHalfCpltCallback
 1431              		.syntax unified
 1432              		.code	16
 1433              		.thumb_func
 1434              		.fpu softvfp
 1436              	HAL_UART_TxHalfCpltCallback:
 1437              	.LFB60:
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1438              		.loc 1 1826 0
 1439              		.cfi_startproc
 1440              		@ args = 0, pretend = 0, frame = 0
 1441              		@ frame_needed = 0, uses_anonymous_args = 0
 1442              		@ link register save eliminated.
 1443              	.LVL101:
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1444              		.loc 1 1833 0
 1445              		@ sp needed
 1446 0000 7047     		bx	lr
 1447              		.cfi_endproc
 1448              	.LFE60:
 1450              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1451              		.align	1
 1452              		.syntax unified
 1453              		.code	16
 1454              		.thumb_func
 1455              		.fpu softvfp
 1457              	UART_DMATxHalfCplt:
 1458              	.LFB81:
2435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
2438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1459              		.loc 1 2442 0
 1460              		.cfi_startproc
 1461              		@ args = 0, pretend = 0, frame = 0
 1462              		@ frame_needed = 0, uses_anonymous_args = 0
 1463              	.LVL102:
 1464 0000 10B5     		push	{r4, lr}
 1465              	.LCFI10:
 1466              		.cfi_def_cfa_offset 8
 1467              		.cfi_offset 4, -8
 1468              		.cfi_offset 14, -4
2443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1469              		.loc 1 2443 0
 1470 0002 406A     		ldr	r0, [r0, #36]
 1471              	.LVL103:
2444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 1472              		.loc 1 2445 0
 1473 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1474              	.LVL104:
2446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1475              		.loc 1 2446 0
ARM GAS  /tmp/cc5Zd4W1.s 			page 73


 1476              		@ sp needed
 1477 0008 10BD     		pop	{r4, pc}
 1478              		.cfi_endproc
 1479              	.LFE81:
 1481              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1482              		.align	1
 1483              		.weak	HAL_UART_RxCpltCallback
 1484              		.syntax unified
 1485              		.code	16
 1486              		.thumb_func
 1487              		.fpu softvfp
 1489              	HAL_UART_RxCpltCallback:
 1490              	.LFB61:
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1491              		.loc 1 1841 0
 1492              		.cfi_startproc
 1493              		@ args = 0, pretend = 0, frame = 0
 1494              		@ frame_needed = 0, uses_anonymous_args = 0
 1495              		@ link register save eliminated.
 1496              	.LVL105:
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1497              		.loc 1 1848 0
 1498              		@ sp needed
 1499 0000 7047     		bx	lr
 1500              		.cfi_endproc
 1501              	.LFE61:
 1503              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1504              		.align	1
 1505              		.syntax unified
 1506              		.code	16
 1507              		.thumb_func
 1508              		.fpu softvfp
 1510              	UART_DMAReceiveCplt:
 1511              	.LFB82:
2447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
2450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1512              		.loc 1 2454 0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 0
 1515              		@ frame_needed = 0, uses_anonymous_args = 0
 1516              	.LVL106:
 1517 0000 10B5     		push	{r4, lr}
 1518              	.LCFI11:
 1519              		.cfi_def_cfa_offset 8
 1520              		.cfi_offset 4, -8
 1521              		.cfi_offset 14, -4
2455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1522              		.loc 1 2455 0
 1523 0002 436A     		ldr	r3, [r0, #36]
 1524              	.LVL107:
2456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/cc5Zd4W1.s 			page 74


2457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Normal mode */
2458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 1525              		.loc 1 2458 0
 1526 0004 0268     		ldr	r2, [r0]
 1527 0006 1268     		ldr	r2, [r2]
 1528 0008 9206     		lsls	r2, r2, #26
 1529 000a 15D4     		bmi	.L99
2459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1530              		.loc 1 2460 0
 1531 000c 5A22     		movs	r2, #90
 1532 000e 0021     		movs	r1, #0
 1533 0010 9952     		strh	r1, [r3, r2]
2461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1534              		.loc 1 2463 0
 1535 0012 1968     		ldr	r1, [r3]
 1536 0014 0A68     		ldr	r2, [r1]
 1537 0016 0A48     		ldr	r0, .L100
 1538              	.LVL108:
 1539 0018 0240     		ands	r2, r0
 1540 001a 0A60     		str	r2, [r1]
2464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1541              		.loc 1 2464 0
 1542 001c 1968     		ldr	r1, [r3]
 1543 001e 8A68     		ldr	r2, [r1, #8]
 1544 0020 0330     		adds	r0, r0, #3
 1545 0022 FF30     		adds	r0, r0, #255
 1546 0024 8243     		bics	r2, r0
 1547 0026 8A60     		str	r2, [r1, #8]
2465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
2468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1548              		.loc 1 2468 0
 1549 0028 1968     		ldr	r1, [r3]
 1550 002a 8A68     		ldr	r2, [r1, #8]
 1551 002c 3F30     		adds	r0, r0, #63
 1552 002e 8243     		bics	r2, r0
 1553 0030 8A60     		str	r2, [r1, #8]
2469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1554              		.loc 1 2471 0
 1555 0032 6A22     		movs	r2, #106
 1556 0034 2021     		movs	r1, #32
 1557 0036 9954     		strb	r1, [r3, r2]
 1558              	.L99:
2472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 1559              		.loc 1 2474 0
 1560 0038 1800     		movs	r0, r3
 1561 003a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1562              	.LVL109:
2475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
ARM GAS  /tmp/cc5Zd4W1.s 			page 75


 1563              		.loc 1 2475 0
 1564              		@ sp needed
 1565 003e 10BD     		pop	{r4, pc}
 1566              	.L101:
 1567              		.align	2
 1568              	.L100:
 1569 0040 FFFEFFFF 		.word	-257
 1570              		.cfi_endproc
 1571              	.LFE82:
 1573              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1574              		.align	1
 1575              		.weak	HAL_UART_RxHalfCpltCallback
 1576              		.syntax unified
 1577              		.code	16
 1578              		.thumb_func
 1579              		.fpu softvfp
 1581              	HAL_UART_RxHalfCpltCallback:
 1582              	.LFB62:
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1583              		.loc 1 1856 0
 1584              		.cfi_startproc
 1585              		@ args = 0, pretend = 0, frame = 0
 1586              		@ frame_needed = 0, uses_anonymous_args = 0
 1587              		@ link register save eliminated.
 1588              	.LVL110:
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1589              		.loc 1 1863 0
 1590              		@ sp needed
 1591 0000 7047     		bx	lr
 1592              		.cfi_endproc
 1593              	.LFE62:
 1595              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 1596              		.align	1
 1597              		.syntax unified
 1598              		.code	16
 1599              		.thumb_func
 1600              		.fpu softvfp
 1602              	UART_DMARxHalfCplt:
 1603              	.LFB83:
2476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
2479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1604              		.loc 1 2483 0
 1605              		.cfi_startproc
 1606              		@ args = 0, pretend = 0, frame = 0
 1607              		@ frame_needed = 0, uses_anonymous_args = 0
 1608              	.LVL111:
 1609 0000 10B5     		push	{r4, lr}
 1610              	.LCFI12:
 1611              		.cfi_def_cfa_offset 8
 1612              		.cfi_offset 4, -8
 1613              		.cfi_offset 14, -4
ARM GAS  /tmp/cc5Zd4W1.s 			page 76


2484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1614              		.loc 1 2484 0
 1615 0002 406A     		ldr	r0, [r0, #36]
 1616              	.LVL112:
2485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 1617              		.loc 1 2486 0
 1618 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 1619              	.LVL113:
2487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1620              		.loc 1 2487 0
 1621              		@ sp needed
 1622 0008 10BD     		pop	{r4, pc}
 1623              		.cfi_endproc
 1624              	.LFE83:
 1626              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1627              		.align	1
 1628              		.weak	HAL_UART_ErrorCallback
 1629              		.syntax unified
 1630              		.code	16
 1631              		.thumb_func
 1632              		.fpu softvfp
 1634              	HAL_UART_ErrorCallback:
 1635              	.LFB63:
1871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1636              		.loc 1 1871 0
 1637              		.cfi_startproc
 1638              		@ args = 0, pretend = 0, frame = 0
 1639              		@ frame_needed = 0, uses_anonymous_args = 0
 1640              		@ link register save eliminated.
 1641              	.LVL114:
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1642              		.loc 1 1878 0
 1643              		@ sp needed
 1644 0000 7047     		bx	lr
 1645              		.cfi_endproc
 1646              	.LFE63:
 1648              		.section	.text.UART_DMAError,"ax",%progbits
 1649              		.align	1
 1650              		.syntax unified
 1651              		.code	16
 1652              		.thumb_func
 1653              		.fpu softvfp
 1655              	UART_DMAError:
 1656              	.LFB84:
2488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART communication error callback.
2491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1657              		.loc 1 2495 0
 1658              		.cfi_startproc
 1659              		@ args = 0, pretend = 0, frame = 0
 1660              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc5Zd4W1.s 			page 77


 1661              	.LVL115:
 1662 0000 10B5     		push	{r4, lr}
 1663              	.LCFI13:
 1664              		.cfi_def_cfa_offset 8
 1665              		.cfi_offset 4, -8
 1666              		.cfi_offset 14, -4
2496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1667              		.loc 1 2496 0
 1668 0002 446A     		ldr	r4, [r0, #36]
 1669              	.LVL116:
2497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (  (huart->gState == HAL_UART_STATE_BUSY_TX)
 1670              		.loc 1 2499 0
 1671 0004 6923     		movs	r3, #105
 1672 0006 E35C     		ldrb	r3, [r4, r3]
 1673 0008 212B     		cmp	r3, #33
 1674 000a 0BD0     		beq	.L108
 1675              	.LVL117:
 1676              	.L106:
2500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
2501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U;
2503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
2504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (  (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1677              		.loc 1 2507 0
 1678 000c 6A23     		movs	r3, #106
 1679 000e E35C     		ldrb	r3, [r4, r3]
 1680 0010 222B     		cmp	r3, #34
 1681 0012 12D0     		beq	.L109
 1682              	.L107:
2508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
2509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
2511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
2512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 1683              		.loc 1 2514 0
 1684 0014 E36E     		ldr	r3, [r4, #108]
 1685 0016 1022     		movs	r2, #16
 1686 0018 1343     		orrs	r3, r2
 1687 001a E366     		str	r3, [r4, #108]
2515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1688              		.loc 1 2515 0
 1689 001c 2000     		movs	r0, r4
 1690 001e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1691              	.LVL118:
2516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1692              		.loc 1 2516 0
 1693              		@ sp needed
 1694              	.LVL119:
 1695 0022 10BD     		pop	{r4, pc}
 1696              	.LVL120:
ARM GAS  /tmp/cc5Zd4W1.s 			page 78


 1697              	.L108:
2500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1698              		.loc 1 2500 0
 1699 0024 2368     		ldr	r3, [r4]
 1700 0026 9B68     		ldr	r3, [r3, #8]
 1701 0028 1B06     		lsls	r3, r3, #24
 1702 002a EFD5     		bpl	.L106
2502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 1703              		.loc 1 2502 0
 1704 002c 5223     		movs	r3, #82
 1705 002e 0022     		movs	r2, #0
 1706 0030 E252     		strh	r2, [r4, r3]
2503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1707              		.loc 1 2503 0
 1708 0032 2000     		movs	r0, r4
 1709              	.LVL121:
 1710 0034 FFF7FEFF 		bl	UART_EndTxTransfer
 1711              	.LVL122:
 1712 0038 E8E7     		b	.L106
 1713              	.L109:
2508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1714              		.loc 1 2508 0
 1715 003a 2368     		ldr	r3, [r4]
 1716 003c 9B68     		ldr	r3, [r3, #8]
 1717 003e 5B06     		lsls	r3, r3, #25
 1718 0040 E8D5     		bpl	.L107
2510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 1719              		.loc 1 2510 0
 1720 0042 5A23     		movs	r3, #90
 1721 0044 0022     		movs	r2, #0
 1722 0046 E252     		strh	r2, [r4, r3]
2511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1723              		.loc 1 2511 0
 1724 0048 2000     		movs	r0, r4
 1725 004a FFF7FEFF 		bl	UART_EndRxTransfer
 1726              	.LVL123:
 1727 004e E1E7     		b	.L107
 1728              		.cfi_endproc
 1729              	.LFE84:
 1731              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 1732              		.align	1
 1733              		.syntax unified
 1734              		.code	16
 1735              		.thumb_func
 1736              		.fpu softvfp
 1738              	UART_DMAAbortOnError:
 1739              	.LFB85:
2517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1740              		.loc 1 2525 0
ARM GAS  /tmp/cc5Zd4W1.s 			page 79


 1741              		.cfi_startproc
 1742              		@ args = 0, pretend = 0, frame = 0
 1743              		@ frame_needed = 0, uses_anonymous_args = 0
 1744              	.LVL124:
 1745 0000 10B5     		push	{r4, lr}
 1746              	.LCFI14:
 1747              		.cfi_def_cfa_offset 8
 1748              		.cfi_offset 4, -8
 1749              		.cfi_offset 14, -4
2526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1750              		.loc 1 2526 0
 1751 0002 406A     		ldr	r0, [r0, #36]
 1752              	.LVL125:
2527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1753              		.loc 1 2527 0
 1754 0004 0023     		movs	r3, #0
 1755 0006 5A22     		movs	r2, #90
 1756 0008 8352     		strh	r3, [r0, r2]
2528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1757              		.loc 1 2528 0
 1758 000a 083A     		subs	r2, r2, #8
 1759 000c 8352     		strh	r3, [r0, r2]
2529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1760              		.loc 1 2530 0
 1761 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1762              	.LVL126:
2531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1763              		.loc 1 2531 0
 1764              		@ sp needed
 1765 0012 10BD     		pop	{r4, pc}
 1766              		.cfi_endproc
 1767              	.LFE85:
 1769              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 1770              		.align	1
 1771              		.weak	HAL_UART_AbortCpltCallback
 1772              		.syntax unified
 1773              		.code	16
 1774              		.thumb_func
 1775              		.fpu softvfp
 1777              	HAL_UART_AbortCpltCallback:
 1778              	.LFB64:
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1779              		.loc 1 1886 0
 1780              		.cfi_startproc
 1781              		@ args = 0, pretend = 0, frame = 0
 1782              		@ frame_needed = 0, uses_anonymous_args = 0
 1783              		@ link register save eliminated.
 1784              	.LVL127:
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1785              		.loc 1 1893 0
 1786              		@ sp needed
 1787 0000 7047     		bx	lr
 1788              		.cfi_endproc
 1789              	.LFE64:
 1791              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 1792              		.align	1
ARM GAS  /tmp/cc5Zd4W1.s 			page 80


 1793              		.global	HAL_UART_Abort_IT
 1794              		.syntax unified
 1795              		.code	16
 1796              		.thumb_func
 1797              		.fpu softvfp
 1799              	HAL_UART_Abort_IT:
 1800              	.LFB55:
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 1801              		.loc 1 1404 0
 1802              		.cfi_startproc
 1803              		@ args = 0, pretend = 0, frame = 0
 1804              		@ frame_needed = 0, uses_anonymous_args = 0
 1805              	.LVL128:
 1806 0000 10B5     		push	{r4, lr}
 1807              	.LCFI15:
 1808              		.cfi_def_cfa_offset 8
 1809              		.cfi_offset 4, -8
 1810              		.cfi_offset 14, -4
 1811 0002 0400     		movs	r4, r0
 1812              	.LVL129:
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1813              		.loc 1 1408 0
 1814 0004 0268     		ldr	r2, [r0]
 1815 0006 1368     		ldr	r3, [r2]
 1816 0008 3049     		ldr	r1, .L124
 1817 000a 0B40     		ands	r3, r1
 1818 000c 1360     		str	r3, [r2]
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1819              		.loc 1 1409 0
 1820 000e 0268     		ldr	r2, [r0]
 1821 0010 9368     		ldr	r3, [r2, #8]
 1822 0012 E331     		adds	r1, r1, #227
 1823 0014 FF31     		adds	r1, r1, #255
 1824 0016 8B43     		bics	r3, r1
 1825 0018 9360     		str	r3, [r2, #8]
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1826              		.loc 1 1414 0
 1827 001a 036E     		ldr	r3, [r0, #96]
 1828 001c 002B     		cmp	r3, #0
 1829 001e 05D0     		beq	.L113
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1830              		.loc 1 1418 0
 1831 0020 0268     		ldr	r2, [r0]
 1832 0022 9268     		ldr	r2, [r2, #8]
 1833 0024 1206     		lsls	r2, r2, #24
 1834 0026 1ED5     		bpl	.L114
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1835              		.loc 1 1420 0
 1836 0028 294A     		ldr	r2, .L124+4
 1837 002a 5A63     		str	r2, [r3, #52]
 1838              	.L113:
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1839              		.loc 1 1428 0
 1840 002c 636E     		ldr	r3, [r4, #100]
 1841 002e 002B     		cmp	r3, #0
 1842 0030 05D0     		beq	.L115
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
ARM GAS  /tmp/cc5Zd4W1.s 			page 81


 1843              		.loc 1 1432 0
 1844 0032 2268     		ldr	r2, [r4]
 1845 0034 9268     		ldr	r2, [r2, #8]
 1846 0036 5206     		lsls	r2, r2, #25
 1847 0038 18D5     		bpl	.L116
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1848              		.loc 1 1434 0
 1849 003a 264A     		ldr	r2, .L124+8
 1850 003c 5A63     		str	r2, [r3, #52]
 1851              	.L115:
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1852              		.loc 1 1443 0
 1853 003e 2368     		ldr	r3, [r4]
 1854 0040 9A68     		ldr	r2, [r3, #8]
 1855 0042 1206     		lsls	r2, r2, #24
 1856 0044 15D5     		bpl	.L121
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1857              		.loc 1 1446 0
 1858 0046 9A68     		ldr	r2, [r3, #8]
 1859 0048 8021     		movs	r1, #128
 1860 004a 8A43     		bics	r2, r1
 1861 004c 9A60     		str	r2, [r3, #8]
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1862              		.loc 1 1449 0
 1863 004e 206E     		ldr	r0, [r4, #96]
 1864              	.LVL130:
 1865 0050 0028     		cmp	r0, #0
 1866 0052 33D0     		beq	.L122
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 1867              		.loc 1 1455 0
 1868 0054 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1869              	.LVL131:
 1870 0058 0028     		cmp	r0, #0
 1871 005a 31D0     		beq	.L123
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 1872              		.loc 1 1457 0
 1873 005c 236E     		ldr	r3, [r4, #96]
 1874 005e 0022     		movs	r2, #0
 1875 0060 5A63     		str	r2, [r3, #52]
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 1876              		.loc 1 1405 0
 1877 0062 0121     		movs	r1, #1
 1878 0064 06E0     		b	.L117
 1879              	.LVL132:
 1880              	.L114:
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1881              		.loc 1 1424 0
 1882 0066 0022     		movs	r2, #0
 1883 0068 5A63     		str	r2, [r3, #52]
 1884 006a DFE7     		b	.L113
 1885              	.L116:
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1886              		.loc 1 1438 0
 1887 006c 0022     		movs	r2, #0
 1888 006e 5A63     		str	r2, [r3, #52]
 1889 0070 E5E7     		b	.L115
 1890              	.L121:
ARM GAS  /tmp/cc5Zd4W1.s 			page 82


1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 1891              		.loc 1 1405 0
 1892 0072 0121     		movs	r1, #1
 1893              	.LVL133:
 1894              	.L117:
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1895              		.loc 1 1467 0
 1896 0074 2368     		ldr	r3, [r4]
 1897 0076 9A68     		ldr	r2, [r3, #8]
 1898 0078 5206     		lsls	r2, r2, #25
 1899 007a 23D5     		bpl	.L118
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1900              		.loc 1 1469 0
 1901 007c 9A68     		ldr	r2, [r3, #8]
 1902 007e 4020     		movs	r0, #64
 1903 0080 8243     		bics	r2, r0
 1904 0082 9A60     		str	r2, [r3, #8]
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1905              		.loc 1 1472 0
 1906 0084 606E     		ldr	r0, [r4, #100]
 1907 0086 0028     		cmp	r0, #0
 1908 0088 1CD0     		beq	.L118
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 1909              		.loc 1 1478 0
 1910 008a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1911              	.LVL134:
 1912 008e 0028     		cmp	r0, #0
 1913 0090 1AD0     		beq	.L119
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 1U;
 1914              		.loc 1 1480 0
 1915 0092 636E     		ldr	r3, [r4, #100]
 1916 0094 0022     		movs	r2, #0
 1917 0096 5A63     		str	r2, [r3, #52]
 1918              	.LVL135:
 1919              	.L120:
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1920              		.loc 1 1494 0
 1921 0098 0023     		movs	r3, #0
 1922 009a 5222     		movs	r2, #82
 1923 009c A352     		strh	r3, [r4, r2]
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1924              		.loc 1 1495 0
 1925 009e 0832     		adds	r2, r2, #8
 1926 00a0 A352     		strh	r3, [r4, r2]
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1927              		.loc 1 1498 0
 1928 00a2 E366     		str	r3, [r4, #108]
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1929              		.loc 1 1501 0
 1930 00a4 2368     		ldr	r3, [r4]
 1931 00a6 4B3A     		subs	r2, r2, #75
 1932 00a8 1A62     		str	r2, [r3, #32]
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1933              		.loc 1 1504 0
 1934 00aa 2023     		movs	r3, #32
 1935 00ac 5A32     		adds	r2, r2, #90
 1936 00ae A354     		strb	r3, [r4, r2]
ARM GAS  /tmp/cc5Zd4W1.s 			page 83


1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1937              		.loc 1 1505 0
 1938 00b0 0132     		adds	r2, r2, #1
 1939 00b2 A354     		strb	r3, [r4, r2]
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1940              		.loc 1 1508 0
 1941 00b4 2000     		movs	r0, r4
 1942 00b6 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1943              	.LVL136:
 1944 00ba 05E0     		b	.L119
 1945              	.LVL137:
 1946              	.L122:
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 1947              		.loc 1 1405 0
 1948 00bc 0121     		movs	r1, #1
 1949 00be D9E7     		b	.L117
 1950              	.L123:
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 1951              		.loc 1 1461 0
 1952 00c0 0021     		movs	r1, #0
 1953 00c2 D7E7     		b	.L117
 1954              	.LVL138:
 1955              	.L118:
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1956              		.loc 1 1491 0
 1957 00c4 0129     		cmp	r1, #1
 1958 00c6 E7D0     		beq	.L120
 1959              	.LVL139:
 1960              	.L119:
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1961              		.loc 1 1512 0
 1962 00c8 0020     		movs	r0, #0
 1963              		@ sp needed
 1964              	.LVL140:
 1965 00ca 10BD     		pop	{r4, pc}
 1966              	.L125:
 1967              		.align	2
 1968              	.L124:
 1969 00cc 1FFEFFFF 		.word	-481
 1970 00d0 00000000 		.word	UART_DMATxAbortCallback
 1971 00d4 00000000 		.word	UART_DMARxAbortCallback
 1972              		.cfi_endproc
 1973              	.LFE55:
 1975              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 1976              		.align	1
 1977              		.syntax unified
 1978              		.code	16
 1979              		.thumb_func
 1980              		.fpu softvfp
 1982              	UART_DMARxAbortCallback:
 1983              	.LFB87:
2532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
ARM GAS  /tmp/cc5Zd4W1.s 			page 84


2538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
2544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
2551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
2553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
2558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
2559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset errorCode */
2561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1984              		.loc 1 2584 0
 1985              		.cfi_startproc
 1986              		@ args = 0, pretend = 0, frame = 0
 1987              		@ frame_needed = 0, uses_anonymous_args = 0
 1988              	.LVL141:
 1989 0000 10B5     		push	{r4, lr}
 1990              	.LCFI16:
 1991              		.cfi_def_cfa_offset 8
 1992              		.cfi_offset 4, -8
 1993              		.cfi_offset 14, -4
ARM GAS  /tmp/cc5Zd4W1.s 			page 85


2585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 1994              		.loc 1 2585 0
 1995 0002 406A     		ldr	r0, [r0, #36]
 1996              	.LVL142:
2586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 1997              		.loc 1 2587 0
 1998 0004 436E     		ldr	r3, [r0, #100]
 1999 0006 0022     		movs	r2, #0
 2000 0008 5A63     		str	r2, [r3, #52]
2588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 2001              		.loc 1 2590 0
 2002 000a 036E     		ldr	r3, [r0, #96]
 2003 000c 002B     		cmp	r3, #0
 2004 000e 03D0     		beq	.L127
2591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
 2005              		.loc 1 2592 0
 2006 0010 5B6B     		ldr	r3, [r3, #52]
 2007 0012 002B     		cmp	r3, #0
 2008 0014 00D0     		beq	.L127
 2009              	.LVL143:
 2010              	.L126:
2593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
2595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
2600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
2601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset errorCode */
2603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2011              		.loc 1 2614 0
 2012              		@ sp needed
 2013 0016 10BD     		pop	{r4, pc}
 2014              	.LVL144:
 2015              	.L127:
2599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2016              		.loc 1 2599 0
 2017 0018 0023     		movs	r3, #0
 2018 001a 5222     		movs	r2, #82
 2019 001c 8352     		strh	r3, [r0, r2]
ARM GAS  /tmp/cc5Zd4W1.s 			page 86


2600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2020              		.loc 1 2600 0
 2021 001e 0832     		adds	r2, r2, #8
 2022 0020 8352     		strh	r3, [r0, r2]
2603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2023              		.loc 1 2603 0
 2024 0022 C366     		str	r3, [r0, #108]
2606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2025              		.loc 1 2606 0
 2026 0024 0368     		ldr	r3, [r0]
 2027 0026 4B3A     		subs	r2, r2, #75
 2028 0028 1A62     		str	r2, [r3, #32]
2609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2029              		.loc 1 2609 0
 2030 002a 2023     		movs	r3, #32
 2031 002c 5A32     		adds	r2, r2, #90
 2032 002e 8354     		strb	r3, [r0, r2]
2610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2033              		.loc 1 2610 0
 2034 0030 0132     		adds	r2, r2, #1
 2035 0032 8354     		strb	r3, [r0, r2]
2613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2036              		.loc 1 2613 0
 2037 0034 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2038              	.LVL145:
 2039 0038 EDE7     		b	.L126
 2040              		.cfi_endproc
 2041              	.LFE87:
 2043              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 2044              		.align	1
 2045              		.syntax unified
 2046              		.code	16
 2047              		.thumb_func
 2048              		.fpu softvfp
 2050              	UART_DMATxAbortCallback:
 2051              	.LFB86:
2542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 2052              		.loc 1 2542 0
 2053              		.cfi_startproc
 2054              		@ args = 0, pretend = 0, frame = 0
 2055              		@ frame_needed = 0, uses_anonymous_args = 0
 2056              	.LVL146:
 2057 0000 10B5     		push	{r4, lr}
 2058              	.LCFI17:
 2059              		.cfi_def_cfa_offset 8
 2060              		.cfi_offset 4, -8
 2061              		.cfi_offset 14, -4
2543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2062              		.loc 1 2543 0
 2063 0002 406A     		ldr	r0, [r0, #36]
 2064              	.LVL147:
2545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2065              		.loc 1 2545 0
 2066 0004 036E     		ldr	r3, [r0, #96]
 2067 0006 0022     		movs	r2, #0
 2068 0008 5A63     		str	r2, [r3, #52]
2548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
ARM GAS  /tmp/cc5Zd4W1.s 			page 87


 2069              		.loc 1 2548 0
 2070 000a 436E     		ldr	r3, [r0, #100]
 2071 000c 002B     		cmp	r3, #0
 2072 000e 03D0     		beq	.L130
2550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2073              		.loc 1 2550 0
 2074 0010 5B6B     		ldr	r3, [r3, #52]
 2075 0012 002B     		cmp	r3, #0
 2076 0014 00D0     		beq	.L130
 2077              	.LVL148:
 2078              	.L129:
2572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2079              		.loc 1 2572 0
 2080              		@ sp needed
 2081 0016 10BD     		pop	{r4, pc}
 2082              	.LVL149:
 2083              	.L130:
2557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2084              		.loc 1 2557 0
 2085 0018 0023     		movs	r3, #0
 2086 001a 5222     		movs	r2, #82
 2087 001c 8352     		strh	r3, [r0, r2]
2558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2088              		.loc 1 2558 0
 2089 001e 0832     		adds	r2, r2, #8
 2090 0020 8352     		strh	r3, [r0, r2]
2561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2091              		.loc 1 2561 0
 2092 0022 C366     		str	r3, [r0, #108]
2564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2093              		.loc 1 2564 0
 2094 0024 0368     		ldr	r3, [r0]
 2095 0026 4B3A     		subs	r2, r2, #75
 2096 0028 1A62     		str	r2, [r3, #32]
2567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2097              		.loc 1 2567 0
 2098 002a 2023     		movs	r3, #32
 2099 002c 5A32     		adds	r2, r2, #90
 2100 002e 8354     		strb	r3, [r0, r2]
2568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2101              		.loc 1 2568 0
 2102 0030 0132     		adds	r2, r2, #1
 2103 0032 8354     		strb	r3, [r0, r2]
2571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2104              		.loc 1 2571 0
 2105 0034 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2106              	.LVL150:
 2107 0038 EDE7     		b	.L129
 2108              		.cfi_endproc
 2109              	.LFE86:
 2111              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 2112              		.align	1
 2113              		.weak	HAL_UART_AbortTransmitCpltCallback
 2114              		.syntax unified
 2115              		.code	16
 2116              		.thumb_func
 2117              		.fpu softvfp
ARM GAS  /tmp/cc5Zd4W1.s 			page 88


 2119              	HAL_UART_AbortTransmitCpltCallback:
 2120              	.LFB65:
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2121              		.loc 1 1901 0
 2122              		.cfi_startproc
 2123              		@ args = 0, pretend = 0, frame = 0
 2124              		@ frame_needed = 0, uses_anonymous_args = 0
 2125              		@ link register save eliminated.
 2126              	.LVL151:
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2127              		.loc 1 1908 0
 2128              		@ sp needed
 2129 0000 7047     		bx	lr
 2130              		.cfi_endproc
 2131              	.LFE65:
 2133              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 2134              		.align	1
 2135              		.global	HAL_UART_AbortTransmit_IT
 2136              		.syntax unified
 2137              		.code	16
 2138              		.thumb_func
 2139              		.fpu softvfp
 2141              	HAL_UART_AbortTransmit_IT:
 2142              	.LFB56:
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2143              		.loc 1 1529 0
 2144              		.cfi_startproc
 2145              		@ args = 0, pretend = 0, frame = 0
 2146              		@ frame_needed = 0, uses_anonymous_args = 0
 2147              	.LVL152:
 2148 0000 10B5     		push	{r4, lr}
 2149              	.LCFI18:
 2150              		.cfi_def_cfa_offset 8
 2151              		.cfi_offset 4, -8
 2152              		.cfi_offset 14, -4
 2153 0002 0400     		movs	r4, r0
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2154              		.loc 1 1531 0
 2155 0004 0268     		ldr	r2, [r0]
 2156 0006 1368     		ldr	r3, [r2]
 2157 0008 C021     		movs	r1, #192
 2158 000a 8B43     		bics	r3, r1
 2159 000c 1360     		str	r3, [r2]
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2160              		.loc 1 1534 0
 2161 000e 0368     		ldr	r3, [r0]
 2162 0010 9A68     		ldr	r2, [r3, #8]
 2163 0012 1206     		lsls	r2, r2, #24
 2164 0014 1BD5     		bpl	.L134
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2165              		.loc 1 1536 0
 2166 0016 9A68     		ldr	r2, [r3, #8]
 2167 0018 4039     		subs	r1, r1, #64
 2168 001a 8A43     		bics	r2, r1
 2169 001c 9A60     		str	r2, [r3, #8]
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2170              		.loc 1 1539 0
ARM GAS  /tmp/cc5Zd4W1.s 			page 89


 2171 001e 036E     		ldr	r3, [r0, #96]
 2172 0020 002B     		cmp	r3, #0
 2173 0022 0BD0     		beq	.L135
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2174              		.loc 1 1543 0
 2175 0024 0E4A     		ldr	r2, .L137
 2176 0026 5A63     		str	r2, [r3, #52]
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2177              		.loc 1 1546 0
 2178 0028 006E     		ldr	r0, [r0, #96]
 2179              	.LVL153:
 2180 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2181              	.LVL154:
 2182 002e 0028     		cmp	r0, #0
 2183 0030 02D0     		beq	.L136
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2184              		.loc 1 1549 0
 2185 0032 206E     		ldr	r0, [r4, #96]
 2186 0034 436B     		ldr	r3, [r0, #52]
 2187 0036 9847     		blx	r3
 2188              	.LVL155:
 2189              	.L136:
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2190              		.loc 1 1577 0
 2191 0038 0020     		movs	r0, #0
 2192              		@ sp needed
 2193              	.LVL156:
 2194 003a 10BD     		pop	{r4, pc}
 2195              	.LVL157:
 2196              	.L135:
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2197              		.loc 1 1555 0
 2198 003c 5223     		movs	r3, #82
 2199 003e 0022     		movs	r2, #0
 2200 0040 C252     		strh	r2, [r0, r3]
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2201              		.loc 1 1558 0
 2202 0042 1733     		adds	r3, r3, #23
 2203 0044 2032     		adds	r2, r2, #32
 2204 0046 C254     		strb	r2, [r0, r3]
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 2205              		.loc 1 1561 0
 2206 0048 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2207              	.LVL158:
 2208 004c F4E7     		b	.L136
 2209              	.LVL159:
 2210              	.L134:
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2211              		.loc 1 1567 0
 2212 004e 5223     		movs	r3, #82
 2213 0050 0022     		movs	r2, #0
 2214 0052 C252     		strh	r2, [r0, r3]
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2215              		.loc 1 1570 0
 2216 0054 1733     		adds	r3, r3, #23
 2217 0056 2032     		adds	r2, r2, #32
 2218 0058 C254     		strb	r2, [r0, r3]
ARM GAS  /tmp/cc5Zd4W1.s 			page 90


1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2219              		.loc 1 1573 0
 2220 005a FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2221              	.LVL160:
 2222 005e EBE7     		b	.L136
 2223              	.L138:
 2224              		.align	2
 2225              	.L137:
 2226 0060 00000000 		.word	UART_DMATxOnlyAbortCallback
 2227              		.cfi_endproc
 2228              	.LFE56:
 2230              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 2231              		.align	1
 2232              		.syntax unified
 2233              		.code	16
 2234              		.thumb_func
 2235              		.fpu softvfp
 2237              	UART_DMATxOnlyAbortCallback:
 2238              	.LFB88:
2615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2239              		.loc 1 2626 0
 2240              		.cfi_startproc
 2241              		@ args = 0, pretend = 0, frame = 0
 2242              		@ frame_needed = 0, uses_anonymous_args = 0
 2243              	.LVL161:
 2244 0000 10B5     		push	{r4, lr}
 2245              	.LCFI19:
 2246              		.cfi_def_cfa_offset 8
 2247              		.cfi_offset 4, -8
 2248              		.cfi_offset 14, -4
2627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 2249              		.loc 1 2627 0
 2250 0002 406A     		ldr	r0, [r0, #36]
 2251              	.LVL162:
2628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2252              		.loc 1 2629 0
 2253 0004 5223     		movs	r3, #82
 2254 0006 0022     		movs	r2, #0
 2255 0008 C252     		strh	r2, [r0, r3]
2630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2256              		.loc 1 2632 0
 2257 000a 1733     		adds	r3, r3, #23
 2258 000c 2032     		adds	r2, r2, #32
ARM GAS  /tmp/cc5Zd4W1.s 			page 91


 2259 000e C254     		strb	r2, [r0, r3]
2633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 2260              		.loc 1 2635 0
 2261 0010 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2262              	.LVL163:
2636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2263              		.loc 1 2636 0
 2264              		@ sp needed
 2265 0014 10BD     		pop	{r4, pc}
 2266              		.cfi_endproc
 2267              	.LFE88:
 2269              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 2270              		.align	1
 2271              		.weak	HAL_UART_AbortReceiveCpltCallback
 2272              		.syntax unified
 2273              		.code	16
 2274              		.thumb_func
 2275              		.fpu softvfp
 2277              	HAL_UART_AbortReceiveCpltCallback:
 2278              	.LFB66:
1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2279              		.loc 1 1916 0
 2280              		.cfi_startproc
 2281              		@ args = 0, pretend = 0, frame = 0
 2282              		@ frame_needed = 0, uses_anonymous_args = 0
 2283              		@ link register save eliminated.
 2284              	.LVL164:
1923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2285              		.loc 1 1923 0
 2286              		@ sp needed
 2287 0000 7047     		bx	lr
 2288              		.cfi_endproc
 2289              	.LFE66:
 2291              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 2292              		.align	1
 2293              		.global	HAL_UART_AbortReceive_IT
 2294              		.syntax unified
 2295              		.code	16
 2296              		.thumb_func
 2297              		.fpu softvfp
 2299              	HAL_UART_AbortReceive_IT:
 2300              	.LFB57:
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2301              		.loc 1 1594 0
 2302              		.cfi_startproc
 2303              		@ args = 0, pretend = 0, frame = 0
 2304              		@ frame_needed = 0, uses_anonymous_args = 0
 2305              	.LVL165:
 2306 0000 10B5     		push	{r4, lr}
 2307              	.LCFI20:
 2308              		.cfi_def_cfa_offset 8
 2309              		.cfi_offset 4, -8
 2310              		.cfi_offset 14, -4
 2311 0002 0400     		movs	r4, r0
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
ARM GAS  /tmp/cc5Zd4W1.s 			page 92


 2312              		.loc 1 1596 0
 2313 0004 0268     		ldr	r2, [r0]
 2314 0006 1368     		ldr	r3, [r2]
 2315 0008 1B49     		ldr	r1, .L145
 2316 000a 0B40     		ands	r3, r1
 2317 000c 1360     		str	r3, [r2]
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2318              		.loc 1 1597 0
 2319 000e 0268     		ldr	r2, [r0]
 2320 0010 9368     		ldr	r3, [r2, #8]
 2321 0012 2331     		adds	r1, r1, #35
 2322 0014 FF31     		adds	r1, r1, #255
 2323 0016 8B43     		bics	r3, r1
 2324 0018 9360     		str	r3, [r2, #8]
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2325              		.loc 1 1600 0
 2326 001a 0368     		ldr	r3, [r0]
 2327 001c 9A68     		ldr	r2, [r3, #8]
 2328 001e 5206     		lsls	r2, r2, #25
 2329 0020 1ED5     		bpl	.L142
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2330              		.loc 1 1602 0
 2331 0022 9A68     		ldr	r2, [r3, #8]
 2332 0024 3F31     		adds	r1, r1, #63
 2333 0026 8A43     		bics	r2, r1
 2334 0028 9A60     		str	r2, [r3, #8]
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2335              		.loc 1 1605 0
 2336 002a 436E     		ldr	r3, [r0, #100]
 2337 002c 002B     		cmp	r3, #0
 2338 002e 0BD0     		beq	.L143
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2339              		.loc 1 1609 0
 2340 0030 124A     		ldr	r2, .L145+4
 2341 0032 5A63     		str	r2, [r3, #52]
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2342              		.loc 1 1612 0
 2343 0034 406E     		ldr	r0, [r0, #100]
 2344              	.LVL166:
 2345 0036 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2346              	.LVL167:
 2347 003a 0028     		cmp	r0, #0
 2348 003c 02D0     		beq	.L144
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2349              		.loc 1 1615 0
 2350 003e 606E     		ldr	r0, [r4, #100]
 2351 0040 436B     		ldr	r3, [r0, #52]
 2352 0042 9847     		blx	r3
 2353              	.LVL168:
 2354              	.L144:
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2355              		.loc 1 1649 0
 2356 0044 0020     		movs	r0, #0
 2357              		@ sp needed
 2358              	.LVL169:
 2359 0046 10BD     		pop	{r4, pc}
 2360              	.LVL170:
ARM GAS  /tmp/cc5Zd4W1.s 			page 93


 2361              	.L143:
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2362              		.loc 1 1621 0
 2363 0048 5A23     		movs	r3, #90
 2364 004a 0022     		movs	r2, #0
 2365 004c C252     		strh	r2, [r0, r3]
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2366              		.loc 1 1624 0
 2367 004e 0368     		ldr	r3, [r0]
 2368 0050 0F32     		adds	r2, r2, #15
 2369 0052 1A62     		str	r2, [r3, #32]
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2370              		.loc 1 1627 0
 2371 0054 6A23     		movs	r3, #106
 2372 0056 1132     		adds	r2, r2, #17
 2373 0058 C254     		strb	r2, [r0, r3]
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 2374              		.loc 1 1630 0
 2375 005a FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2376              	.LVL171:
 2377 005e F1E7     		b	.L144
 2378              	.LVL172:
 2379              	.L142:
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2380              		.loc 1 1636 0
 2381 0060 5A22     		movs	r2, #90
 2382 0062 0021     		movs	r1, #0
 2383 0064 8152     		strh	r1, [r0, r2]
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2384              		.loc 1 1639 0
 2385 0066 4B3A     		subs	r2, r2, #75
 2386 0068 1A62     		str	r2, [r3, #32]
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2387              		.loc 1 1642 0
 2388 006a 6A23     		movs	r3, #106
 2389 006c 1132     		adds	r2, r2, #17
 2390 006e C254     		strb	r2, [r0, r3]
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2391              		.loc 1 1645 0
 2392 0070 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2393              	.LVL173:
 2394 0074 E6E7     		b	.L144
 2395              	.L146:
 2396 0076 C046     		.align	2
 2397              	.L145:
 2398 0078 DFFEFFFF 		.word	-289
 2399 007c 00000000 		.word	UART_DMARxOnlyAbortCallback
 2400              		.cfi_endproc
 2401              	.LFE57:
 2403              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 2404              		.align	1
 2405              		.syntax unified
 2406              		.code	16
 2407              		.thumb_func
 2408              		.fpu softvfp
 2410              	UART_DMARxOnlyAbortCallback:
 2411              	.LFB89:
ARM GAS  /tmp/cc5Zd4W1.s 			page 94


2637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2412              		.loc 1 2647 0
 2413              		.cfi_startproc
 2414              		@ args = 0, pretend = 0, frame = 0
 2415              		@ frame_needed = 0, uses_anonymous_args = 0
 2416              	.LVL174:
 2417 0000 10B5     		push	{r4, lr}
 2418              	.LCFI21:
 2419              		.cfi_def_cfa_offset 8
 2420              		.cfi_offset 4, -8
 2421              		.cfi_offset 14, -4
2648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2422              		.loc 1 2648 0
 2423 0002 406A     		ldr	r0, [r0, #36]
 2424              	.LVL175:
2649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2425              		.loc 1 2650 0
 2426 0004 5A23     		movs	r3, #90
 2427 0006 0022     		movs	r2, #0
 2428 0008 C252     		strh	r2, [r0, r3]
2651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2429              		.loc 1 2653 0
 2430 000a 0368     		ldr	r3, [r0]
 2431 000c 0F32     		adds	r2, r2, #15
 2432 000e 1A62     		str	r2, [r3, #32]
2654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2433              		.loc 1 2656 0
 2434 0010 6A23     		movs	r3, #106
 2435 0012 1132     		adds	r2, r2, #17
 2436 0014 C254     		strb	r2, [r0, r3]
2657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 2437              		.loc 1 2659 0
 2438 0016 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2439              	.LVL176:
2660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2440              		.loc 1 2660 0
 2441              		@ sp needed
 2442 001a 10BD     		pop	{r4, pc}
 2443              		.cfi_endproc
 2444              	.LFE89:
ARM GAS  /tmp/cc5Zd4W1.s 			page 95


 2446              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 2447              		.align	1
 2448              		.global	HAL_MultiProcessor_EnterMuteMode
 2449              		.syntax unified
 2450              		.code	16
 2451              		.thumb_func
 2452              		.fpu softvfp
 2454              	HAL_MultiProcessor_EnterMuteMode:
 2455              	.LFB69:
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 2456              		.loc 1 1996 0
 2457              		.cfi_startproc
 2458              		@ args = 0, pretend = 0, frame = 0
 2459              		@ frame_needed = 0, uses_anonymous_args = 0
 2460              		@ link register save eliminated.
 2461              	.LVL177:
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2462              		.loc 1 1997 0
 2463 0000 0268     		ldr	r2, [r0]
 2464 0002 9369     		ldr	r3, [r2, #24]
 2465 0004 0421     		movs	r1, #4
 2466 0006 0B43     		orrs	r3, r1
 2467 0008 9361     		str	r3, [r2, #24]
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2468              		.loc 1 1998 0
 2469              		@ sp needed
 2470 000a 7047     		bx	lr
 2471              		.cfi_endproc
 2472              	.LFE69:
 2474              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 2475              		.align	1
 2476              		.global	HAL_HalfDuplex_EnableTransmitter
 2477              		.syntax unified
 2478              		.code	16
 2479              		.thumb_func
 2480              		.fpu softvfp
 2482              	HAL_HalfDuplex_EnableTransmitter:
 2483              	.LFB70:
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 2484              		.loc 1 2006 0
 2485              		.cfi_startproc
 2486              		@ args = 0, pretend = 0, frame = 0
 2487              		@ frame_needed = 0, uses_anonymous_args = 0
 2488              	.LVL178:
 2489 0000 30B5     		push	{r4, r5, lr}
 2490              	.LCFI22:
 2491              		.cfi_def_cfa_offset 12
 2492              		.cfi_offset 4, -12
 2493              		.cfi_offset 5, -8
 2494              		.cfi_offset 14, -4
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2495              		.loc 1 2008 0
 2496 0002 6823     		movs	r3, #104
 2497 0004 C35C     		ldrb	r3, [r0, r3]
 2498 0006 012B     		cmp	r3, #1
 2499 0008 15D0     		beq	.L151
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /tmp/cc5Zd4W1.s 			page 96


 2500              		.loc 1 2008 0 is_stmt 0 discriminator 2
 2501 000a 6822     		movs	r2, #104
 2502 000c 0123     		movs	r3, #1
 2503 000e 8354     		strb	r3, [r0, r2]
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2504              		.loc 1 2009 0 is_stmt 1 discriminator 2
 2505 0010 6921     		movs	r1, #105
 2506 0012 2333     		adds	r3, r3, #35
 2507 0014 4354     		strb	r3, [r0, r1]
2012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
 2508              		.loc 1 2012 0 discriminator 2
 2509 0016 0468     		ldr	r4, [r0]
 2510 0018 2368     		ldr	r3, [r4]
 2511 001a 0C25     		movs	r5, #12
 2512 001c AB43     		bics	r3, r5
 2513 001e 2360     		str	r3, [r4]
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2514              		.loc 1 2014 0 discriminator 2
 2515 0020 0468     		ldr	r4, [r0]
 2516 0022 2368     		ldr	r3, [r4]
 2517 0024 043D     		subs	r5, r5, #4
 2518 0026 2B43     		orrs	r3, r5
 2519 0028 2360     		str	r3, [r4]
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2520              		.loc 1 2016 0 discriminator 2
 2521 002a 2023     		movs	r3, #32
 2522 002c 4354     		strb	r3, [r0, r1]
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2523              		.loc 1 2019 0 discriminator 2
 2524 002e 0023     		movs	r3, #0
 2525 0030 8354     		strb	r3, [r0, r2]
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2526              		.loc 1 2021 0 discriminator 2
 2527 0032 0020     		movs	r0, #0
 2528              	.LVL179:
 2529              	.L150:
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2530              		.loc 1 2022 0
 2531              		@ sp needed
 2532 0034 30BD     		pop	{r4, r5, pc}
 2533              	.LVL180:
 2534              	.L151:
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2535              		.loc 1 2008 0
 2536 0036 0220     		movs	r0, #2
 2537              	.LVL181:
 2538 0038 FCE7     		b	.L150
 2539              		.cfi_endproc
 2540              	.LFE70:
 2542              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 2543              		.align	1
 2544              		.global	HAL_HalfDuplex_EnableReceiver
 2545              		.syntax unified
 2546              		.code	16
 2547              		.thumb_func
 2548              		.fpu softvfp
 2550              	HAL_HalfDuplex_EnableReceiver:
ARM GAS  /tmp/cc5Zd4W1.s 			page 97


 2551              	.LFB71:
2030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 2552              		.loc 1 2030 0
 2553              		.cfi_startproc
 2554              		@ args = 0, pretend = 0, frame = 0
 2555              		@ frame_needed = 0, uses_anonymous_args = 0
 2556              	.LVL182:
 2557 0000 30B5     		push	{r4, r5, lr}
 2558              	.LCFI23:
 2559              		.cfi_def_cfa_offset 12
 2560              		.cfi_offset 4, -12
 2561              		.cfi_offset 5, -8
 2562              		.cfi_offset 14, -4
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2563              		.loc 1 2032 0
 2564 0002 6823     		movs	r3, #104
 2565 0004 C35C     		ldrb	r3, [r0, r3]
 2566 0006 012B     		cmp	r3, #1
 2567 0008 15D0     		beq	.L154
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2568              		.loc 1 2032 0 is_stmt 0 discriminator 2
 2569 000a 6822     		movs	r2, #104
 2570 000c 0123     		movs	r3, #1
 2571 000e 8354     		strb	r3, [r0, r2]
2033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2572              		.loc 1 2033 0 is_stmt 1 discriminator 2
 2573 0010 6921     		movs	r1, #105
 2574 0012 2333     		adds	r3, r3, #35
 2575 0014 4354     		strb	r3, [r0, r1]
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
 2576              		.loc 1 2036 0 discriminator 2
 2577 0016 0468     		ldr	r4, [r0]
 2578 0018 2368     		ldr	r3, [r4]
 2579 001a 0C25     		movs	r5, #12
 2580 001c AB43     		bics	r3, r5
 2581 001e 2360     		str	r3, [r4]
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2582              		.loc 1 2038 0 discriminator 2
 2583 0020 0468     		ldr	r4, [r0]
 2584 0022 2368     		ldr	r3, [r4]
 2585 0024 083D     		subs	r5, r5, #8
 2586 0026 2B43     		orrs	r3, r5
 2587 0028 2360     		str	r3, [r4]
2040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
 2588              		.loc 1 2040 0 discriminator 2
 2589 002a 2023     		movs	r3, #32
 2590 002c 4354     		strb	r3, [r0, r1]
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2591              		.loc 1 2042 0 discriminator 2
 2592 002e 0023     		movs	r3, #0
 2593 0030 8354     		strb	r3, [r0, r2]
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2594              		.loc 1 2044 0 discriminator 2
 2595 0032 0020     		movs	r0, #0
 2596              	.LVL183:
 2597              	.L153:
2045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/cc5Zd4W1.s 			page 98


 2598              		.loc 1 2045 0
 2599              		@ sp needed
 2600 0034 30BD     		pop	{r4, r5, pc}
 2601              	.LVL184:
 2602              	.L154:
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2603              		.loc 1 2032 0
 2604 0036 0220     		movs	r0, #2
 2605              	.LVL185:
 2606 0038 FCE7     		b	.L153
 2607              		.cfi_endproc
 2608              	.LFE71:
 2610              		.section	.text.HAL_UART_GetState,"ax",%progbits
 2611              		.align	1
 2612              		.global	HAL_UART_GetState
 2613              		.syntax unified
 2614              		.code	16
 2615              		.thumb_func
 2616              		.fpu softvfp
 2618              	HAL_UART_GetState:
 2619              	.LFB72:
2074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 2620              		.loc 1 2074 0
 2621              		.cfi_startproc
 2622              		@ args = 0, pretend = 0, frame = 0
 2623              		@ frame_needed = 0, uses_anonymous_args = 0
 2624              		@ link register save eliminated.
 2625              	.LVL186:
2076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp2 = huart->RxState;
 2626              		.loc 1 2076 0
 2627 0000 6923     		movs	r3, #105
 2628 0002 C35C     		ldrb	r3, [r0, r3]
 2629              	.LVL187:
2077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2630              		.loc 1 2077 0
 2631 0004 6A22     		movs	r2, #106
 2632 0006 805C     		ldrb	r0, [r0, r2]
 2633              	.LVL188:
2079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2634              		.loc 1 2079 0
 2635 0008 1843     		orrs	r0, r3
 2636              	.LVL189:
2080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2637              		.loc 1 2080 0
 2638              		@ sp needed
 2639 000a 7047     		bx	lr
 2640              		.cfi_endproc
 2641              	.LFE72:
 2643              		.section	.text.HAL_UART_GetError,"ax",%progbits
 2644              		.align	1
 2645              		.global	HAL_UART_GetError
 2646              		.syntax unified
 2647              		.code	16
 2648              		.thumb_func
 2649              		.fpu softvfp
 2651              	HAL_UART_GetError:
 2652              	.LFB73:
ARM GAS  /tmp/cc5Zd4W1.s 			page 99


2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return huart->ErrorCode;
 2653              		.loc 1 2089 0
 2654              		.cfi_startproc
 2655              		@ args = 0, pretend = 0, frame = 0
 2656              		@ frame_needed = 0, uses_anonymous_args = 0
 2657              		@ link register save eliminated.
 2658              	.LVL190:
2090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2659              		.loc 1 2090 0
 2660 0000 C06E     		ldr	r0, [r0, #108]
 2661              	.LVL191:
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 2662              		.loc 1 2091 0
 2663              		@ sp needed
 2664 0002 7047     		bx	lr
 2665              		.cfi_endproc
 2666              	.LFE73:
 2668              		.global	__aeabi_uidiv
 2669              		.section	.text.UART_SetConfig,"ax",%progbits
 2670              		.align	1
 2671              		.global	UART_SetConfig
 2672              		.syntax unified
 2673              		.code	16
 2674              		.thumb_func
 2675              		.fpu softvfp
 2677              	UART_SetConfig:
 2678              	.LFB74:
2110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 2679              		.loc 1 2110 0
 2680              		.cfi_startproc
 2681              		@ args = 0, pretend = 0, frame = 0
 2682              		@ frame_needed = 0, uses_anonymous_args = 0
 2683              	.LVL192:
 2684 0000 10B5     		push	{r4, lr}
 2685              	.LCFI24:
 2686              		.cfi_def_cfa_offset 8
 2687              		.cfi_offset 4, -8
 2688              		.cfi_offset 14, -4
 2689 0002 0400     		movs	r4, r0
 2690              	.LVL193:
2135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2691              		.loc 1 2135 0
 2692 0004 8368     		ldr	r3, [r0, #8]
 2693 0006 0269     		ldr	r2, [r0, #16]
 2694 0008 1343     		orrs	r3, r2
 2695 000a 4269     		ldr	r2, [r0, #20]
 2696 000c 1343     		orrs	r3, r2
 2697 000e C269     		ldr	r2, [r0, #28]
 2698 0010 1343     		orrs	r3, r2
 2699              	.LVL194:
2136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2700              		.loc 1 2136 0
 2701 0012 0168     		ldr	r1, [r0]
 2702 0014 0A68     		ldr	r2, [r1]
 2703 0016 5C48     		ldr	r0, .L183
 2704              	.LVL195:
 2705 0018 0240     		ands	r2, r0
ARM GAS  /tmp/cc5Zd4W1.s 			page 100


 2706 001a 1343     		orrs	r3, r2
 2707              	.LVL196:
 2708 001c 0B60     		str	r3, [r1]
 2709              	.LVL197:
2141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2710              		.loc 1 2141 0
 2711 001e 2268     		ldr	r2, [r4]
 2712 0020 5368     		ldr	r3, [r2, #4]
 2713 0022 5A49     		ldr	r1, .L183+4
 2714 0024 0B40     		ands	r3, r1
 2715 0026 E168     		ldr	r1, [r4, #12]
 2716 0028 0B43     		orrs	r3, r1
 2717 002a 5360     		str	r3, [r2, #4]
2149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2718              		.loc 1 2149 0
 2719 002c A269     		ldr	r2, [r4, #24]
 2720 002e 236A     		ldr	r3, [r4, #32]
 2721 0030 1A43     		orrs	r2, r3
 2722              	.LVL198:
2150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2723              		.loc 1 2150 0
 2724 0032 2168     		ldr	r1, [r4]
 2725 0034 8B68     		ldr	r3, [r1, #8]
 2726 0036 5648     		ldr	r0, .L183+8
 2727 0038 0340     		ands	r3, r0
 2728 003a 1343     		orrs	r3, r2
 2729 003c 8B60     		str	r3, [r1, #8]
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2730              		.loc 1 2153 0
 2731 003e 554B     		ldr	r3, .L183+12
 2732 0040 1A6B     		ldr	r2, [r3, #48]
 2733              	.LVL199:
 2734 0042 0323     		movs	r3, #3
 2735 0044 1340     		ands	r3, r2
 2736 0046 012B     		cmp	r3, #1
 2737 0048 26D0     		beq	.L159
 2738 004a 002B     		cmp	r3, #0
 2739 004c 05D0     		beq	.L160
 2740 004e 022B     		cmp	r3, #2
 2741 0050 24D0     		beq	.L161
 2742 0052 032B     		cmp	r3, #3
 2743 0054 24D0     		beq	.L176
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2744              		.loc 1 2153 0 is_stmt 0 discriminator 1
 2745 0056 1023     		movs	r3, #16
 2746 0058 00E0     		b	.L162
 2747              	.L160:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2748              		.loc 1 2153 0
 2749 005a 0023     		movs	r3, #0
 2750              	.LVL200:
 2751              	.L162:
2156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2752              		.loc 1 2156 0 is_stmt 1
 2753 005c 8022     		movs	r2, #128
 2754 005e 1202     		lsls	r2, r2, #8
 2755 0060 E169     		ldr	r1, [r4, #28]
ARM GAS  /tmp/cc5Zd4W1.s 			page 101


 2756 0062 9142     		cmp	r1, r2
 2757 0064 1ED0     		beq	.L180
2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2758              		.loc 1 2184 0
 2759 0066 022B     		cmp	r3, #2
 2760 0068 00D1     		bne	.LCB2315
 2761 006a 6FE0     		b	.L171	@long jump
 2762              	.LCB2315:
 2763 006c 5ED9     		bls	.L181
 2764 006e 042B     		cmp	r3, #4
 2765 0070 00D1     		bne	.LCB2319
 2766 0072 79E0     		b	.L174	@long jump
 2767              	.LCB2319:
 2768 0074 082B     		cmp	r3, #8
 2769 0076 00D0     		beq	.LCB2321
 2770 0078 84E0     		b	.L178	@long jump
 2771              	.LCB2321:
2196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2772              		.loc 1 2196 0
 2773 007a 6368     		ldr	r3, [r4, #4]
 2774              	.LVL201:
 2775 007c 5808     		lsrs	r0, r3, #1
 2776 007e 8023     		movs	r3, #128
 2777 0080 1B02     		lsls	r3, r3, #8
 2778 0082 9C46     		mov	ip, r3
 2779 0084 6044     		add	r0, r0, ip
 2780 0086 6168     		ldr	r1, [r4, #4]
 2781 0088 FFF7FEFF 		bl	__aeabi_uidiv
 2782              	.LVL202:
 2783 008c 2368     		ldr	r3, [r4]
 2784 008e 0004     		lsls	r0, r0, #16
 2785 0090 000C     		lsrs	r0, r0, #16
 2786 0092 D860     		str	r0, [r3, #12]
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2787              		.loc 1 2115 0
 2788 0094 0020     		movs	r0, #0
2197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2789              		.loc 1 2197 0
 2790 0096 2EE0     		b	.L170
 2791              	.LVL203:
 2792              	.L159:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2793              		.loc 1 2153 0 discriminator 3
 2794 0098 0423     		movs	r3, #4
 2795 009a DFE7     		b	.L162
 2796              	.LVL204:
 2797              	.L161:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2798              		.loc 1 2153 0 is_stmt 0 discriminator 4
 2799 009c 0823     		movs	r3, #8
 2800 009e DDE7     		b	.L162
 2801              	.LVL205:
 2802              	.L176:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2803              		.loc 1 2153 0
 2804 00a0 0223     		movs	r3, #2
 2805 00a2 DBE7     		b	.L162
ARM GAS  /tmp/cc5Zd4W1.s 			page 102


 2806              	.LVL206:
 2807              	.L180:
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2808              		.loc 1 2158 0 is_stmt 1
 2809 00a4 022B     		cmp	r3, #2
 2810 00a6 27D0     		beq	.L165
 2811 00a8 0FD9     		bls	.L182
 2812 00aa 042B     		cmp	r3, #4
 2813 00ac 2FD0     		beq	.L168
 2814 00ae 082B     		cmp	r3, #8
 2815 00b0 39D1     		bne	.L177
2170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2816              		.loc 1 2170 0
 2817 00b2 6368     		ldr	r3, [r4, #4]
 2818              	.LVL207:
 2819 00b4 5808     		lsrs	r0, r3, #1
 2820 00b6 8023     		movs	r3, #128
 2821 00b8 5B02     		lsls	r3, r3, #9
 2822 00ba 9C46     		mov	ip, r3
 2823 00bc 6044     		add	r0, r0, ip
 2824 00be 6168     		ldr	r1, [r4, #4]
 2825 00c0 FFF7FEFF 		bl	__aeabi_uidiv
 2826              	.LVL208:
 2827 00c4 83B2     		uxth	r3, r0
 2828              	.LVL209:
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2829              		.loc 1 2115 0
 2830 00c6 0020     		movs	r0, #0
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2831              		.loc 1 2171 0
 2832 00c8 0CE0     		b	.L164
 2833              	.LVL210:
 2834              	.L182:
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2835              		.loc 1 2158 0
 2836 00ca 002B     		cmp	r3, #0
 2837 00cc 2BD1     		bne	.L177
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2838              		.loc 1 2161 0
 2839 00ce FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2840              	.LVL211:
 2841 00d2 4000     		lsls	r0, r0, #1
 2842 00d4 6368     		ldr	r3, [r4, #4]
 2843 00d6 5B08     		lsrs	r3, r3, #1
 2844 00d8 C018     		adds	r0, r0, r3
 2845 00da 6168     		ldr	r1, [r4, #4]
 2846 00dc FFF7FEFF 		bl	__aeabi_uidiv
 2847              	.LVL212:
 2848 00e0 83B2     		uxth	r3, r0
 2849              	.LVL213:
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2850              		.loc 1 2115 0
 2851 00e2 0020     		movs	r0, #0
 2852              	.LVL214:
 2853              	.L164:
2178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2854              		.loc 1 2178 0
ARM GAS  /tmp/cc5Zd4W1.s 			page 103


 2855 00e4 0F22     		movs	r2, #15
 2856 00e6 1900     		movs	r1, r3
 2857 00e8 9143     		bics	r1, r2
 2858              	.LVL215:
2179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
 2859              		.loc 1 2179 0
 2860 00ea 5B10     		asrs	r3, r3, #1
 2861              	.LVL216:
 2862 00ec 083A     		subs	r2, r2, #8
 2863 00ee 1340     		ands	r3, r2
 2864 00f0 0B43     		orrs	r3, r1
 2865              	.LVL217:
2180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2866              		.loc 1 2180 0
 2867 00f2 2268     		ldr	r2, [r4]
 2868 00f4 D360     		str	r3, [r2, #12]
 2869              	.LVL218:
 2870              	.L170:
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2871              		.loc 1 2207 0
 2872              		@ sp needed
 2873              	.LVL219:
 2874 00f6 10BD     		pop	{r4, pc}
 2875              	.LVL220:
 2876              	.L165:
2164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2877              		.loc 1 2164 0
 2878 00f8 6368     		ldr	r3, [r4, #4]
 2879              	.LVL221:
 2880 00fa 5808     		lsrs	r0, r3, #1
 2881 00fc 264B     		ldr	r3, .L183+16
 2882 00fe 9C46     		mov	ip, r3
 2883 0100 6044     		add	r0, r0, ip
 2884 0102 6168     		ldr	r1, [r4, #4]
 2885 0104 FFF7FEFF 		bl	__aeabi_uidiv
 2886              	.LVL222:
 2887 0108 83B2     		uxth	r3, r0
 2888              	.LVL223:
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2889              		.loc 1 2115 0
 2890 010a 0020     		movs	r0, #0
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 2891              		.loc 1 2165 0
 2892 010c EAE7     		b	.L164
 2893              	.LVL224:
 2894              	.L168:
2167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2895              		.loc 1 2167 0
 2896 010e FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2897              	.LVL225:
 2898 0112 4000     		lsls	r0, r0, #1
 2899 0114 6368     		ldr	r3, [r4, #4]
 2900 0116 5B08     		lsrs	r3, r3, #1
 2901 0118 C018     		adds	r0, r0, r3
 2902 011a 6168     		ldr	r1, [r4, #4]
 2903 011c FFF7FEFF 		bl	__aeabi_uidiv
 2904              	.LVL226:
ARM GAS  /tmp/cc5Zd4W1.s 			page 104


 2905 0120 83B2     		uxth	r3, r0
 2906              	.LVL227:
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2907              		.loc 1 2115 0
 2908 0122 0020     		movs	r0, #0
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 2909              		.loc 1 2168 0
 2910 0124 DEE7     		b	.L164
 2911              	.LVL228:
 2912              	.L177:
2174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2913              		.loc 1 2174 0
 2914 0126 0120     		movs	r0, #1
2114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 2915              		.loc 1 2114 0
 2916 0128 0023     		movs	r3, #0
 2917              	.LVL229:
 2918 012a DBE7     		b	.L164
 2919              	.LVL230:
 2920              	.L181:
2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2921              		.loc 1 2184 0
 2922 012c 002B     		cmp	r3, #0
 2923 012e 29D1     		bne	.L178
2187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2924              		.loc 1 2187 0
 2925 0130 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2926              	.LVL231:
 2927 0134 6368     		ldr	r3, [r4, #4]
 2928 0136 5B08     		lsrs	r3, r3, #1
 2929 0138 C018     		adds	r0, r0, r3
 2930 013a 6168     		ldr	r1, [r4, #4]
 2931 013c FFF7FEFF 		bl	__aeabi_uidiv
 2932              	.LVL232:
 2933 0140 2368     		ldr	r3, [r4]
 2934 0142 0004     		lsls	r0, r0, #16
 2935 0144 000C     		lsrs	r0, r0, #16
 2936 0146 D860     		str	r0, [r3, #12]
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2937              		.loc 1 2115 0
 2938 0148 0020     		movs	r0, #0
2188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 2939              		.loc 1 2188 0
 2940 014a D4E7     		b	.L170
 2941              	.LVL233:
 2942              	.L171:
2190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2943              		.loc 1 2190 0
 2944 014c 6368     		ldr	r3, [r4, #4]
 2945              	.LVL234:
 2946 014e 5808     		lsrs	r0, r3, #1
 2947 0150 124B     		ldr	r3, .L183+20
 2948 0152 9C46     		mov	ip, r3
 2949 0154 6044     		add	r0, r0, ip
 2950 0156 6168     		ldr	r1, [r4, #4]
 2951 0158 FFF7FEFF 		bl	__aeabi_uidiv
 2952              	.LVL235:
ARM GAS  /tmp/cc5Zd4W1.s 			page 105


 2953 015c 2368     		ldr	r3, [r4]
 2954 015e 0004     		lsls	r0, r0, #16
 2955 0160 000C     		lsrs	r0, r0, #16
 2956 0162 D860     		str	r0, [r3, #12]
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2957              		.loc 1 2115 0
 2958 0164 0020     		movs	r0, #0
2191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 2959              		.loc 1 2191 0
 2960 0166 C6E7     		b	.L170
 2961              	.LVL236:
 2962              	.L174:
2193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2963              		.loc 1 2193 0
 2964 0168 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2965              	.LVL237:
 2966 016c 6368     		ldr	r3, [r4, #4]
 2967 016e 5B08     		lsrs	r3, r3, #1
 2968 0170 C018     		adds	r0, r0, r3
 2969 0172 6168     		ldr	r1, [r4, #4]
 2970 0174 FFF7FEFF 		bl	__aeabi_uidiv
 2971              	.LVL238:
 2972 0178 2368     		ldr	r3, [r4]
 2973 017a 0004     		lsls	r0, r0, #16
 2974 017c 000C     		lsrs	r0, r0, #16
 2975 017e D860     		str	r0, [r3, #12]
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2976              		.loc 1 2115 0
 2977 0180 0020     		movs	r0, #0
2194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 2978              		.loc 1 2194 0
 2979 0182 B8E7     		b	.L170
 2980              	.LVL239:
 2981              	.L178:
2200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2982              		.loc 1 2200 0
 2983 0184 0120     		movs	r0, #1
 2984 0186 B6E7     		b	.L170
 2985              	.L184:
 2986              		.align	2
 2987              	.L183:
 2988 0188 F369FFFF 		.word	-38413
 2989 018c FFCFFFFF 		.word	-12289
 2990 0190 FFF4FFFF 		.word	-2817
 2991 0194 00100240 		.word	1073876992
 2992 0198 0024F400 		.word	16000000
 2993 019c 00127A00 		.word	8000000
 2994              		.cfi_endproc
 2995              	.LFE74:
 2997              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 2998              		.align	1
 2999              		.global	UART_AdvFeatureConfig
 3000              		.syntax unified
 3001              		.code	16
 3002              		.thumb_func
 3003              		.fpu softvfp
 3005              	UART_AdvFeatureConfig:
ARM GAS  /tmp/cc5Zd4W1.s 			page 106


 3006              	.LFB75:
2215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 3007              		.loc 1 2215 0
 3008              		.cfi_startproc
 3009              		@ args = 0, pretend = 0, frame = 0
 3010              		@ frame_needed = 0, uses_anonymous_args = 0
 3011              		@ link register save eliminated.
 3012              	.LVL240:
2220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3013              		.loc 1 2220 0
 3014 0000 436A     		ldr	r3, [r0, #36]
 3015 0002 DB07     		lsls	r3, r3, #31
 3016 0004 06D5     		bpl	.L186
2223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3017              		.loc 1 2223 0
 3018 0006 0268     		ldr	r2, [r0]
 3019 0008 5368     		ldr	r3, [r2, #4]
 3020 000a 2C49     		ldr	r1, .L195
 3021 000c 0B40     		ands	r3, r1
 3022 000e 816A     		ldr	r1, [r0, #40]
 3023 0010 0B43     		orrs	r3, r1
 3024 0012 5360     		str	r3, [r2, #4]
 3025              	.L186:
2227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3026              		.loc 1 2227 0
 3027 0014 436A     		ldr	r3, [r0, #36]
 3028 0016 9B07     		lsls	r3, r3, #30
 3029 0018 06D5     		bpl	.L187
2230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3030              		.loc 1 2230 0
 3031 001a 0268     		ldr	r2, [r0]
 3032 001c 5368     		ldr	r3, [r2, #4]
 3033 001e 2849     		ldr	r1, .L195+4
 3034 0020 0B40     		ands	r3, r1
 3035 0022 C16A     		ldr	r1, [r0, #44]
 3036 0024 0B43     		orrs	r3, r1
 3037 0026 5360     		str	r3, [r2, #4]
 3038              	.L187:
2234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3039              		.loc 1 2234 0
 3040 0028 436A     		ldr	r3, [r0, #36]
 3041 002a 5B07     		lsls	r3, r3, #29
 3042 002c 06D5     		bpl	.L188
2237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3043              		.loc 1 2237 0
 3044 002e 0268     		ldr	r2, [r0]
 3045 0030 5368     		ldr	r3, [r2, #4]
 3046 0032 2449     		ldr	r1, .L195+8
 3047 0034 0B40     		ands	r3, r1
 3048 0036 016B     		ldr	r1, [r0, #48]
 3049 0038 0B43     		orrs	r3, r1
 3050 003a 5360     		str	r3, [r2, #4]
 3051              	.L188:
2241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3052              		.loc 1 2241 0
 3053 003c 436A     		ldr	r3, [r0, #36]
 3054 003e 1B07     		lsls	r3, r3, #28
ARM GAS  /tmp/cc5Zd4W1.s 			page 107


 3055 0040 06D5     		bpl	.L189
2244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3056              		.loc 1 2244 0
 3057 0042 0268     		ldr	r2, [r0]
 3058 0044 5368     		ldr	r3, [r2, #4]
 3059 0046 2049     		ldr	r1, .L195+12
 3060 0048 0B40     		ands	r3, r1
 3061 004a 416B     		ldr	r1, [r0, #52]
 3062 004c 0B43     		orrs	r3, r1
 3063 004e 5360     		str	r3, [r2, #4]
 3064              	.L189:
2248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3065              		.loc 1 2248 0
 3066 0050 436A     		ldr	r3, [r0, #36]
 3067 0052 DB06     		lsls	r3, r3, #27
 3068 0054 06D5     		bpl	.L190
2251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3069              		.loc 1 2251 0
 3070 0056 0268     		ldr	r2, [r0]
 3071 0058 9368     		ldr	r3, [r2, #8]
 3072 005a 1C49     		ldr	r1, .L195+16
 3073 005c 0B40     		ands	r3, r1
 3074 005e 816B     		ldr	r1, [r0, #56]
 3075 0060 0B43     		orrs	r3, r1
 3076 0062 9360     		str	r3, [r2, #8]
 3077              	.L190:
2255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3078              		.loc 1 2255 0
 3079 0064 436A     		ldr	r3, [r0, #36]
 3080 0066 9B06     		lsls	r3, r3, #26
 3081 0068 06D5     		bpl	.L191
2258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3082              		.loc 1 2258 0
 3083 006a 0268     		ldr	r2, [r0]
 3084 006c 9368     		ldr	r3, [r2, #8]
 3085 006e 1849     		ldr	r1, .L195+20
 3086 0070 0B40     		ands	r3, r1
 3087 0072 C16B     		ldr	r1, [r0, #60]
 3088 0074 0B43     		orrs	r3, r1
 3089 0076 9360     		str	r3, [r2, #8]
 3090              	.L191:
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3091              		.loc 1 2262 0
 3092 0078 436A     		ldr	r3, [r0, #36]
 3093 007a 5B06     		lsls	r3, r3, #25
 3094 007c 0BD5     		bpl	.L192
2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 3095              		.loc 1 2266 0
 3096 007e 0268     		ldr	r2, [r0]
 3097 0080 5368     		ldr	r3, [r2, #4]
 3098 0082 1449     		ldr	r1, .L195+24
 3099 0084 0B40     		ands	r3, r1
 3100 0086 016C     		ldr	r1, [r0, #64]
 3101 0088 0B43     		orrs	r3, r1
 3102 008a 5360     		str	r3, [r2, #4]
2268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3103              		.loc 1 2268 0
ARM GAS  /tmp/cc5Zd4W1.s 			page 108


 3104 008c 8023     		movs	r3, #128
 3105 008e 5B03     		lsls	r3, r3, #13
 3106 0090 026C     		ldr	r2, [r0, #64]
 3107 0092 9A42     		cmp	r2, r3
 3108 0094 0AD0     		beq	.L194
 3109              	.L192:
2276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3110              		.loc 1 2276 0
 3111 0096 436A     		ldr	r3, [r0, #36]
 3112 0098 1B06     		lsls	r3, r3, #24
 3113 009a 06D5     		bpl	.L185
2279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3114              		.loc 1 2279 0
 3115 009c 0268     		ldr	r2, [r0]
 3116 009e 5368     		ldr	r3, [r2, #4]
 3117 00a0 0D49     		ldr	r1, .L195+28
 3118 00a2 0B40     		ands	r3, r1
 3119 00a4 816C     		ldr	r1, [r0, #72]
 3120 00a6 0B43     		orrs	r3, r1
 3121 00a8 5360     		str	r3, [r2, #4]
 3122              	.L185:
2281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3123              		.loc 1 2281 0
 3124              		@ sp needed
 3125 00aa 7047     		bx	lr
 3126              	.L194:
2271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 3127              		.loc 1 2271 0
 3128 00ac 0268     		ldr	r2, [r0]
 3129 00ae 5368     		ldr	r3, [r2, #4]
 3130 00b0 0A49     		ldr	r1, .L195+32
 3131 00b2 0B40     		ands	r3, r1
 3132 00b4 416C     		ldr	r1, [r0, #68]
 3133 00b6 0B43     		orrs	r3, r1
 3134 00b8 5360     		str	r3, [r2, #4]
 3135 00ba ECE7     		b	.L192
 3136              	.L196:
 3137              		.align	2
 3138              	.L195:
 3139 00bc FFFFFDFF 		.word	-131073
 3140 00c0 FFFFFEFF 		.word	-65537
 3141 00c4 FFFFFBFF 		.word	-262145
 3142 00c8 FF7FFFFF 		.word	-32769
 3143 00cc FFEFFFFF 		.word	-4097
 3144 00d0 FFDFFFFF 		.word	-8193
 3145 00d4 FFFFEFFF 		.word	-1048577
 3146 00d8 FFFFF7FF 		.word	-524289
 3147 00dc FFFF9FFF 		.word	-6291457
 3148              		.cfi_endproc
 3149              	.LFE75:
 3151              		.section	.text.UART_CheckIdleState,"ax",%progbits
 3152              		.align	1
 3153              		.global	UART_CheckIdleState
 3154              		.syntax unified
 3155              		.code	16
 3156              		.thumb_func
 3157              		.fpu softvfp
ARM GAS  /tmp/cc5Zd4W1.s 			page 109


 3159              	UART_CheckIdleState:
 3160              	.LFB76:
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
 3161              		.loc 1 2289 0
 3162              		.cfi_startproc
 3163              		@ args = 0, pretend = 0, frame = 0
 3164              		@ frame_needed = 0, uses_anonymous_args = 0
 3165              		@ link register save eliminated.
 3166              	.LVL241:
2295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3167              		.loc 1 2295 0
 3168 0000 0023     		movs	r3, #0
 3169 0002 C366     		str	r3, [r0, #108]
2331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3170              		.loc 1 2331 0
 3171 0004 2022     		movs	r2, #32
 3172 0006 6921     		movs	r1, #105
 3173 0008 4254     		strb	r2, [r0, r1]
2332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3174              		.loc 1 2332 0
 3175 000a 0131     		adds	r1, r1, #1
 3176 000c 4254     		strb	r2, [r0, r1]
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3177              		.loc 1 2335 0
 3178 000e 4832     		adds	r2, r2, #72
 3179 0010 8354     		strb	r3, [r0, r2]
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3180              		.loc 1 2338 0
 3181 0012 0020     		movs	r0, #0
 3182              	.LVL242:
 3183              		@ sp needed
 3184 0014 7047     		bx	lr
 3185              		.cfi_endproc
 3186              	.LFE76:
 3188              		.section	.text.HAL_UART_Init,"ax",%progbits
 3189              		.align	1
 3190              		.global	HAL_UART_Init
 3191              		.syntax unified
 3192              		.code	16
 3193              		.thumb_func
 3194              		.fpu softvfp
 3196              	HAL_UART_Init:
 3197              	.LFB37:
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 3198              		.loc 1 292 0
 3199              		.cfi_startproc
 3200              		@ args = 0, pretend = 0, frame = 0
 3201              		@ frame_needed = 0, uses_anonymous_args = 0
 3202              	.LVL243:
 3203 0000 10B5     		push	{r4, lr}
 3204              	.LCFI25:
 3205              		.cfi_def_cfa_offset 8
 3206              		.cfi_offset 4, -8
 3207              		.cfi_offset 14, -4
 3208 0002 041E     		subs	r4, r0, #0
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3209              		.loc 1 294 0
ARM GAS  /tmp/cc5Zd4W1.s 			page 110


 3210 0004 30D0     		beq	.L202
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3211              		.loc 1 310 0
 3212 0006 6923     		movs	r3, #105
 3213 0008 C35C     		ldrb	r3, [r0, r3]
 3214 000a 002B     		cmp	r3, #0
 3215 000c 22D0     		beq	.L203
 3216              	.LVL244:
 3217              	.L200:
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3218              		.loc 1 319 0
 3219 000e 6923     		movs	r3, #105
 3220 0010 2422     		movs	r2, #36
 3221 0012 E254     		strb	r2, [r4, r3]
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3222              		.loc 1 322 0
 3223 0014 2268     		ldr	r2, [r4]
 3224 0016 1368     		ldr	r3, [r2]
 3225 0018 0121     		movs	r1, #1
 3226 001a 8B43     		bics	r3, r1
 3227 001c 1360     		str	r3, [r2]
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3228              		.loc 1 325 0
 3229 001e 2000     		movs	r0, r4
 3230 0020 FFF7FEFF 		bl	UART_SetConfig
 3231              	.LVL245:
 3232 0024 0128     		cmp	r0, #1
 3233 0026 14D0     		beq	.L199
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3234              		.loc 1 330 0
 3235 0028 636A     		ldr	r3, [r4, #36]
 3236 002a 002B     		cmp	r3, #0
 3237 002c 18D1     		bne	.L204
 3238              	.L201:
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 3239              		.loc 1 341 0
 3240 002e 2268     		ldr	r2, [r4]
 3241 0030 5368     		ldr	r3, [r2, #4]
 3242 0032 0E49     		ldr	r1, .L205
 3243 0034 0B40     		ands	r3, r1
 3244 0036 5360     		str	r3, [r2, #4]
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 3245              		.loc 1 353 0
 3246 0038 2268     		ldr	r2, [r4]
 3247 003a 9368     		ldr	r3, [r2, #8]
 3248 003c 0821     		movs	r1, #8
 3249 003e 8B43     		bics	r3, r1
 3250 0040 9360     		str	r3, [r2, #8]
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3251              		.loc 1 358 0
 3252 0042 2268     		ldr	r2, [r4]
 3253 0044 1368     		ldr	r3, [r2]
 3254 0046 0739     		subs	r1, r1, #7
 3255 0048 0B43     		orrs	r3, r1
 3256 004a 1360     		str	r3, [r2]
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3257              		.loc 1 361 0
ARM GAS  /tmp/cc5Zd4W1.s 			page 111


 3258 004c 2000     		movs	r0, r4
 3259 004e FFF7FEFF 		bl	UART_CheckIdleState
 3260              	.LVL246:
 3261              	.L199:
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3262              		.loc 1 362 0
 3263              		@ sp needed
 3264              	.LVL247:
 3265 0052 10BD     		pop	{r4, pc}
 3266              	.LVL248:
 3267              	.L203:
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3268              		.loc 1 313 0
 3269 0054 6833     		adds	r3, r3, #104
 3270 0056 0022     		movs	r2, #0
 3271 0058 C254     		strb	r2, [r0, r3]
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3272              		.loc 1 316 0
 3273 005a FFF7FEFF 		bl	HAL_UART_MspInit
 3274              	.LVL249:
 3275 005e D6E7     		b	.L200
 3276              	.L204:
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3277              		.loc 1 332 0
 3278 0060 2000     		movs	r0, r4
 3279 0062 FFF7FEFF 		bl	UART_AdvFeatureConfig
 3280              	.LVL250:
 3281 0066 E2E7     		b	.L201
 3282              	.LVL251:
 3283              	.L202:
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3284              		.loc 1 296 0
 3285 0068 0120     		movs	r0, #1
 3286              	.LVL252:
 3287 006a F2E7     		b	.L199
 3288              	.L206:
 3289              		.align	2
 3290              	.L205:
 3291 006c FFF7FFFF 		.word	-2049
 3292              		.cfi_endproc
 3293              	.LFE37:
 3295              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 3296              		.align	1
 3297              		.global	HAL_HalfDuplex_Init
 3298              		.syntax unified
 3299              		.code	16
 3300              		.thumb_func
 3301              		.fpu softvfp
 3303              	HAL_HalfDuplex_Init:
 3304              	.LFB38:
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 3305              		.loc 1 371 0
 3306              		.cfi_startproc
 3307              		@ args = 0, pretend = 0, frame = 0
 3308              		@ frame_needed = 0, uses_anonymous_args = 0
 3309              	.LVL253:
 3310 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/cc5Zd4W1.s 			page 112


 3311              	.LCFI26:
 3312              		.cfi_def_cfa_offset 8
 3313              		.cfi_offset 4, -8
 3314              		.cfi_offset 14, -4
 3315 0002 041E     		subs	r4, r0, #0
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3316              		.loc 1 373 0
 3317 0004 30D0     		beq	.L211
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3318              		.loc 1 381 0
 3319 0006 6923     		movs	r3, #105
 3320 0008 C35C     		ldrb	r3, [r0, r3]
 3321 000a 002B     		cmp	r3, #0
 3322 000c 22D0     		beq	.L212
 3323              	.LVL254:
 3324              	.L209:
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3325              		.loc 1 390 0
 3326 000e 6923     		movs	r3, #105
 3327 0010 2422     		movs	r2, #36
 3328 0012 E254     		strb	r2, [r4, r3]
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3329              		.loc 1 393 0
 3330 0014 2268     		ldr	r2, [r4]
 3331 0016 1368     		ldr	r3, [r2]
 3332 0018 0121     		movs	r1, #1
 3333 001a 8B43     		bics	r3, r1
 3334 001c 1360     		str	r3, [r2]
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3335              		.loc 1 396 0
 3336 001e 2000     		movs	r0, r4
 3337 0020 FFF7FEFF 		bl	UART_SetConfig
 3338              	.LVL255:
 3339 0024 0128     		cmp	r0, #1
 3340 0026 14D0     		beq	.L208
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3341              		.loc 1 401 0
 3342 0028 636A     		ldr	r3, [r4, #36]
 3343 002a 002B     		cmp	r3, #0
 3344 002c 18D1     		bne	.L213
 3345              	.L210:
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 3346              		.loc 1 412 0
 3347 002e 2268     		ldr	r2, [r4]
 3348 0030 5368     		ldr	r3, [r2, #4]
 3349 0032 0E49     		ldr	r1, .L214
 3350 0034 0B40     		ands	r3, r1
 3351 0036 5360     		str	r3, [r2, #4]
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3352              		.loc 1 427 0
 3353 0038 2268     		ldr	r2, [r4]
 3354 003a 9368     		ldr	r3, [r2, #8]
 3355 003c 0821     		movs	r1, #8
 3356 003e 0B43     		orrs	r3, r1
 3357 0040 9360     		str	r3, [r2, #8]
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3358              		.loc 1 430 0
ARM GAS  /tmp/cc5Zd4W1.s 			page 113


 3359 0042 2268     		ldr	r2, [r4]
 3360 0044 1368     		ldr	r3, [r2]
 3361 0046 0739     		subs	r1, r1, #7
 3362 0048 0B43     		orrs	r3, r1
 3363 004a 1360     		str	r3, [r2]
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3364              		.loc 1 433 0
 3365 004c 2000     		movs	r0, r4
 3366 004e FFF7FEFF 		bl	UART_CheckIdleState
 3367              	.LVL256:
 3368              	.L208:
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3369              		.loc 1 434 0
 3370              		@ sp needed
 3371              	.LVL257:
 3372 0052 10BD     		pop	{r4, pc}
 3373              	.LVL258:
 3374              	.L212:
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3375              		.loc 1 384 0
 3376 0054 6833     		adds	r3, r3, #104
 3377 0056 0022     		movs	r2, #0
 3378 0058 C254     		strb	r2, [r0, r3]
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3379              		.loc 1 387 0
 3380 005a FFF7FEFF 		bl	HAL_UART_MspInit
 3381              	.LVL259:
 3382 005e D6E7     		b	.L209
 3383              	.L213:
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3384              		.loc 1 403 0
 3385 0060 2000     		movs	r0, r4
 3386 0062 FFF7FEFF 		bl	UART_AdvFeatureConfig
 3387              	.LVL260:
 3388 0066 E2E7     		b	.L210
 3389              	.LVL261:
 3390              	.L211:
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3391              		.loc 1 375 0
 3392 0068 0120     		movs	r0, #1
 3393              	.LVL262:
 3394 006a F2E7     		b	.L208
 3395              	.L215:
 3396              		.align	2
 3397              	.L214:
 3398 006c FFF7FFFF 		.word	-2049
 3399              		.cfi_endproc
 3400              	.LFE38:
 3402              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 3403              		.align	1
 3404              		.global	HAL_MultiProcessor_Init
 3405              		.syntax unified
 3406              		.code	16
 3407              		.thumb_func
 3408              		.fpu softvfp
 3410              	HAL_MultiProcessor_Init:
 3411              	.LFB39:
ARM GAS  /tmp/cc5Zd4W1.s 			page 114


 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 3412              		.loc 1 456 0
 3413              		.cfi_startproc
 3414              		@ args = 0, pretend = 0, frame = 0
 3415              		@ frame_needed = 0, uses_anonymous_args = 0
 3416              	.LVL263:
 3417 0000 70B5     		push	{r4, r5, r6, lr}
 3418              	.LCFI27:
 3419              		.cfi_def_cfa_offset 16
 3420              		.cfi_offset 4, -16
 3421              		.cfi_offset 5, -12
 3422              		.cfi_offset 6, -8
 3423              		.cfi_offset 14, -4
 3424 0002 0400     		movs	r4, r0
 3425 0004 0D00     		movs	r5, r1
 3426 0006 1600     		movs	r6, r2
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3427              		.loc 1 458 0
 3428 0008 0028     		cmp	r0, #0
 3429 000a 42D0     		beq	.L221
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3430              		.loc 1 466 0
 3431 000c 6923     		movs	r3, #105
 3432 000e C35C     		ldrb	r3, [r0, r3]
 3433 0010 002B     		cmp	r3, #0
 3434 0012 2CD0     		beq	.L222
 3435              	.LVL264:
 3436              	.L218:
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3437              		.loc 1 475 0
 3438 0014 6923     		movs	r3, #105
 3439 0016 2422     		movs	r2, #36
 3440 0018 E254     		strb	r2, [r4, r3]
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3441              		.loc 1 478 0
 3442 001a 2268     		ldr	r2, [r4]
 3443 001c 1368     		ldr	r3, [r2]
 3444 001e 0121     		movs	r1, #1
 3445 0020 8B43     		bics	r3, r1
 3446 0022 1360     		str	r3, [r2]
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3447              		.loc 1 481 0
 3448 0024 2000     		movs	r0, r4
 3449 0026 FFF7FEFF 		bl	UART_SetConfig
 3450              	.LVL265:
 3451 002a 0128     		cmp	r0, #1
 3452 002c 1ED0     		beq	.L217
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3453              		.loc 1 486 0
 3454 002e 636A     		ldr	r3, [r4, #36]
 3455 0030 002B     		cmp	r3, #0
 3456 0032 22D1     		bne	.L223
 3457              	.L219:
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 3458              		.loc 1 497 0
 3459 0034 2268     		ldr	r2, [r4]
 3460 0036 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/cc5Zd4W1.s 			page 115


 3461 0038 1749     		ldr	r1, .L225
 3462 003a 0B40     		ands	r3, r1
 3463 003c 5360     		str	r3, [r2, #4]
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 3464              		.loc 1 509 0
 3465 003e 2268     		ldr	r2, [r4]
 3466 0040 9368     		ldr	r3, [r2, #8]
 3467 0042 0821     		movs	r1, #8
 3468 0044 8B43     		bics	r3, r1
 3469 0046 9360     		str	r3, [r2, #8]
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3470              		.loc 1 513 0
 3471 0048 8023     		movs	r3, #128
 3472 004a 1B01     		lsls	r3, r3, #4
 3473 004c 9E42     		cmp	r6, r3
 3474 004e 18D0     		beq	.L224
 3475              	.L220:
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3476              		.loc 1 520 0
 3477 0050 2368     		ldr	r3, [r4]
 3478 0052 1A68     		ldr	r2, [r3]
 3479 0054 1049     		ldr	r1, .L225
 3480 0056 0A40     		ands	r2, r1
 3481 0058 3243     		orrs	r2, r6
 3482 005a 1A60     		str	r2, [r3]
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3483              		.loc 1 523 0
 3484 005c 2268     		ldr	r2, [r4]
 3485 005e 1368     		ldr	r3, [r2]
 3486 0060 0121     		movs	r1, #1
 3487 0062 0B43     		orrs	r3, r1
 3488 0064 1360     		str	r3, [r2]
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3489              		.loc 1 526 0
 3490 0066 2000     		movs	r0, r4
 3491 0068 FFF7FEFF 		bl	UART_CheckIdleState
 3492              	.LVL266:
 3493              	.L217:
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3494              		.loc 1 527 0
 3495              		@ sp needed
 3496              	.LVL267:
 3497              	.LVL268:
 3498 006c 70BD     		pop	{r4, r5, r6, pc}
 3499              	.LVL269:
 3500              	.L222:
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3501              		.loc 1 469 0
 3502 006e 6833     		adds	r3, r3, #104
 3503 0070 0022     		movs	r2, #0
 3504              	.LVL270:
 3505 0072 C254     		strb	r2, [r0, r3]
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3506              		.loc 1 472 0
 3507 0074 FFF7FEFF 		bl	HAL_UART_MspInit
 3508              	.LVL271:
 3509 0078 CCE7     		b	.L218
ARM GAS  /tmp/cc5Zd4W1.s 			page 116


 3510              	.L223:
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3511              		.loc 1 488 0
 3512 007a 2000     		movs	r0, r4
 3513 007c FFF7FEFF 		bl	UART_AdvFeatureConfig
 3514              	.LVL272:
 3515 0080 D8E7     		b	.L219
 3516              	.L224:
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3517              		.loc 1 516 0
 3518 0082 2268     		ldr	r2, [r4]
 3519 0084 5368     		ldr	r3, [r2, #4]
 3520 0086 1B02     		lsls	r3, r3, #8
 3521 0088 1B0A     		lsrs	r3, r3, #8
 3522 008a 2D06     		lsls	r5, r5, #24
 3523 008c 1D43     		orrs	r5, r3
 3524 008e 5560     		str	r5, [r2, #4]
 3525 0090 DEE7     		b	.L220
 3526              	.LVL273:
 3527              	.L221:
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3528              		.loc 1 460 0
 3529 0092 0120     		movs	r0, #1
 3530              	.LVL274:
 3531 0094 EAE7     		b	.L217
 3532              	.L226:
 3533 0096 C046     		.align	2
 3534              	.L225:
 3535 0098 FFF7FFFF 		.word	-2049
 3536              		.cfi_endproc
 3537              	.LFE39:
 3539              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 3540              		.align	1
 3541              		.global	HAL_MultiProcessor_EnableMuteMode
 3542              		.syntax unified
 3543              		.code	16
 3544              		.thumb_func
 3545              		.fpu softvfp
 3547              	HAL_MultiProcessor_EnableMuteMode:
 3548              	.LFB67:
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 3549              		.loc 1 1954 0
 3550              		.cfi_startproc
 3551              		@ args = 0, pretend = 0, frame = 0
 3552              		@ frame_needed = 0, uses_anonymous_args = 0
 3553              	.LVL275:
 3554 0000 10B5     		push	{r4, lr}
 3555              	.LCFI28:
 3556              		.cfi_def_cfa_offset 8
 3557              		.cfi_offset 4, -8
 3558              		.cfi_offset 14, -4
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3559              		.loc 1 1956 0
 3560 0002 6823     		movs	r3, #104
 3561 0004 C35C     		ldrb	r3, [r0, r3]
 3562 0006 012B     		cmp	r3, #1
 3563 0008 10D0     		beq	.L229
ARM GAS  /tmp/cc5Zd4W1.s 			page 117


1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3564              		.loc 1 1956 0 is_stmt 0 discriminator 2
 3565 000a 6823     		movs	r3, #104
 3566 000c 0122     		movs	r2, #1
 3567 000e C254     		strb	r2, [r0, r3]
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3568              		.loc 1 1958 0 is_stmt 1 discriminator 2
 3569 0010 6832     		adds	r2, r2, #104
 3570 0012 443B     		subs	r3, r3, #68
 3571 0014 8354     		strb	r3, [r0, r2]
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3572              		.loc 1 1961 0 discriminator 2
 3573 0016 0168     		ldr	r1, [r0]
 3574 0018 0C68     		ldr	r4, [r1]
 3575 001a 8023     		movs	r3, #128
 3576 001c 9B01     		lsls	r3, r3, #6
 3577 001e 2343     		orrs	r3, r4
 3578 0020 0B60     		str	r3, [r1]
1963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3579              		.loc 1 1963 0 discriminator 2
 3580 0022 2023     		movs	r3, #32
 3581 0024 8354     		strb	r3, [r0, r2]
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3582              		.loc 1 1965 0 discriminator 2
 3583 0026 FFF7FEFF 		bl	UART_CheckIdleState
 3584              	.LVL276:
 3585              	.L228:
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3586              		.loc 1 1966 0
 3587              		@ sp needed
 3588 002a 10BD     		pop	{r4, pc}
 3589              	.LVL277:
 3590              	.L229:
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3591              		.loc 1 1956 0
 3592 002c 0220     		movs	r0, #2
 3593              	.LVL278:
 3594 002e FCE7     		b	.L228
 3595              		.cfi_endproc
 3596              	.LFE67:
 3598              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 3599              		.align	1
 3600              		.global	HAL_MultiProcessor_DisableMuteMode
 3601              		.syntax unified
 3602              		.code	16
 3603              		.thumb_func
 3604              		.fpu softvfp
 3606              	HAL_MultiProcessor_DisableMuteMode:
 3607              	.LFB68:
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 3608              		.loc 1 1975 0
 3609              		.cfi_startproc
 3610              		@ args = 0, pretend = 0, frame = 0
 3611              		@ frame_needed = 0, uses_anonymous_args = 0
 3612              	.LVL279:
 3613 0000 10B5     		push	{r4, lr}
 3614              	.LCFI29:
ARM GAS  /tmp/cc5Zd4W1.s 			page 118


 3615              		.cfi_def_cfa_offset 8
 3616              		.cfi_offset 4, -8
 3617              		.cfi_offset 14, -4
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3618              		.loc 1 1977 0
 3619 0002 6823     		movs	r3, #104
 3620 0004 C35C     		ldrb	r3, [r0, r3]
 3621 0006 012B     		cmp	r3, #1
 3622 0008 0FD0     		beq	.L232
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3623              		.loc 1 1977 0 is_stmt 0 discriminator 2
 3624 000a 6823     		movs	r3, #104
 3625 000c 0122     		movs	r2, #1
 3626 000e C254     		strb	r2, [r0, r3]
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3627              		.loc 1 1979 0 is_stmt 1 discriminator 2
 3628 0010 6832     		adds	r2, r2, #104
 3629 0012 443B     		subs	r3, r3, #68
 3630 0014 8354     		strb	r3, [r0, r2]
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3631              		.loc 1 1982 0 discriminator 2
 3632 0016 0168     		ldr	r1, [r0]
 3633 0018 0B68     		ldr	r3, [r1]
 3634 001a 054C     		ldr	r4, .L233
 3635 001c 2340     		ands	r3, r4
 3636 001e 0B60     		str	r3, [r1]
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3637              		.loc 1 1984 0 discriminator 2
 3638 0020 2023     		movs	r3, #32
 3639 0022 8354     		strb	r3, [r0, r2]
1986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3640              		.loc 1 1986 0 discriminator 2
 3641 0024 FFF7FEFF 		bl	UART_CheckIdleState
 3642              	.LVL280:
 3643              	.L231:
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3644              		.loc 1 1987 0
 3645              		@ sp needed
 3646 0028 10BD     		pop	{r4, pc}
 3647              	.LVL281:
 3648              	.L232:
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3649              		.loc 1 1977 0
 3650 002a 0220     		movs	r0, #2
 3651              	.LVL282:
 3652 002c FCE7     		b	.L231
 3653              	.L234:
 3654 002e C046     		.align	2
 3655              	.L233:
 3656 0030 FFDFFFFF 		.word	-8193
 3657              		.cfi_endproc
 3658              	.LFE68:
 3660              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 3661              		.align	1
 3662              		.global	UART_WaitOnFlagUntilTimeout
 3663              		.syntax unified
 3664              		.code	16
ARM GAS  /tmp/cc5Zd4W1.s 			page 119


 3665              		.thumb_func
 3666              		.fpu softvfp
 3668              	UART_WaitOnFlagUntilTimeout:
 3669              	.LFB77:
2350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Wait until flag is set */
 3670              		.loc 1 2350 0
 3671              		.cfi_startproc
 3672              		@ args = 4, pretend = 0, frame = 0
 3673              		@ frame_needed = 0, uses_anonymous_args = 0
 3674              	.LVL283:
 3675 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3676              	.LCFI30:
 3677              		.cfi_def_cfa_offset 20
 3678              		.cfi_offset 4, -20
 3679              		.cfi_offset 5, -16
 3680              		.cfi_offset 6, -12
 3681              		.cfi_offset 7, -8
 3682              		.cfi_offset 14, -4
 3683 0002 C646     		mov	lr, r8
 3684 0004 00B5     		push	{lr}
 3685              	.LCFI31:
 3686              		.cfi_def_cfa_offset 24
 3687              		.cfi_offset 8, -24
 3688 0006 0600     		movs	r6, r0
 3689 0008 0C00     		movs	r4, r1
 3690 000a 1700     		movs	r7, r2
 3691 000c 9846     		mov	r8, r3
 3692 000e 069D     		ldr	r5, [sp, #24]
 3693              	.LVL284:
 3694              	.L237:
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3695              		.loc 1 2352 0
 3696 0010 3368     		ldr	r3, [r6]
 3697 0012 DB69     		ldr	r3, [r3, #28]
 3698 0014 2340     		ands	r3, r4
 3699 0016 1B1B     		subs	r3, r3, r4
 3700 0018 5A42     		rsbs	r2, r3, #0
 3701 001a 5341     		adcs	r3, r3, r2
 3702 001c BB42     		cmp	r3, r7
 3703 001e 1ED1     		bne	.L241
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3704              		.loc 1 2355 0
 3705 0020 6B1C     		adds	r3, r5, #1
 3706 0022 F5D0     		beq	.L237
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3707              		.loc 1 2357 0
 3708 0024 002D     		cmp	r5, #0
 3709 0026 05D0     		beq	.L238
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3710              		.loc 1 2357 0 is_stmt 0 discriminator 1
 3711 0028 FFF7FEFF 		bl	HAL_GetTick
 3712              	.LVL285:
 3713 002c 4346     		mov	r3, r8
 3714 002e C01A     		subs	r0, r0, r3
 3715 0030 A842     		cmp	r0, r5
 3716 0032 EDD9     		bls	.L237
 3717              	.L238:
ARM GAS  /tmp/cc5Zd4W1.s 			page 120


2360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3718              		.loc 1 2360 0 is_stmt 1
 3719 0034 3268     		ldr	r2, [r6]
 3720 0036 1368     		ldr	r3, [r2]
 3721 0038 0B49     		ldr	r1, .L242
 3722 003a 0B40     		ands	r3, r1
 3723 003c 1360     		str	r3, [r2]
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3724              		.loc 1 2361 0
 3725 003e 3268     		ldr	r2, [r6]
 3726 0040 9368     		ldr	r3, [r2, #8]
 3727 0042 A331     		adds	r1, r1, #163
 3728 0044 FF31     		adds	r1, r1, #255
 3729 0046 8B43     		bics	r3, r1
 3730 0048 9360     		str	r3, [r2, #8]
2363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 3731              		.loc 1 2363 0
 3732 004a 2023     		movs	r3, #32
 3733 004c 6922     		movs	r2, #105
 3734 004e B354     		strb	r3, [r6, r2]
2364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3735              		.loc 1 2364 0
 3736 0050 0132     		adds	r2, r2, #1
 3737 0052 B354     		strb	r3, [r6, r2]
2367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 3738              		.loc 1 2367 0
 3739 0054 4833     		adds	r3, r3, #72
 3740 0056 0022     		movs	r2, #0
 3741 0058 F254     		strb	r2, [r6, r3]
2368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3742              		.loc 1 2368 0
 3743 005a 0320     		movs	r0, #3
 3744 005c 00E0     		b	.L239
 3745              	.L241:
2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3746              		.loc 1 2372 0
 3747 005e 0020     		movs	r0, #0
 3748              	.L239:
2373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3749              		.loc 1 2373 0
 3750              		@ sp needed
 3751              	.LVL286:
 3752              	.LVL287:
 3753              	.LVL288:
 3754 0060 04BC     		pop	{r2}
 3755 0062 9046     		mov	r8, r2
 3756 0064 F0BD     		pop	{r4, r5, r6, r7, pc}
 3757              	.L243:
 3758 0066 C046     		.align	2
 3759              	.L242:
 3760 0068 5FFEFFFF 		.word	-417
 3761              		.cfi_endproc
 3762              	.LFE77:
 3764              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 3765              		.align	1
 3766              		.global	HAL_UART_Transmit
 3767              		.syntax unified
ARM GAS  /tmp/cc5Zd4W1.s 			page 121


 3768              		.code	16
 3769              		.thumb_func
 3770              		.fpu softvfp
 3772              	HAL_UART_Transmit:
 3773              	.LFB43:
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 3774              		.loc 1 692 0
 3775              		.cfi_startproc
 3776              		@ args = 0, pretend = 0, frame = 8
 3777              		@ frame_needed = 0, uses_anonymous_args = 0
 3778              	.LVL289:
 3779 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3780              	.LCFI32:
 3781              		.cfi_def_cfa_offset 20
 3782              		.cfi_offset 4, -20
 3783              		.cfi_offset 5, -16
 3784              		.cfi_offset 6, -12
 3785              		.cfi_offset 7, -8
 3786              		.cfi_offset 14, -4
 3787 0002 85B0     		sub	sp, sp, #20
 3788              	.LCFI33:
 3789              		.cfi_def_cfa_offset 40
 3790 0004 0400     		movs	r4, r0
 3791 0006 0E00     		movs	r6, r1
 3792 0008 1700     		movs	r7, r2
 3793 000a 1D00     		movs	r5, r3
 3794              	.LVL290:
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3795              		.loc 1 697 0
 3796 000c 6923     		movs	r3, #105
 3797              	.LVL291:
 3798 000e C35C     		ldrb	r3, [r0, r3]
 3799 0010 202B     		cmp	r3, #32
 3800 0012 59D1     		bne	.L251
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3801              		.loc 1 699 0
 3802 0014 0029     		cmp	r1, #0
 3803 0016 5AD0     		beq	.L252
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3804              		.loc 1 699 0 is_stmt 0 discriminator 1
 3805 0018 002A     		cmp	r2, #0
 3806 001a 5AD0     		beq	.L253
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3807              		.loc 1 707 0 is_stmt 1
 3808 001c 8023     		movs	r3, #128
 3809 001e 5B01     		lsls	r3, r3, #5
 3810 0020 8268     		ldr	r2, [r0, #8]
 3811              	.LVL292:
 3812 0022 9A42     		cmp	r2, r3
 3813 0024 13D0     		beq	.L258
 3814              	.L246:
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3815              		.loc 1 716 0
 3816 0026 6823     		movs	r3, #104
 3817 0028 E35C     		ldrb	r3, [r4, r3]
 3818 002a 012B     		cmp	r3, #1
 3819 002c 53D0     		beq	.L255
ARM GAS  /tmp/cc5Zd4W1.s 			page 122


 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3820              		.loc 1 716 0 is_stmt 0 discriminator 2
 3821 002e 6823     		movs	r3, #104
 3822 0030 0122     		movs	r2, #1
 3823 0032 E254     		strb	r2, [r4, r3]
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 3824              		.loc 1 718 0 is_stmt 1 discriminator 2
 3825 0034 0023     		movs	r3, #0
 3826 0036 E366     		str	r3, [r4, #108]
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3827              		.loc 1 719 0 discriminator 2
 3828 0038 6933     		adds	r3, r3, #105
 3829 003a 2032     		adds	r2, r2, #32
 3830 003c E254     		strb	r2, [r4, r3]
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3831              		.loc 1 722 0 discriminator 2
 3832 003e FFF7FEFF 		bl	HAL_GetTick
 3833              	.LVL293:
 3834 0042 0390     		str	r0, [sp, #12]
 3835              	.LVL294:
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 3836              		.loc 1 724 0 discriminator 2
 3837 0044 5023     		movs	r3, #80
 3838 0046 E752     		strh	r7, [r4, r3]
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while(huart->TxXferCount > 0)
 3839              		.loc 1 725 0 discriminator 2
 3840 0048 0233     		adds	r3, r3, #2
 3841 004a E752     		strh	r7, [r4, r3]
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3842              		.loc 1 726 0 discriminator 2
 3843 004c 0AE0     		b	.L247
 3844              	.LVL295:
 3845              	.L258:
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3846              		.loc 1 707 0 discriminator 1
 3847 004e 0369     		ldr	r3, [r0, #16]
 3848 0050 002B     		cmp	r3, #0
 3849 0052 E8D1     		bne	.L246
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3850              		.loc 1 709 0
 3851 0054 CB07     		lsls	r3, r1, #31
 3852 0056 E6D5     		bpl	.L246
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3853              		.loc 1 711 0
 3854 0058 0120     		movs	r0, #1
 3855              	.LVL296:
 3856 005a 36E0     		b	.L245
 3857              	.LVL297:
 3858              	.L248:
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3859              		.loc 1 741 0
 3860 005c 3378     		ldrb	r3, [r6]
 3861 005e 2268     		ldr	r2, [r4]
 3862 0060 1385     		strh	r3, [r2, #40]
 3863 0062 0136     		adds	r6, r6, #1
 3864              	.LVL298:
 3865              	.L247:
ARM GAS  /tmp/cc5Zd4W1.s 			page 123


 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3866              		.loc 1 726 0
 3867 0064 5223     		movs	r3, #82
 3868 0066 E35A     		ldrh	r3, [r4, r3]
 3869 0068 9BB2     		uxth	r3, r3
 3870 006a 002B     		cmp	r3, #0
 3871 006c 1CD0     		beq	.L259
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3872              		.loc 1 728 0
 3873 006e 5222     		movs	r2, #82
 3874 0070 A35A     		ldrh	r3, [r4, r2]
 3875 0072 013B     		subs	r3, r3, #1
 3876 0074 9BB2     		uxth	r3, r3
 3877 0076 A352     		strh	r3, [r4, r2]
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3878              		.loc 1 729 0
 3879 0078 0095     		str	r5, [sp]
 3880 007a 039B     		ldr	r3, [sp, #12]
 3881 007c 0022     		movs	r2, #0
 3882 007e 8021     		movs	r1, #128
 3883 0080 2000     		movs	r0, r4
 3884 0082 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3885              	.LVL299:
 3886 0086 0028     		cmp	r0, #0
 3887 0088 27D1     		bne	.L256
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3888              		.loc 1 733 0
 3889 008a 8023     		movs	r3, #128
 3890 008c 5B01     		lsls	r3, r3, #5
 3891 008e A268     		ldr	r2, [r4, #8]
 3892 0090 9A42     		cmp	r2, r3
 3893 0092 E3D1     		bne	.L248
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3894              		.loc 1 733 0 is_stmt 0 discriminator 1
 3895 0094 2369     		ldr	r3, [r4, #16]
 3896 0096 002B     		cmp	r3, #0
 3897 0098 E0D1     		bne	.L248
 3898              	.LVL300:
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData += 2;
 3899              		.loc 1 736 0 is_stmt 1
 3900 009a 3388     		ldrh	r3, [r6]
 3901 009c DB05     		lsls	r3, r3, #23
 3902 009e DB0D     		lsrs	r3, r3, #23
 3903 00a0 2268     		ldr	r2, [r4]
 3904 00a2 1385     		strh	r3, [r2, #40]
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3905              		.loc 1 737 0
 3906 00a4 0236     		adds	r6, r6, #2
 3907              	.LVL301:
 3908 00a6 DDE7     		b	.L247
 3909              	.LVL302:
 3910              	.L259:
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3911              		.loc 1 744 0
 3912 00a8 0095     		str	r5, [sp]
 3913 00aa 039B     		ldr	r3, [sp, #12]
 3914 00ac 0022     		movs	r2, #0
ARM GAS  /tmp/cc5Zd4W1.s 			page 124


 3915 00ae 4021     		movs	r1, #64
 3916 00b0 2000     		movs	r0, r4
 3917 00b2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3918              	.LVL303:
 3919 00b6 0028     		cmp	r0, #0
 3920 00b8 11D1     		bne	.L257
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3921              		.loc 1 750 0
 3922 00ba 6923     		movs	r3, #105
 3923 00bc 2022     		movs	r2, #32
 3924 00be E254     		strb	r2, [r4, r3]
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3925              		.loc 1 753 0
 3926 00c0 013B     		subs	r3, r3, #1
 3927 00c2 0022     		movs	r2, #0
 3928 00c4 E254     		strb	r2, [r4, r3]
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3929              		.loc 1 755 0
 3930 00c6 00E0     		b	.L245
 3931              	.LVL304:
 3932              	.L251:
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3933              		.loc 1 759 0
 3934 00c8 0220     		movs	r0, #2
 3935              	.LVL305:
 3936              	.L245:
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3937              		.loc 1 761 0
 3938 00ca 05B0     		add	sp, sp, #20
 3939              		@ sp needed
 3940              	.LVL306:
 3941              	.LVL307:
 3942              	.LVL308:
 3943 00cc F0BD     		pop	{r4, r5, r6, r7, pc}
 3944              	.LVL309:
 3945              	.L252:
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 3946              		.loc 1 701 0
 3947 00ce 0120     		movs	r0, #1
 3948              	.LVL310:
 3949 00d0 FBE7     		b	.L245
 3950              	.LVL311:
 3951              	.L253:
 3952 00d2 0120     		movs	r0, #1
 3953              	.LVL312:
 3954 00d4 F9E7     		b	.L245
 3955              	.LVL313:
 3956              	.L255:
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3957              		.loc 1 716 0
 3958 00d6 0220     		movs	r0, #2
 3959              	.LVL314:
 3960 00d8 F7E7     		b	.L245
 3961              	.LVL315:
 3962              	.L256:
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3963              		.loc 1 731 0
ARM GAS  /tmp/cc5Zd4W1.s 			page 125


 3964 00da 0320     		movs	r0, #3
 3965 00dc F5E7     		b	.L245
 3966              	.L257:
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 3967              		.loc 1 746 0
 3968 00de 0320     		movs	r0, #3
 3969 00e0 F3E7     		b	.L245
 3970              		.cfi_endproc
 3971              	.LFE43:
 3973              		.section	.text.HAL_UART_Receive,"ax",%progbits
 3974              		.align	1
 3975              		.global	HAL_UART_Receive
 3976              		.syntax unified
 3977              		.code	16
 3978              		.thumb_func
 3979              		.fpu softvfp
 3981              	HAL_UART_Receive:
 3982              	.LFB44:
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 3983              		.loc 1 776 0
 3984              		.cfi_startproc
 3985              		@ args = 0, pretend = 0, frame = 8
 3986              		@ frame_needed = 0, uses_anonymous_args = 0
 3987              	.LVL316:
 3988 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3989              	.LCFI34:
 3990              		.cfi_def_cfa_offset 20
 3991              		.cfi_offset 4, -20
 3992              		.cfi_offset 5, -16
 3993              		.cfi_offset 6, -12
 3994              		.cfi_offset 7, -8
 3995              		.cfi_offset 14, -4
 3996 0002 85B0     		sub	sp, sp, #20
 3997              	.LCFI35:
 3998              		.cfi_def_cfa_offset 40
 3999 0004 0400     		movs	r4, r0
 4000 0006 0F00     		movs	r7, r1
 4001 0008 1600     		movs	r6, r2
 4002 000a 1D00     		movs	r5, r3
 4003              	.LVL317:
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4004              		.loc 1 782 0
 4005 000c 6A23     		movs	r3, #106
 4006              	.LVL318:
 4007 000e C35C     		ldrb	r3, [r0, r3]
 4008 0010 202B     		cmp	r3, #32
 4009 0012 73D1     		bne	.L271
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4010              		.loc 1 784 0
 4011 0014 0029     		cmp	r1, #0
 4012 0016 00D1     		bne	.LCB3586
 4013 0018 73E0     		b	.L272	@long jump
 4014              	.LCB3586:
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4015              		.loc 1 784 0 is_stmt 0 discriminator 1
 4016 001a 002A     		cmp	r2, #0
 4017 001c 00D1     		bne	.LCB3588
ARM GAS  /tmp/cc5Zd4W1.s 			page 126


 4018 001e 72E0     		b	.L273	@long jump
 4019              	.LCB3588:
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4020              		.loc 1 792 0 is_stmt 1
 4021 0020 8023     		movs	r3, #128
 4022 0022 5B01     		lsls	r3, r3, #5
 4023 0024 8268     		ldr	r2, [r0, #8]
 4024              	.LVL319:
 4025 0026 9A42     		cmp	r2, r3
 4026 0028 21D0     		beq	.L277
 4027              	.L262:
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4028              		.loc 1 801 0
 4029 002a 6823     		movs	r3, #104
 4030 002c E35C     		ldrb	r3, [r4, r3]
 4031 002e 012B     		cmp	r3, #1
 4032 0030 00D1     		bne	.LCB3600
 4033 0032 6AE0     		b	.L275	@long jump
 4034              	.LCB3600:
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4035              		.loc 1 801 0 is_stmt 0 discriminator 2
 4036 0034 6823     		movs	r3, #104
 4037 0036 0122     		movs	r2, #1
 4038 0038 E254     		strb	r2, [r4, r3]
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 4039              		.loc 1 803 0 is_stmt 1 discriminator 2
 4040 003a 0023     		movs	r3, #0
 4041 003c E366     		str	r3, [r4, #108]
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4042              		.loc 1 804 0 discriminator 2
 4043 003e 6A33     		adds	r3, r3, #106
 4044 0040 2132     		adds	r2, r2, #33
 4045 0042 E254     		strb	r2, [r4, r3]
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4046              		.loc 1 807 0 discriminator 2
 4047 0044 FFF7FEFF 		bl	HAL_GetTick
 4048              	.LVL320:
 4049 0048 0390     		str	r0, [sp, #12]
 4050              	.LVL321:
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 4051              		.loc 1 809 0 discriminator 2
 4052 004a 5823     		movs	r3, #88
 4053 004c E652     		strh	r6, [r4, r3]
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4054              		.loc 1 810 0 discriminator 2
 4055 004e 0233     		adds	r3, r3, #2
 4056 0050 E652     		strh	r6, [r4, r3]
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 4057              		.loc 1 813 0 discriminator 2
 4058 0052 A368     		ldr	r3, [r4, #8]
 4059 0054 8022     		movs	r2, #128
 4060 0056 5201     		lsls	r2, r2, #5
 4061 0058 9342     		cmp	r3, r2
 4062 005a 0FD0     		beq	.L278
 4063 005c 002B     		cmp	r3, #0
 4064 005e 13D1     		bne	.L265
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
ARM GAS  /tmp/cc5Zd4W1.s 			page 127


 4065              		.loc 1 813 0 is_stmt 0 discriminator 5
 4066 0060 2369     		ldr	r3, [r4, #16]
 4067 0062 002B     		cmp	r3, #0
 4068 0064 17D1     		bne	.L266
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 4069              		.loc 1 813 0 discriminator 6
 4070 0066 5C33     		adds	r3, r3, #92
 4071 0068 FF22     		movs	r2, #255
 4072 006a E252     		strh	r2, [r4, r3]
 4073 006c 0CE0     		b	.L265
 4074              	.LVL322:
 4075              	.L277:
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4076              		.loc 1 792 0 is_stmt 1 discriminator 1
 4077 006e 0369     		ldr	r3, [r0, #16]
 4078 0070 002B     		cmp	r3, #0
 4079 0072 DAD1     		bne	.L262
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4080              		.loc 1 794 0
 4081 0074 CB07     		lsls	r3, r1, #31
 4082 0076 D8D5     		bpl	.L262
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4083              		.loc 1 796 0
 4084 0078 0120     		movs	r0, #1
 4085              	.LVL323:
 4086 007a 40E0     		b	.L261
 4087              	.LVL324:
 4088              	.L278:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 4089              		.loc 1 813 0 discriminator 1
 4090 007c 2369     		ldr	r3, [r4, #16]
 4091 007e 002B     		cmp	r3, #0
 4092 0080 05D1     		bne	.L264
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 4093              		.loc 1 813 0 is_stmt 0 discriminator 3
 4094 0082 5C33     		adds	r3, r3, #92
 4095 0084 234A     		ldr	r2, .L280
 4096 0086 E252     		strh	r2, [r4, r3]
 4097              	.L265:
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4098              		.loc 1 814 0 is_stmt 1
 4099 0088 5C23     		movs	r3, #92
 4100 008a E65A     		ldrh	r6, [r4, r3]
 4101              	.LVL325:
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4102              		.loc 1 817 0
 4103 008c 0DE0     		b	.L267
 4104              	.LVL326:
 4105              	.L264:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 4106              		.loc 1 813 0 discriminator 4
 4107 008e 5C23     		movs	r3, #92
 4108 0090 FF22     		movs	r2, #255
 4109 0092 E252     		strh	r2, [r4, r3]
 4110 0094 F8E7     		b	.L265
 4111              	.L266:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
ARM GAS  /tmp/cc5Zd4W1.s 			page 128


 4112              		.loc 1 813 0 is_stmt 0 discriminator 7
 4113 0096 5C23     		movs	r3, #92
 4114 0098 7F22     		movs	r2, #127
 4115 009a E252     		strh	r2, [r4, r3]
 4116 009c F4E7     		b	.L265
 4117              	.LVL327:
 4118              	.L268:
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4119              		.loc 1 832 0 is_stmt 1
 4120 009e 2368     		ldr	r3, [r4]
 4121 00a0 9B8C     		ldrh	r3, [r3, #36]
 4122 00a2 F2B2     		uxtb	r2, r6
 4123              	.LVL328:
 4124 00a4 1340     		ands	r3, r2
 4125 00a6 3B70     		strb	r3, [r7]
 4126 00a8 0137     		adds	r7, r7, #1
 4127              	.LVL329:
 4128              	.L267:
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4129              		.loc 1 817 0
 4130 00aa 5A23     		movs	r3, #90
 4131 00ac E35A     		ldrh	r3, [r4, r3]
 4132 00ae 9BB2     		uxth	r3, r3
 4133 00b0 002B     		cmp	r3, #0
 4134 00b2 1BD0     		beq	.L279
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 4135              		.loc 1 819 0
 4136 00b4 5A22     		movs	r2, #90
 4137 00b6 A35A     		ldrh	r3, [r4, r2]
 4138 00b8 013B     		subs	r3, r3, #1
 4139 00ba 9BB2     		uxth	r3, r3
 4140 00bc A352     		strh	r3, [r4, r2]
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4141              		.loc 1 820 0
 4142 00be 0095     		str	r5, [sp]
 4143 00c0 039B     		ldr	r3, [sp, #12]
 4144 00c2 0022     		movs	r2, #0
 4145 00c4 2021     		movs	r1, #32
 4146 00c6 2000     		movs	r0, r4
 4147 00c8 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4148              	.LVL330:
 4149 00cc 0028     		cmp	r0, #0
 4150 00ce 1ED1     		bne	.L276
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4151              		.loc 1 824 0
 4152 00d0 8023     		movs	r3, #128
 4153 00d2 5B01     		lsls	r3, r3, #5
 4154 00d4 A268     		ldr	r2, [r4, #8]
 4155 00d6 9A42     		cmp	r2, r3
 4156 00d8 E1D1     		bne	.L268
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4157              		.loc 1 824 0 is_stmt 0 discriminator 1
 4158 00da 2369     		ldr	r3, [r4, #16]
 4159 00dc 002B     		cmp	r3, #0
 4160 00de DED1     		bne	.L268
 4161              	.LVL331:
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData +=2U;
ARM GAS  /tmp/cc5Zd4W1.s 			page 129


 4162              		.loc 1 827 0 is_stmt 1
 4163 00e0 2368     		ldr	r3, [r4]
 4164 00e2 9B8C     		ldrh	r3, [r3, #36]
 4165 00e4 3340     		ands	r3, r6
 4166 00e6 3B80     		strh	r3, [r7]
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4167              		.loc 1 828 0
 4168 00e8 0237     		adds	r7, r7, #2
 4169              	.LVL332:
 4170 00ea DEE7     		b	.L267
 4171              	.LVL333:
 4172              	.L279:
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4173              		.loc 1 837 0
 4174 00ec 6A33     		adds	r3, r3, #106
 4175 00ee 2022     		movs	r2, #32
 4176 00f0 E254     		strb	r2, [r4, r3]
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4177              		.loc 1 840 0
 4178 00f2 023B     		subs	r3, r3, #2
 4179 00f4 0022     		movs	r2, #0
 4180 00f6 E254     		strb	r2, [r4, r3]
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4181              		.loc 1 842 0
 4182 00f8 0020     		movs	r0, #0
 4183 00fa 00E0     		b	.L261
 4184              	.LVL334:
 4185              	.L271:
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4186              		.loc 1 846 0
 4187 00fc 0220     		movs	r0, #2
 4188              	.LVL335:
 4189              	.L261:
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4190              		.loc 1 848 0
 4191 00fe 05B0     		add	sp, sp, #20
 4192              		@ sp needed
 4193              	.LVL336:
 4194              	.LVL337:
 4195              	.LVL338:
 4196 0100 F0BD     		pop	{r4, r5, r6, r7, pc}
 4197              	.LVL339:
 4198              	.L272:
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4199              		.loc 1 786 0
 4200 0102 0120     		movs	r0, #1
 4201              	.LVL340:
 4202 0104 FBE7     		b	.L261
 4203              	.LVL341:
 4204              	.L273:
 4205 0106 0120     		movs	r0, #1
 4206              	.LVL342:
 4207 0108 F9E7     		b	.L261
 4208              	.LVL343:
 4209              	.L275:
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4210              		.loc 1 801 0
ARM GAS  /tmp/cc5Zd4W1.s 			page 130


 4211 010a 0220     		movs	r0, #2
 4212              	.LVL344:
 4213 010c F7E7     		b	.L261
 4214              	.LVL345:
 4215              	.L276:
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4216              		.loc 1 822 0
 4217 010e 0320     		movs	r0, #3
 4218 0110 F5E7     		b	.L261
 4219              	.L281:
 4220 0112 C046     		.align	2
 4221              	.L280:
 4222 0114 FF010000 		.word	511
 4223              		.cfi_endproc
 4224              	.LFE44:
 4226              		.section	.text.UART_Transmit_IT,"ax",%progbits
 4227              		.align	1
 4228              		.global	UART_Transmit_IT
 4229              		.syntax unified
 4230              		.code	16
 4231              		.thumb_func
 4232              		.fpu softvfp
 4234              	UART_Transmit_IT:
 4235              	.LFB90:
2661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Send an amount of data in interrupt mode.
2664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
2666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4236              		.loc 1 2670 0
 4237              		.cfi_startproc
 4238              		@ args = 0, pretend = 0, frame = 0
 4239              		@ frame_needed = 0, uses_anonymous_args = 0
 4240              		@ link register save eliminated.
 4241              	.LVL346:
2671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
2672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 4242              		.loc 1 2674 0
 4243 0000 6923     		movs	r3, #105
 4244 0002 C35C     		ldrb	r3, [r0, r3]
 4245 0004 212B     		cmp	r3, #33
 4246 0006 2FD1     		bne	.L287
2675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->TxXferCount == 0U)
 4247              		.loc 1 2676 0
 4248 0008 3133     		adds	r3, r3, #49
 4249 000a C35A     		ldrh	r3, [r0, r3]
 4250 000c 9BB2     		uxth	r3, r3
 4251 000e 002B     		cmp	r3, #0
 4252 0010 11D0     		beq	.L288
ARM GAS  /tmp/cc5Zd4W1.s 			page 131


2677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
2679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
2680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
2682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_OK;
2685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 4253              		.loc 1 2688 0
 4254 0012 8023     		movs	r3, #128
 4255 0014 5B01     		lsls	r3, r3, #5
 4256 0016 8268     		ldr	r2, [r0, #8]
 4257 0018 9A42     		cmp	r2, r3
 4258 001a 18D0     		beq	.L289
 4259              	.L285:
2689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
2691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
2692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
2693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
2695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFFU);
 4260              		.loc 1 2696 0
 4261 001c C36C     		ldr	r3, [r0, #76]
 4262 001e 5A1C     		adds	r2, r3, #1
 4263 0020 C264     		str	r2, [r0, #76]
 4264 0022 1B78     		ldrb	r3, [r3]
 4265 0024 0268     		ldr	r2, [r0]
 4266 0026 1385     		strh	r3, [r2, #40]
 4267              	.L286:
2697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
 4268              		.loc 1 2698 0
 4269 0028 5222     		movs	r2, #82
 4270 002a 835A     		ldrh	r3, [r0, r2]
 4271 002c 013B     		subs	r3, r3, #1
 4272 002e 9BB2     		uxth	r3, r3
 4273 0030 8352     		strh	r3, [r0, r2]
2699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_OK;
 4274              		.loc 1 2700 0
 4275 0032 0020     		movs	r0, #0
 4276              	.LVL347:
 4277 0034 19E0     		b	.L283
 4278              	.LVL348:
 4279              	.L288:
2679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4280              		.loc 1 2679 0
 4281 0036 0268     		ldr	r2, [r0]
 4282 0038 1368     		ldr	r3, [r2]
 4283 003a 8021     		movs	r1, #128
 4284 003c 8B43     		bics	r3, r1
ARM GAS  /tmp/cc5Zd4W1.s 			page 132


 4285 003e 1360     		str	r3, [r2]
2682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4286              		.loc 1 2682 0
 4287 0040 0268     		ldr	r2, [r0]
 4288 0042 1368     		ldr	r3, [r2]
 4289 0044 4039     		subs	r1, r1, #64
 4290 0046 0B43     		orrs	r3, r1
 4291 0048 1360     		str	r3, [r2]
2684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4292              		.loc 1 2684 0
 4293 004a 0020     		movs	r0, #0
 4294              	.LVL349:
 4295 004c 0DE0     		b	.L283
 4296              	.LVL350:
 4297              	.L289:
2688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4298              		.loc 1 2688 0 discriminator 1
 4299 004e 0369     		ldr	r3, [r0, #16]
 4300 0050 002B     		cmp	r3, #0
 4301 0052 E3D1     		bne	.L285
 4302              	.LVL351:
2691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 4303              		.loc 1 2691 0
 4304 0054 C36C     		ldr	r3, [r0, #76]
 4305 0056 1B88     		ldrh	r3, [r3]
 4306 0058 DB05     		lsls	r3, r3, #23
 4307 005a DB0D     		lsrs	r3, r3, #23
 4308 005c 0268     		ldr	r2, [r0]
 4309 005e 1385     		strh	r3, [r2, #40]
 4310              	.LVL352:
2692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4311              		.loc 1 2692 0
 4312 0060 C36C     		ldr	r3, [r0, #76]
 4313 0062 0233     		adds	r3, r3, #2
 4314 0064 C364     		str	r3, [r0, #76]
 4315 0066 DFE7     		b	.L286
 4316              	.L287:
2701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 4317              		.loc 1 2705 0
 4318 0068 0220     		movs	r0, #2
 4319              	.LVL353:
 4320              	.L283:
2706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4321              		.loc 1 2707 0
 4322              		@ sp needed
 4323 006a 7047     		bx	lr
 4324              		.cfi_endproc
 4325              	.LFE90:
 4327              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 4328              		.align	1
 4329              		.global	UART_EndTransmit_IT
 4330              		.syntax unified
ARM GAS  /tmp/cc5Zd4W1.s 			page 133


 4331              		.code	16
 4332              		.thumb_func
 4333              		.fpu softvfp
 4335              	UART_EndTransmit_IT:
 4336              	.LFB91:
2708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
2711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART module.
2713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4337              		.loc 1 2716 0
 4338              		.cfi_startproc
 4339              		@ args = 0, pretend = 0, frame = 0
 4340              		@ frame_needed = 0, uses_anonymous_args = 0
 4341              	.LVL354:
 4342 0000 10B5     		push	{r4, lr}
 4343              	.LCFI36:
 4344              		.cfi_def_cfa_offset 8
 4345              		.cfi_offset 4, -8
 4346              		.cfi_offset 14, -4
2717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
2718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 4347              		.loc 1 2718 0
 4348 0002 0268     		ldr	r2, [r0]
 4349 0004 1368     		ldr	r3, [r2]
 4350 0006 4021     		movs	r1, #64
 4351 0008 8B43     		bics	r3, r1
 4352 000a 1360     		str	r3, [r2]
2719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4353              		.loc 1 2721 0
 4354 000c 6923     		movs	r3, #105
 4355 000e 2022     		movs	r2, #32
 4356 0010 C254     		strb	r2, [r0, r3]
2722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 4357              		.loc 1 2723 0
 4358 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 4359              	.LVL355:
2724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4360              		.loc 1 2726 0
 4361 0016 0020     		movs	r0, #0
 4362              		@ sp needed
 4363 0018 10BD     		pop	{r4, pc}
 4364              		.cfi_endproc
 4365              	.LFE91:
 4367              		.section	.text.UART_Receive_IT,"ax",%progbits
 4368              		.align	1
 4369              		.global	UART_Receive_IT
 4370              		.syntax unified
ARM GAS  /tmp/cc5Zd4W1.s 			page 134


 4371              		.code	16
 4372              		.thumb_func
 4373              		.fpu softvfp
 4375              	UART_Receive_IT:
 4376              	.LFB92:
2727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Receive an amount of data in interrupt mode.
2730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
2732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4377              		.loc 1 2736 0
 4378              		.cfi_startproc
 4379              		@ args = 0, pretend = 0, frame = 0
 4380              		@ frame_needed = 0, uses_anonymous_args = 0
 4381              	.LVL356:
 4382 0000 10B5     		push	{r4, lr}
 4383              	.LCFI37:
 4384              		.cfi_def_cfa_offset 8
 4385              		.cfi_offset 4, -8
 4386              		.cfi_offset 14, -4
2737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
2738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 4387              		.loc 1 2738 0
 4388 0002 5C23     		movs	r3, #92
 4389 0004 C25A     		ldrh	r2, [r0, r3]
 4390              	.LVL357:
2739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t  uhdata;
2740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 4391              		.loc 1 2742 0
 4392 0006 0E33     		adds	r3, r3, #14
 4393 0008 C35C     		ldrb	r3, [r0, r3]
 4394 000a 222B     		cmp	r3, #34
 4395 000c 32D1     		bne	.L292
2743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 4396              		.loc 1 2744 0
 4397 000e 0368     		ldr	r3, [r0]
 4398 0010 9B8C     		ldrh	r3, [r3, #36]
 4399 0012 9BB2     		uxth	r3, r3
 4400              	.LVL358:
2745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 4401              		.loc 1 2745 0
 4402 0014 8021     		movs	r1, #128
 4403 0016 4901     		lsls	r1, r1, #5
 4404 0018 8468     		ldr	r4, [r0, #8]
 4405 001a 8C42     		cmp	r4, r1
 4406 001c 0ED0     		beq	.L297
 4407              	.L293:
2746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
ARM GAS  /tmp/cc5Zd4W1.s 			page 135


2748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
2749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pRxBuffPtr +=2U;
2750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)uhMask);
 4408              		.loc 1 2753 0
 4409 001e D2B2     		uxtb	r2, r2
 4410              	.LVL359:
 4411 0020 416D     		ldr	r1, [r0, #84]
 4412 0022 4C1C     		adds	r4, r1, #1
 4413 0024 4465     		str	r4, [r0, #84]
 4414              	.LVL360:
 4415 0026 1340     		ands	r3, r2
 4416              	.LVL361:
 4417 0028 0B70     		strb	r3, [r1]
 4418              	.L294:
2754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
 4419              		.loc 1 2756 0
 4420 002a 5A22     		movs	r2, #90
 4421 002c 835A     		ldrh	r3, [r0, r2]
 4422 002e 013B     		subs	r3, r3, #1
 4423 0030 9BB2     		uxth	r3, r3
 4424 0032 8352     		strh	r3, [r0, r2]
 4425 0034 002B     		cmp	r3, #0
 4426 0036 0BD0     		beq	.L298
2757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
2759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
2768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_OK;
2770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 4427              		.loc 1 2772 0
 4428 0038 0020     		movs	r0, #0
 4429              	.LVL362:
 4430 003a 21E0     		b	.L295
 4431              	.LVL363:
 4432              	.L297:
2745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4433              		.loc 1 2745 0 discriminator 1
 4434 003c 0169     		ldr	r1, [r0, #16]
 4435 003e 0029     		cmp	r1, #0
 4436 0040 EDD1     		bne	.L293
 4437              	.LVL364:
2748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pRxBuffPtr +=2U;
ARM GAS  /tmp/cc5Zd4W1.s 			page 136


 4438              		.loc 1 2748 0
 4439 0042 1340     		ands	r3, r2
 4440              	.LVL365:
 4441 0044 426D     		ldr	r2, [r0, #84]
 4442              	.LVL366:
 4443 0046 1380     		strh	r3, [r2]
 4444              	.LVL367:
2749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4445              		.loc 1 2749 0
 4446 0048 436D     		ldr	r3, [r0, #84]
 4447 004a 0233     		adds	r3, r3, #2
 4448 004c 4365     		str	r3, [r0, #84]
 4449 004e ECE7     		b	.L294
 4450              	.LVL368:
 4451              	.L298:
2759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4452              		.loc 1 2759 0
 4453 0050 0268     		ldr	r2, [r0]
 4454 0052 1368     		ldr	r3, [r2]
 4455 0054 0B49     		ldr	r1, .L299
 4456 0056 0B40     		ands	r3, r1
 4457 0058 1360     		str	r3, [r2]
2762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4458              		.loc 1 2762 0
 4459 005a 0268     		ldr	r2, [r0]
 4460 005c 9368     		ldr	r3, [r2, #8]
 4461 005e 2331     		adds	r1, r1, #35
 4462 0060 FF31     		adds	r1, r1, #255
 4463 0062 8B43     		bics	r3, r1
 4464 0064 9360     		str	r3, [r2, #8]
2765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4465              		.loc 1 2765 0
 4466 0066 6A23     		movs	r3, #106
 4467 0068 2022     		movs	r2, #32
 4468 006a C254     		strb	r2, [r0, r3]
2767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4469              		.loc 1 2767 0
 4470 006c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 4471              	.LVL369:
2769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4472              		.loc 1 2769 0
 4473 0070 0020     		movs	r0, #0
 4474 0072 05E0     		b	.L295
 4475              	.LVL370:
 4476              	.L292:
2773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
2777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 4477              		.loc 1 2777 0
 4478 0074 0268     		ldr	r2, [r0]
 4479              	.LVL371:
 4480 0076 9369     		ldr	r3, [r2, #24]
 4481 0078 0821     		movs	r1, #8
 4482 007a 0B43     		orrs	r3, r1
 4483 007c 9361     		str	r3, [r2, #24]
ARM GAS  /tmp/cc5Zd4W1.s 			page 137


 4484              	.LVL372:
2778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 4485              		.loc 1 2779 0
 4486 007e 0220     		movs	r0, #2
 4487              	.LVL373:
 4488              	.L295:
2780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4489              		.loc 1 2781 0
 4490              		@ sp needed
 4491 0080 10BD     		pop	{r4, pc}
 4492              	.L300:
 4493 0082 C046     		.align	2
 4494              	.L299:
 4495 0084 DFFEFFFF 		.word	-289
 4496              		.cfi_endproc
 4497              	.LFE92:
 4499              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 4500              		.align	1
 4501              		.global	HAL_UART_IRQHandler
 4502              		.syntax unified
 4503              		.code	16
 4504              		.thumb_func
 4505              		.fpu softvfp
 4507              	HAL_UART_IRQHandler:
 4508              	.LFB58:
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 4509              		.loc 1 1657 0
 4510              		.cfi_startproc
 4511              		@ args = 0, pretend = 0, frame = 0
 4512              		@ frame_needed = 0, uses_anonymous_args = 0
 4513              	.LVL374:
 4514 0000 70B5     		push	{r4, r5, r6, lr}
 4515              	.LCFI38:
 4516              		.cfi_def_cfa_offset 16
 4517              		.cfi_offset 4, -16
 4518              		.cfi_offset 5, -12
 4519              		.cfi_offset 6, -8
 4520              		.cfi_offset 14, -4
 4521 0002 0400     		movs	r4, r0
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 4522              		.loc 1 1658 0
 4523 0004 0168     		ldr	r1, [r0]
 4524 0006 CB69     		ldr	r3, [r1, #28]
 4525              	.LVL375:
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr3its;
 4526              		.loc 1 1659 0
 4527 0008 0868     		ldr	r0, [r1]
 4528              	.LVL376:
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (errorflags == RESET)
 4529              		.loc 1 1664 0
 4530 000a 0F22     		movs	r2, #15
 4531 000c 1A40     		ands	r2, r3
 4532              	.LVL377:
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4533              		.loc 1 1665 0
ARM GAS  /tmp/cc5Zd4W1.s 			page 138


 4534 000e 03D1     		bne	.L302
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4535              		.loc 1 1668 0
 4536 0010 9D06     		lsls	r5, r3, #26
 4537 0012 01D5     		bpl	.L302
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4538              		.loc 1 1668 0 is_stmt 0 discriminator 1
 4539 0014 8506     		lsls	r5, r0, #26
 4540 0016 5BD4     		bmi	.L317
 4541              	.L302:
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(   (errorflags != RESET)
 4542              		.loc 1 1676 0 is_stmt 1
 4543 0018 8D68     		ldr	r5, [r1, #8]
 4544              	.LVL378:
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
 4545              		.loc 1 1677 0
 4546 001a 002A     		cmp	r2, #0
 4547 001c 6ED0     		beq	.L304
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
 4548              		.loc 1 1678 0
 4549 001e 0122     		movs	r2, #1
 4550              	.LVL379:
 4551 0020 2A40     		ands	r2, r5
 4552 0022 03D1     		bne	.L305
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4553              		.loc 1 1679 0
 4554 0024 9025     		movs	r5, #144
 4555              	.LVL380:
 4556 0026 6D00     		lsls	r5, r5, #1
 4557 0028 2842     		tst	r0, r5
 4558 002a 67D0     		beq	.L304
 4559              	.L305:
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4560              		.loc 1 1682 0
 4561 002c DD07     		lsls	r5, r3, #31
 4562 002e 06D5     		bpl	.L306
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4563              		.loc 1 1682 0 is_stmt 0 discriminator 1
 4564 0030 C505     		lsls	r5, r0, #23
 4565 0032 04D5     		bpl	.L306
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4566              		.loc 1 1684 0 is_stmt 1
 4567 0034 0125     		movs	r5, #1
 4568 0036 0D62     		str	r5, [r1, #32]
1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4569              		.loc 1 1686 0
 4570 0038 E16E     		ldr	r1, [r4, #108]
 4571 003a 2943     		orrs	r1, r5
 4572 003c E166     		str	r1, [r4, #108]
 4573              	.L306:
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4574              		.loc 1 1690 0
 4575 003e 9907     		lsls	r1, r3, #30
 4576 0040 08D5     		bpl	.L307
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4577              		.loc 1 1690 0 is_stmt 0 discriminator 1
 4578 0042 002A     		cmp	r2, #0
ARM GAS  /tmp/cc5Zd4W1.s 			page 139


 4579 0044 06D0     		beq	.L307
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4580              		.loc 1 1692 0 is_stmt 1
 4581 0046 2168     		ldr	r1, [r4]
 4582 0048 0225     		movs	r5, #2
 4583 004a 0D62     		str	r5, [r1, #32]
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4584              		.loc 1 1694 0
 4585 004c E16E     		ldr	r1, [r4, #108]
 4586 004e 0235     		adds	r5, r5, #2
 4587 0050 2943     		orrs	r1, r5
 4588 0052 E166     		str	r1, [r4, #108]
 4589              	.L307:
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4590              		.loc 1 1698 0
 4591 0054 5907     		lsls	r1, r3, #29
 4592 0056 08D5     		bpl	.L308
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4593              		.loc 1 1698 0 is_stmt 0 discriminator 1
 4594 0058 002A     		cmp	r2, #0
 4595 005a 06D0     		beq	.L308
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4596              		.loc 1 1700 0 is_stmt 1
 4597 005c 2168     		ldr	r1, [r4]
 4598 005e 0425     		movs	r5, #4
 4599 0060 0D62     		str	r5, [r1, #32]
1702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4600              		.loc 1 1702 0
 4601 0062 E16E     		ldr	r1, [r4, #108]
 4602 0064 023D     		subs	r5, r5, #2
 4603 0066 2943     		orrs	r1, r5
 4604 0068 E166     		str	r1, [r4, #108]
 4605              	.L308:
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 4606              		.loc 1 1706 0
 4607 006a 1907     		lsls	r1, r3, #28
 4608 006c 09D5     		bpl	.L309
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 4609              		.loc 1 1706 0 is_stmt 0 discriminator 1
 4610 006e 8106     		lsls	r1, r0, #26
 4611 0070 01D4     		bmi	.L310
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4612              		.loc 1 1707 0 is_stmt 1
 4613 0072 002A     		cmp	r2, #0
 4614 0074 05D0     		beq	.L309
 4615              	.L310:
1709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4616              		.loc 1 1709 0
 4617 0076 2268     		ldr	r2, [r4]
 4618 0078 0821     		movs	r1, #8
 4619 007a 1162     		str	r1, [r2, #32]
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4620              		.loc 1 1711 0
 4621 007c E26E     		ldr	r2, [r4, #108]
 4622 007e 0A43     		orrs	r2, r1
 4623 0080 E266     		str	r2, [r4, #108]
 4624              	.L309:
ARM GAS  /tmp/cc5Zd4W1.s 			page 140


1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4625              		.loc 1 1715 0
 4626 0082 E26E     		ldr	r2, [r4, #108]
 4627 0084 002A     		cmp	r2, #0
 4628 0086 41D0     		beq	.L301
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4629              		.loc 1 1718 0
 4630 0088 9B06     		lsls	r3, r3, #26
 4631 008a 01D5     		bpl	.L311
 4632              	.LVL381:
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4633              		.loc 1 1718 0 is_stmt 0 discriminator 1
 4634 008c 8306     		lsls	r3, r0, #26
 4635 008e 23D4     		bmi	.L318
 4636              	.LVL382:
 4637              	.L311:
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 4638              		.loc 1 1725 0 is_stmt 1
 4639 0090 E36E     		ldr	r3, [r4, #108]
 4640 0092 1B07     		lsls	r3, r3, #28
 4641 0094 03D4     		bmi	.L312
1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {  
 4642              		.loc 1 1726 0 discriminator 1
 4643 0096 2368     		ldr	r3, [r4]
 4644 0098 9B68     		ldr	r3, [r3, #8]
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 4645              		.loc 1 1725 0 discriminator 1
 4646 009a 5B06     		lsls	r3, r3, #25
 4647 009c 28D5     		bpl	.L313
 4648              	.L312:
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4649              		.loc 1 1731 0
 4650 009e 2000     		movs	r0, r4
 4651 00a0 FFF7FEFF 		bl	UART_EndRxTransfer
 4652              	.LVL383:
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 4653              		.loc 1 1734 0
 4654 00a4 2368     		ldr	r3, [r4]
 4655 00a6 9A68     		ldr	r2, [r3, #8]
 4656 00a8 5206     		lsls	r2, r2, #25
 4657 00aa 1DD5     		bpl	.L314
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4658              		.loc 1 1736 0
 4659 00ac 9A68     		ldr	r2, [r3, #8]
 4660 00ae 4021     		movs	r1, #64
 4661 00b0 8A43     		bics	r2, r1
 4662 00b2 9A60     		str	r2, [r3, #8]
1739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
 4663              		.loc 1 1739 0
 4664 00b4 636E     		ldr	r3, [r4, #100]
 4665 00b6 002B     		cmp	r3, #0
 4666 00b8 12D0     		beq	.L315
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4667              		.loc 1 1743 0
 4668 00ba 194A     		ldr	r2, .L321
 4669 00bc 5A63     		str	r2, [r3, #52]
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             {
ARM GAS  /tmp/cc5Zd4W1.s 			page 141


 4670              		.loc 1 1746 0
 4671 00be 606E     		ldr	r0, [r4, #100]
 4672 00c0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4673              	.LVL384:
 4674 00c4 0028     		cmp	r0, #0
 4675 00c6 21D0     		beq	.L301
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             }
 4676              		.loc 1 1749 0
 4677 00c8 606E     		ldr	r0, [r4, #100]
 4678 00ca 436B     		ldr	r3, [r0, #52]
 4679 00cc 9847     		blx	r3
 4680              	.LVL385:
 4681 00ce 1DE0     		b	.L301
 4682              	.LVL386:
 4683              	.L317:
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
 4684              		.loc 1 1670 0
 4685 00d0 2000     		movs	r0, r4
 4686              	.LVL387:
 4687 00d2 FFF7FEFF 		bl	UART_Receive_IT
 4688              	.LVL388:
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4689              		.loc 1 1671 0
 4690 00d6 19E0     		b	.L301
 4691              	.LVL389:
 4692              	.L318:
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4693              		.loc 1 1720 0
 4694 00d8 2000     		movs	r0, r4
 4695              	.LVL390:
 4696 00da FFF7FEFF 		bl	UART_Receive_IT
 4697              	.LVL391:
 4698 00de D7E7     		b	.L311
 4699              	.L315:
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
 4700              		.loc 1 1755 0
 4701 00e0 2000     		movs	r0, r4
 4702 00e2 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4703              	.LVL392:
 4704 00e6 11E0     		b	.L301
 4705              	.L314:
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
 4706              		.loc 1 1761 0
 4707 00e8 2000     		movs	r0, r4
 4708 00ea FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4709              	.LVL393:
 4710 00ee 0DE0     		b	.L301
 4711              	.L313:
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 4712              		.loc 1 1768 0
 4713 00f0 2000     		movs	r0, r4
 4714 00f2 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4715              	.LVL394:
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4716              		.loc 1 1769 0
 4717 00f6 0023     		movs	r3, #0
 4718 00f8 E366     		str	r3, [r4, #108]
ARM GAS  /tmp/cc5Zd4W1.s 			page 142


 4719 00fa 07E0     		b	.L301
 4720              	.LVL395:
 4721              	.L304:
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4722              		.loc 1 1790 0
 4723 00fc 1A06     		lsls	r2, r3, #24
 4724 00fe 01D5     		bpl	.L316
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4725              		.loc 1 1790 0 is_stmt 0 discriminator 1
 4726 0100 0206     		lsls	r2, r0, #24
 4727 0102 04D4     		bmi	.L319
 4728              	.L316:
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4729              		.loc 1 1797 0 is_stmt 1
 4730 0104 5B06     		lsls	r3, r3, #25
 4731 0106 01D5     		bpl	.L301
 4732              	.LVL396:
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4733              		.loc 1 1797 0 is_stmt 0 discriminator 1
 4734 0108 4306     		lsls	r3, r0, #25
 4735 010a 04D4     		bmi	.L320
 4736              	.LVL397:
 4737              	.L301:
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4738              		.loc 1 1803 0 is_stmt 1
 4739              		@ sp needed
 4740              	.LVL398:
 4741 010c 70BD     		pop	{r4, r5, r6, pc}
 4742              	.LVL399:
 4743              	.L319:
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 4744              		.loc 1 1792 0
 4745 010e 2000     		movs	r0, r4
 4746              	.LVL400:
 4747 0110 FFF7FEFF 		bl	UART_Transmit_IT
 4748              	.LVL401:
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4749              		.loc 1 1793 0
 4750 0114 FAE7     		b	.L301
 4751              	.LVL402:
 4752              	.L320:
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 4753              		.loc 1 1799 0
 4754 0116 2000     		movs	r0, r4
 4755              	.LVL403:
 4756 0118 FFF7FEFF 		bl	UART_EndTransmit_IT
 4757              	.LVL404:
1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4758              		.loc 1 1800 0
 4759 011c F6E7     		b	.L301
 4760              	.L322:
 4761 011e C046     		.align	2
 4762              	.L321:
 4763 0120 00000000 		.word	UART_DMAAbortOnError
 4764              		.cfi_endproc
 4765              	.LFE58:
 4767              		.text
ARM GAS  /tmp/cc5Zd4W1.s 			page 143


 4768              	.Letext0:
 4769              		.file 2 "/home/xiao/Tool/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_
 4770              		.file 3 "/home/xiao/Tool/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 4771              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 4772              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x6.h"
 4773              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 4774              		.file 7 "/home/xiao/Tool/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 4775              		.file 8 "/home/xiao/Tool/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 4776              		.file 9 "/home/xiao/Tool/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/std
 4777              		.file 10 "/home/xiao/Tool/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 4778              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 4779              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 4780              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 4781              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 4782              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
ARM GAS  /tmp/cc5Zd4W1.s 			page 144


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_uart.c
     /tmp/cc5Zd4W1.s:16     .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/cc5Zd4W1.s:22     .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/cc5Zd4W1.s:48     .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/cc5Zd4W1.s:54     .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/cc5Zd4W1.s:85     .text.UART_EndRxTransfer:0000000000000020 $d
     /tmp/cc5Zd4W1.s:90     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cc5Zd4W1.s:97     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cc5Zd4W1.s:112    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cc5Zd4W1.s:119    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cc5Zd4W1.s:134    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/cc5Zd4W1.s:141    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/cc5Zd4W1.s:208    .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/cc5Zd4W1.s:215    .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/cc5Zd4W1.s:323    .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/cc5Zd4W1.s:330    .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/cc5Zd4W1.s:495    .text.HAL_UART_Receive_IT:00000000000000b0 $d
     /tmp/cc5Zd4W1.s:500    .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/cc5Zd4W1.s:507    .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/cc5Zd4W1.s:642    .text.HAL_UART_Transmit_DMA:000000000000009c $d
     /tmp/cc5Zd4W1.s:1374   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/cc5Zd4W1.s:1457   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/cc5Zd4W1.s:1655   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/cc5Zd4W1.s:649    .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/cc5Zd4W1.s:656    .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/cc5Zd4W1.s:797    .text.HAL_UART_Receive_DMA:00000000000000a4 $d
     /tmp/cc5Zd4W1.s:1510   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/cc5Zd4W1.s:1602   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/cc5Zd4W1.s:804    .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/cc5Zd4W1.s:811    .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/cc5Zd4W1.s:899    .text.HAL_UART_DMAPause:0000000000000068 $d
     /tmp/cc5Zd4W1.s:904    .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/cc5Zd4W1.s:911    .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/cc5Zd4W1.s:994    .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/cc5Zd4W1.s:1001   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/cc5Zd4W1.s:1088   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/cc5Zd4W1.s:1095   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/cc5Zd4W1.s:1194   .text.HAL_UART_Abort:000000000000007c $d
     /tmp/cc5Zd4W1.s:1199   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/cc5Zd4W1.s:1206   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/cc5Zd4W1.s:1265   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/cc5Zd4W1.s:1272   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/cc5Zd4W1.s:1341   .text.HAL_UART_AbortReceive:0000000000000050 $d
     /tmp/cc5Zd4W1.s:1346   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/cc5Zd4W1.s:1353   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/cc5Zd4W1.s:1368   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/cc5Zd4W1.s:1429   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/cc5Zd4W1.s:1436   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/cc5Zd4W1.s:1451   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/cc5Zd4W1.s:1482   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cc5Zd4W1.s:1489   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/cc5Zd4W1.s:1504   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/cc5Zd4W1.s:1569   .text.UART_DMAReceiveCplt:0000000000000040 $d
     /tmp/cc5Zd4W1.s:1574   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/cc5Zd4W1.s:1581   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/cc5Zd4W1.s:1596   .text.UART_DMARxHalfCplt:0000000000000000 $t
ARM GAS  /tmp/cc5Zd4W1.s 			page 145


     /tmp/cc5Zd4W1.s:1627   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/cc5Zd4W1.s:1634   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/cc5Zd4W1.s:1649   .text.UART_DMAError:0000000000000000 $t
     /tmp/cc5Zd4W1.s:1732   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/cc5Zd4W1.s:1738   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/cc5Zd4W1.s:1770   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/cc5Zd4W1.s:1777   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/cc5Zd4W1.s:1792   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/cc5Zd4W1.s:1799   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/cc5Zd4W1.s:1969   .text.HAL_UART_Abort_IT:00000000000000cc $d
     /tmp/cc5Zd4W1.s:2050   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/cc5Zd4W1.s:1982   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/cc5Zd4W1.s:1976   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/cc5Zd4W1.s:2044   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/cc5Zd4W1.s:2112   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/cc5Zd4W1.s:2119   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/cc5Zd4W1.s:2134   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/cc5Zd4W1.s:2141   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/cc5Zd4W1.s:2226   .text.HAL_UART_AbortTransmit_IT:0000000000000060 $d
     /tmp/cc5Zd4W1.s:2237   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/cc5Zd4W1.s:2231   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/cc5Zd4W1.s:2270   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/cc5Zd4W1.s:2277   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/cc5Zd4W1.s:2292   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/cc5Zd4W1.s:2299   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/cc5Zd4W1.s:2398   .text.HAL_UART_AbortReceive_IT:0000000000000078 $d
     /tmp/cc5Zd4W1.s:2410   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/cc5Zd4W1.s:2404   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/cc5Zd4W1.s:2447   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/cc5Zd4W1.s:2454   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/cc5Zd4W1.s:2475   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/cc5Zd4W1.s:2482   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/cc5Zd4W1.s:2543   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/cc5Zd4W1.s:2550   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/cc5Zd4W1.s:2611   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/cc5Zd4W1.s:2618   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/cc5Zd4W1.s:2644   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/cc5Zd4W1.s:2651   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/cc5Zd4W1.s:2670   .text.UART_SetConfig:0000000000000000 $t
     /tmp/cc5Zd4W1.s:2677   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/cc5Zd4W1.s:2988   .text.UART_SetConfig:0000000000000188 $d
     /tmp/cc5Zd4W1.s:2998   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/cc5Zd4W1.s:3005   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/cc5Zd4W1.s:3139   .text.UART_AdvFeatureConfig:00000000000000bc $d
     /tmp/cc5Zd4W1.s:3152   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/cc5Zd4W1.s:3159   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/cc5Zd4W1.s:3189   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/cc5Zd4W1.s:3196   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/cc5Zd4W1.s:3291   .text.HAL_UART_Init:000000000000006c $d
     /tmp/cc5Zd4W1.s:3296   .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/cc5Zd4W1.s:3303   .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/cc5Zd4W1.s:3398   .text.HAL_HalfDuplex_Init:000000000000006c $d
     /tmp/cc5Zd4W1.s:3403   .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/cc5Zd4W1.s:3410   .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/cc5Zd4W1.s:3535   .text.HAL_MultiProcessor_Init:0000000000000098 $d
     /tmp/cc5Zd4W1.s:3540   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/cc5Zd4W1.s:3547   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
ARM GAS  /tmp/cc5Zd4W1.s 			page 146


     /tmp/cc5Zd4W1.s:3599   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/cc5Zd4W1.s:3606   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/cc5Zd4W1.s:3656   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000030 $d
     /tmp/cc5Zd4W1.s:3661   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/cc5Zd4W1.s:3668   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/cc5Zd4W1.s:3760   .text.UART_WaitOnFlagUntilTimeout:0000000000000068 $d
     /tmp/cc5Zd4W1.s:3765   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/cc5Zd4W1.s:3772   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/cc5Zd4W1.s:3974   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/cc5Zd4W1.s:3981   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/cc5Zd4W1.s:4222   .text.HAL_UART_Receive:0000000000000114 $d
     /tmp/cc5Zd4W1.s:4227   .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/cc5Zd4W1.s:4234   .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/cc5Zd4W1.s:4328   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/cc5Zd4W1.s:4335   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/cc5Zd4W1.s:4368   .text.UART_Receive_IT:0000000000000000 $t
     /tmp/cc5Zd4W1.s:4375   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/cc5Zd4W1.s:4495   .text.UART_Receive_IT:0000000000000084 $d
     /tmp/cc5Zd4W1.s:4500   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/cc5Zd4W1.s:4507   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/cc5Zd4W1.s:4763   .text.HAL_UART_IRQHandler:0000000000000120 $d

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
__aeabi_uidiv
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_GetTick

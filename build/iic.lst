ARM GAS  /tmp/cckuLtdp.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"iic.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.I2C_Start,"ax",%progbits
  16              		.align	1
  17              		.global	I2C_Start
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	I2C_Start:
  24              	.LFB38:
  25              		.file 1 "Dsp/iic.c"
   1:Dsp/iic.c     **** #include "iic.h"
   2:Dsp/iic.c     **** 
   3:Dsp/iic.c     **** /**
   4:Dsp/iic.c     ****   * 函数功能: I2C总线位延迟，最快400KHz
   5:Dsp/iic.c     ****   * 输入参数: 无
   6:Dsp/iic.c     ****   * 返 回 值: 无
   7:Dsp/iic.c     ****   * 说    明：无
   8:Dsp/iic.c     ****   */
   9:Dsp/iic.c     **** static void I2C_Delay(void)
  10:Dsp/iic.c     **** {
  11:Dsp/iic.c     **** 	uint8_t i;
  12:Dsp/iic.c     **** 
  13:Dsp/iic.c     **** 	/*　
  14:Dsp/iic.c     **** 	 	下面的时间是通过逻辑分析仪测试得到的。
  15:Dsp/iic.c     **** 		CPU主频72MHz时，在内部Flash运行, MDK工程不优化
  16:Dsp/iic.c     **** 		循环次数为10时，SCL频率 = 205KHz 
  17:Dsp/iic.c     **** 		循环次数为7时，SCL频率 = 347KHz， SCL高电平时间1.5us，SCL低电平时间2.87us 
  18:Dsp/iic.c     **** 	 	循环次数为5时，SCL频率 = 421KHz， SCL高电平时间1.25us，SCL低电平时间2.375us
  19:Dsp/iic.c     ****         
  20:Dsp/iic.c     ****     IAR工程编译效率高，不能设置为7
  21:Dsp/iic.c     **** 	*/
  22:Dsp/iic.c     **** 	for (i = 0; i < 7; i++);
  23:Dsp/iic.c     **** }
  24:Dsp/iic.c     **** 
  25:Dsp/iic.c     **** /**
  26:Dsp/iic.c     ****   * 函数功能: CPU发起I2C总线启动信号
  27:Dsp/iic.c     ****   * 输入参数: 无
  28:Dsp/iic.c     ****   * 返 回 值: 无
  29:Dsp/iic.c     ****   * 说    明：无
  30:Dsp/iic.c     ****   */
  31:Dsp/iic.c     **** void I2C_Start(void)
  32:Dsp/iic.c     **** {
  26              		.loc 1 32 0
ARM GAS  /tmp/cckuLtdp.s 			page 2


  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  33:Dsp/iic.c     **** 	/* 当SCL高电平时，SDA出现一个下跳沿表示I2C总线启动信号 */
  34:Dsp/iic.c     **** 	I2C_SDA_HIGH();
  35              		.loc 1 34 0
  36 0002 0B4C     		ldr	r4, .L2
  37 0004 0122     		movs	r2, #1
  38 0006 4021     		movs	r1, #64
  39 0008 2000     		movs	r0, r4
  40 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
  41              	.LVL0:
  35:Dsp/iic.c     **** 	I2C_SCL_HIGH();
  42              		.loc 1 35 0
  43 000e 0122     		movs	r2, #1
  44 0010 8021     		movs	r1, #128
  45 0012 2000     		movs	r0, r4
  46 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
  47              	.LVL1:
  36:Dsp/iic.c     **** 	I2C_Delay();
  37:Dsp/iic.c     **** 	I2C_SDA_LOW();
  48              		.loc 1 37 0
  49 0018 0022     		movs	r2, #0
  50 001a 4021     		movs	r1, #64
  51 001c 2000     		movs	r0, r4
  52 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
  53              	.LVL2:
  38:Dsp/iic.c     **** 	I2C_Delay();
  39:Dsp/iic.c     **** 	I2C_SCL_LOW();
  54              		.loc 1 39 0
  55 0022 0022     		movs	r2, #0
  56 0024 8021     		movs	r1, #128
  57 0026 2000     		movs	r0, r4
  58 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
  59              	.LVL3:
  40:Dsp/iic.c     **** 	I2C_Delay();
  41:Dsp/iic.c     **** }
  60              		.loc 1 41 0
  61              		@ sp needed
  62 002c 10BD     		pop	{r4, pc}
  63              	.L3:
  64 002e C046     		.align	2
  65              	.L2:
  66 0030 00040048 		.word	1207960576
  67              		.cfi_endproc
  68              	.LFE38:
  70              		.section	.text.I2C_Stop,"ax",%progbits
  71              		.align	1
  72              		.global	I2C_Stop
  73              		.syntax unified
  74              		.code	16
  75              		.thumb_func
ARM GAS  /tmp/cckuLtdp.s 			page 3


  76              		.fpu softvfp
  78              	I2C_Stop:
  79              	.LFB39:
  42:Dsp/iic.c     **** 
  43:Dsp/iic.c     **** /**
  44:Dsp/iic.c     ****   * 函数功能: CPU发起I2C总线停止信号
  45:Dsp/iic.c     ****   * 输入参数: 无
  46:Dsp/iic.c     ****   * 返 回 值: 无
  47:Dsp/iic.c     ****   * 说    明：无
  48:Dsp/iic.c     ****   */
  49:Dsp/iic.c     **** void I2C_Stop(void)
  50:Dsp/iic.c     **** {
  80              		.loc 1 50 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84 0000 10B5     		push	{r4, lr}
  85              	.LCFI1:
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 4, -8
  88              		.cfi_offset 14, -4
  51:Dsp/iic.c     **** 	/* 当SCL高电平时，SDA出现一个上跳沿表示I2C总线停止信号 */
  52:Dsp/iic.c     **** 	I2C_SDA_LOW();
  89              		.loc 1 52 0
  90 0002 084C     		ldr	r4, .L5
  91 0004 0022     		movs	r2, #0
  92 0006 4021     		movs	r1, #64
  93 0008 2000     		movs	r0, r4
  94 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
  95              	.LVL4:
  53:Dsp/iic.c     **** 	I2C_SCL_HIGH();
  96              		.loc 1 53 0
  97 000e 0122     		movs	r2, #1
  98 0010 8021     		movs	r1, #128
  99 0012 2000     		movs	r0, r4
 100 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 101              	.LVL5:
  54:Dsp/iic.c     **** 	I2C_Delay();
  55:Dsp/iic.c     **** 	I2C_SDA_HIGH();
 102              		.loc 1 55 0
 103 0018 0122     		movs	r2, #1
 104 001a 4021     		movs	r1, #64
 105 001c 2000     		movs	r0, r4
 106 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 107              	.LVL6:
  56:Dsp/iic.c     **** }
 108              		.loc 1 56 0
 109              		@ sp needed
 110 0022 10BD     		pop	{r4, pc}
 111              	.L6:
 112              		.align	2
 113              	.L5:
 114 0024 00040048 		.word	1207960576
 115              		.cfi_endproc
 116              	.LFE39:
 118              		.section	.text.I2C_InitGPIO,"ax",%progbits
 119              		.align	1
ARM GAS  /tmp/cckuLtdp.s 			page 4


 120              		.syntax unified
 121              		.code	16
 122              		.thumb_func
 123              		.fpu softvfp
 125              	I2C_InitGPIO:
 126              	.LFB45:
  57:Dsp/iic.c     **** 
  58:Dsp/iic.c     **** /**
  59:Dsp/iic.c     ****   * 函数功能: CPU向I2C总线设备发送8bit数据
  60:Dsp/iic.c     ****   * 输入参数: Byte ： 等待发送的字节
  61:Dsp/iic.c     ****   * 返 回 值: 无
  62:Dsp/iic.c     ****   * 说    明：无
  63:Dsp/iic.c     ****   */
  64:Dsp/iic.c     **** void I2C_SendByte(uint8_t Byte)
  65:Dsp/iic.c     **** {
  66:Dsp/iic.c     **** 	uint8_t i;
  67:Dsp/iic.c     **** 
  68:Dsp/iic.c     **** 	/* 先发送字节的高位bit7 */
  69:Dsp/iic.c     **** 	for (i = 0; i < 8; i++)
  70:Dsp/iic.c     **** 	{		
  71:Dsp/iic.c     **** 		if (Byte & 0x80)
  72:Dsp/iic.c     **** 		{
  73:Dsp/iic.c     **** 			I2C_SDA_HIGH();
  74:Dsp/iic.c     **** 		}
  75:Dsp/iic.c     **** 		else
  76:Dsp/iic.c     **** 		{
  77:Dsp/iic.c     **** 			I2C_SDA_LOW();
  78:Dsp/iic.c     **** 		}
  79:Dsp/iic.c     **** 		I2C_Delay();
  80:Dsp/iic.c     **** 		I2C_SCL_HIGH();
  81:Dsp/iic.c     **** 		I2C_Delay();	
  82:Dsp/iic.c     **** 		I2C_SCL_LOW();
  83:Dsp/iic.c     **** 		if (i == 7)
  84:Dsp/iic.c     **** 		{
  85:Dsp/iic.c     **** 			I2C_SDA_HIGH(); // 释放总线
  86:Dsp/iic.c     **** 		}
  87:Dsp/iic.c     **** 		Byte <<= 1;	/* 左移一个bit */
  88:Dsp/iic.c     **** 		I2C_Delay();
  89:Dsp/iic.c     **** 	}
  90:Dsp/iic.c     **** }
  91:Dsp/iic.c     **** 
  92:Dsp/iic.c     **** /**
  93:Dsp/iic.c     ****   * 函数功能: CPU产生一个时钟，并读取器件的ACK应答信号
  94:Dsp/iic.c     ****   * 输入参数: 无
  95:Dsp/iic.c     ****   * 返 回 值: 返回0表示正确应答，1表示无器件响应
  96:Dsp/iic.c     ****   * 说    明：无
  97:Dsp/iic.c     ****   */
  98:Dsp/iic.c     **** uint8_t I2C_WaitAck(void)
  99:Dsp/iic.c     **** {
 100:Dsp/iic.c     **** 	uint8_t re;
 101:Dsp/iic.c     **** 
 102:Dsp/iic.c     **** 	I2C_SDA_HIGH();	/* CPU释放SDA总线 */
 103:Dsp/iic.c     **** 	I2C_Delay();
 104:Dsp/iic.c     **** 	I2C_SCL_HIGH();	/* CPU驱动SCL = 1, 此时器件会返回ACK应答 */
 105:Dsp/iic.c     **** 	I2C_Delay();
 106:Dsp/iic.c     **** 	if (I2C_SDA_READ())	/* CPU读取SDA口线状态 */
 107:Dsp/iic.c     **** 	{
ARM GAS  /tmp/cckuLtdp.s 			page 5


 108:Dsp/iic.c     **** 		re = 1;
 109:Dsp/iic.c     **** 	}
 110:Dsp/iic.c     **** 	else
 111:Dsp/iic.c     **** 	{
 112:Dsp/iic.c     **** 		re = 0;
 113:Dsp/iic.c     **** 	}
 114:Dsp/iic.c     **** 	I2C_SCL_LOW();
 115:Dsp/iic.c     **** 	I2C_Delay();
 116:Dsp/iic.c     **** 	
 117:Dsp/iic.c     **** 	return re;
 118:Dsp/iic.c     **** }
 119:Dsp/iic.c     **** 
 120:Dsp/iic.c     **** /**
 121:Dsp/iic.c     ****   * 函数功能: CPU产生一个ACK信号
 122:Dsp/iic.c     ****   * 输入参数: 无
 123:Dsp/iic.c     ****   * 返 回 值: 无
 124:Dsp/iic.c     ****   * 说    明：无
 125:Dsp/iic.c     ****   */
 126:Dsp/iic.c     **** void I2C_Ack(void)
 127:Dsp/iic.c     **** {
 128:Dsp/iic.c     **** 	I2C_SDA_LOW();	/* CPU驱动SDA = 0 */
 129:Dsp/iic.c     **** 	I2C_Delay();
 130:Dsp/iic.c     **** 	I2C_SCL_HIGH();	/* CPU产生1个时钟 */
 131:Dsp/iic.c     **** 	I2C_Delay();
 132:Dsp/iic.c     **** 	I2C_SCL_LOW();
 133:Dsp/iic.c     **** 	I2C_Delay();
 134:Dsp/iic.c     **** 	I2C_SDA_HIGH();	/* CPU释放SDA总线 */
 135:Dsp/iic.c     **** }
 136:Dsp/iic.c     **** 
 137:Dsp/iic.c     **** /**
 138:Dsp/iic.c     ****   * 函数功能: CPU产生1个NACK信号
 139:Dsp/iic.c     ****   * 输入参数: 无
 140:Dsp/iic.c     ****   * 返 回 值: 无
 141:Dsp/iic.c     ****   * 说    明：无
 142:Dsp/iic.c     ****   */
 143:Dsp/iic.c     **** void I2C_NAck(void)
 144:Dsp/iic.c     **** {
 145:Dsp/iic.c     **** 	I2C_SDA_HIGH();	/* CPU驱动SDA = 1 */
 146:Dsp/iic.c     **** 	I2C_Delay();
 147:Dsp/iic.c     **** 	I2C_SCL_HIGH();	/* CPU产生1个时钟 */
 148:Dsp/iic.c     **** 	I2C_Delay();
 149:Dsp/iic.c     **** 	I2C_SCL_LOW();
 150:Dsp/iic.c     **** 	I2C_Delay();	
 151:Dsp/iic.c     **** }
 152:Dsp/iic.c     **** 
 153:Dsp/iic.c     **** /**
 154:Dsp/iic.c     ****   * 函数功能: CPU从I2C总线设备读取8bit数据
 155:Dsp/iic.c     ****   * 输入参数: 无
 156:Dsp/iic.c     ****   * 返 回 值: 读到的数据
 157:Dsp/iic.c     ****   * 说    明：无
 158:Dsp/iic.c     ****   */
 159:Dsp/iic.c     **** 
 160:Dsp/iic.c     **** uint8_t I2C_ReadByte(uint8_t ack)
 161:Dsp/iic.c     **** {
 162:Dsp/iic.c     **** 	uint8_t i;
 163:Dsp/iic.c     **** 	uint8_t value;
 164:Dsp/iic.c     **** 
ARM GAS  /tmp/cckuLtdp.s 			page 6


 165:Dsp/iic.c     **** 	/* 读到第1个bit为数据的bit7 */
 166:Dsp/iic.c     **** 	value = 0;
 167:Dsp/iic.c     **** 	for (i = 0; i < 8; i++)
 168:Dsp/iic.c     **** 	{
 169:Dsp/iic.c     **** 		value <<= 1;
 170:Dsp/iic.c     **** 		I2C_SCL_HIGH();
 171:Dsp/iic.c     **** 		I2C_Delay();
 172:Dsp/iic.c     **** 		if (I2C_SDA_READ())
 173:Dsp/iic.c     **** 		{
 174:Dsp/iic.c     **** 			value++;
 175:Dsp/iic.c     **** 		}
 176:Dsp/iic.c     **** 		I2C_SCL_LOW();
 177:Dsp/iic.c     **** 		I2C_Delay();
 178:Dsp/iic.c     **** 	}
 179:Dsp/iic.c     **** 	if (!ack)
 180:Dsp/iic.c     **** 	{
 181:Dsp/iic.c     **** 		I2C_NAck();
 182:Dsp/iic.c     **** 	}
 183:Dsp/iic.c     **** 	else
 184:Dsp/iic.c     **** 	{
 185:Dsp/iic.c     **** 		I2C_Ack();
 186:Dsp/iic.c     **** 	}
 187:Dsp/iic.c     **** 
 188:Dsp/iic.c     **** 	return value;
 189:Dsp/iic.c     **** }
 190:Dsp/iic.c     **** 
 191:Dsp/iic.c     **** /**
 192:Dsp/iic.c     ****   * 函数功能: 配置I2C总线的GPIO，采用模拟IO的方式实现
 193:Dsp/iic.c     ****   * 输入参数: 无
 194:Dsp/iic.c     ****   * 返 回 值: 无
 195:Dsp/iic.c     ****   * 说    明：无
 196:Dsp/iic.c     ****   */
 197:Dsp/iic.c     **** static void I2C_InitGPIO(void)
 198:Dsp/iic.c     **** {
 127              		.loc 1 198 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 24
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131 0000 00B5     		push	{lr}
 132              	.LCFI2:
 133              		.cfi_def_cfa_offset 4
 134              		.cfi_offset 14, -4
 135 0002 87B0     		sub	sp, sp, #28
 136              	.LCFI3:
 137              		.cfi_def_cfa_offset 32
 138              	.LBB2:
 199:Dsp/iic.c     **** 	GPIO_InitTypeDef GPIO_InitStruct;
 200:Dsp/iic.c     ****   
 201:Dsp/iic.c     ****   /* 打开GPIO时钟 */
 202:Dsp/iic.c     **** 	I2C_GPIO_CLK_ENABLE();
 139              		.loc 1 202 0
 140 0004 0B4A     		ldr	r2, .L8
 141 0006 5169     		ldr	r1, [r2, #20]
 142 0008 8020     		movs	r0, #128
 143 000a C002     		lsls	r0, r0, #11
 144 000c 0143     		orrs	r1, r0
 145 000e 5161     		str	r1, [r2, #20]
ARM GAS  /tmp/cckuLtdp.s 			page 7


 146 0010 5369     		ldr	r3, [r2, #20]
 147 0012 0340     		ands	r3, r0
 148 0014 0093     		str	r3, [sp]
 149 0016 009B     		ldr	r3, [sp]
 150              	.LBE2:
 203:Dsp/iic.c     **** 
 204:Dsp/iic.c     ****   	GPIO_InitStruct.Pin = I2C_SCL_PIN|I2C_SDA_PIN;
 151              		.loc 1 204 0
 152 0018 C023     		movs	r3, #192
 153 001a 0193     		str	r3, [sp, #4]
 205:Dsp/iic.c     ****   	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 154              		.loc 1 205 0
 155 001c AF3B     		subs	r3, r3, #175
 156 001e 0293     		str	r3, [sp, #8]
 206:Dsp/iic.c     ****   	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 157              		.loc 1 206 0
 158 0020 103B     		subs	r3, r3, #16
 159 0022 0493     		str	r3, [sp, #16]
 207:Dsp/iic.c     ****   	HAL_GPIO_Init(I2C_GPIO_PORT, &GPIO_InitStruct);
 160              		.loc 1 207 0
 161 0024 01A9     		add	r1, sp, #4
 162 0026 0448     		ldr	r0, .L8+4
 163 0028 FFF7FEFF 		bl	HAL_GPIO_Init
 164              	.LVL7:
 208:Dsp/iic.c     **** 
 209:Dsp/iic.c     ****   /* 给一个停止信号, 复位I2C总线上的所有设备到待机模式 */
 210:Dsp/iic.c     ****   	I2C_Stop();
 165              		.loc 1 210 0
 166 002c FFF7FEFF 		bl	I2C_Stop
 167              	.LVL8:
 211:Dsp/iic.c     **** }
 168              		.loc 1 211 0
 169 0030 07B0     		add	sp, sp, #28
 170              		@ sp needed
 171 0032 00BD     		pop	{pc}
 172              	.L9:
 173              		.align	2
 174              	.L8:
 175 0034 00100240 		.word	1073876992
 176 0038 00040048 		.word	1207960576
 177              		.cfi_endproc
 178              	.LFE45:
 180              		.section	.text.I2C_SendByte,"ax",%progbits
 181              		.align	1
 182              		.global	I2C_SendByte
 183              		.syntax unified
 184              		.code	16
 185              		.thumb_func
 186              		.fpu softvfp
 188              	I2C_SendByte:
 189              	.LFB40:
  65:Dsp/iic.c     **** 	uint8_t i;
 190              		.loc 1 65 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              	.LVL9:
ARM GAS  /tmp/cckuLtdp.s 			page 8


 195 0000 70B5     		push	{r4, r5, r6, lr}
 196              	.LCFI4:
 197              		.cfi_def_cfa_offset 16
 198              		.cfi_offset 4, -16
 199              		.cfi_offset 5, -12
 200              		.cfi_offset 6, -8
 201              		.cfi_offset 14, -4
 202 0002 0500     		movs	r5, r0
 203              	.LVL10:
  69:Dsp/iic.c     **** 	{		
 204              		.loc 1 69 0
 205 0004 0024     		movs	r4, #0
 206 0006 15E0     		b	.L11
 207              	.LVL11:
 208              	.L18:
  73:Dsp/iic.c     **** 		}
 209              		.loc 1 73 0
 210 0008 0122     		movs	r2, #1
 211 000a 4021     		movs	r1, #64
 212 000c 1248     		ldr	r0, .L19
 213 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 214              	.LVL12:
 215              	.L13:
  80:Dsp/iic.c     **** 		I2C_Delay();	
 216              		.loc 1 80 0
 217 0012 114E     		ldr	r6, .L19
 218 0014 0122     		movs	r2, #1
 219 0016 8021     		movs	r1, #128
 220 0018 3000     		movs	r0, r6
 221 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 222              	.LVL13:
  82:Dsp/iic.c     **** 		if (i == 7)
 223              		.loc 1 82 0
 224 001e 0022     		movs	r2, #0
 225 0020 8021     		movs	r1, #128
 226 0022 3000     		movs	r0, r6
 227 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
 228              	.LVL14:
  83:Dsp/iic.c     **** 		{
 229              		.loc 1 83 0
 230 0028 072C     		cmp	r4, #7
 231 002a 0ED0     		beq	.L16
 232              	.L14:
  87:Dsp/iic.c     **** 		I2C_Delay();
 233              		.loc 1 87 0 discriminator 2
 234 002c 6D00     		lsls	r5, r5, #1
 235              	.LVL15:
 236 002e EDB2     		uxtb	r5, r5
 237              	.LVL16:
  69:Dsp/iic.c     **** 	{		
 238              		.loc 1 69 0 discriminator 2
 239 0030 0134     		adds	r4, r4, #1
 240              	.LVL17:
 241 0032 E4B2     		uxtb	r4, r4
 242              	.LVL18:
 243              	.L11:
  69:Dsp/iic.c     **** 	{		
ARM GAS  /tmp/cckuLtdp.s 			page 9


 244              		.loc 1 69 0 is_stmt 0 discriminator 1
 245 0034 072C     		cmp	r4, #7
 246 0036 0ED8     		bhi	.L17
  71:Dsp/iic.c     **** 		{
 247              		.loc 1 71 0 is_stmt 1
 248 0038 6BB2     		sxtb	r3, r5
 249 003a 002B     		cmp	r3, #0
 250 003c E4DB     		blt	.L18
  77:Dsp/iic.c     **** 		}
 251              		.loc 1 77 0
 252 003e 0022     		movs	r2, #0
 253 0040 4021     		movs	r1, #64
 254 0042 0548     		ldr	r0, .L19
 255 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 256              	.LVL19:
 257 0048 E3E7     		b	.L13
 258              	.L16:
  85:Dsp/iic.c     **** 		}
 259              		.loc 1 85 0
 260 004a 0122     		movs	r2, #1
 261 004c 4021     		movs	r1, #64
 262 004e 3000     		movs	r0, r6
 263 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 264              	.LVL20:
 265 0054 EAE7     		b	.L14
 266              	.L17:
  90:Dsp/iic.c     **** 
 267              		.loc 1 90 0
 268              		@ sp needed
 269              	.LVL21:
 270              	.LVL22:
 271 0056 70BD     		pop	{r4, r5, r6, pc}
 272              	.L20:
 273              		.align	2
 274              	.L19:
 275 0058 00040048 		.word	1207960576
 276              		.cfi_endproc
 277              	.LFE40:
 279              		.section	.text.I2C_WaitAck,"ax",%progbits
 280              		.align	1
 281              		.global	I2C_WaitAck
 282              		.syntax unified
 283              		.code	16
 284              		.thumb_func
 285              		.fpu softvfp
 287              	I2C_WaitAck:
 288              	.LFB41:
  99:Dsp/iic.c     **** 	uint8_t re;
 289              		.loc 1 99 0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293 0000 10B5     		push	{r4, lr}
 294              	.LCFI5:
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 4, -8
 297              		.cfi_offset 14, -4
ARM GAS  /tmp/cckuLtdp.s 			page 10


 102:Dsp/iic.c     **** 	I2C_Delay();
 298              		.loc 1 102 0
 299 0002 0D4C     		ldr	r4, .L25
 300 0004 0122     		movs	r2, #1
 301 0006 4021     		movs	r1, #64
 302 0008 2000     		movs	r0, r4
 303 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 304              	.LVL23:
 104:Dsp/iic.c     **** 	I2C_Delay();
 305              		.loc 1 104 0
 306 000e 0122     		movs	r2, #1
 307 0010 8021     		movs	r1, #128
 308 0012 2000     		movs	r0, r4
 309 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 310              	.LVL24:
 106:Dsp/iic.c     **** 	{
 311              		.loc 1 106 0
 312 0018 4021     		movs	r1, #64
 313 001a 2000     		movs	r0, r4
 314 001c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 315              	.LVL25:
 316 0020 0028     		cmp	r0, #0
 317 0022 07D1     		bne	.L24
 112:Dsp/iic.c     **** 	}
 318              		.loc 1 112 0
 319 0024 0024     		movs	r4, #0
 320              	.L22:
 321              	.LVL26:
 114:Dsp/iic.c     **** 	I2C_Delay();
 322              		.loc 1 114 0
 323 0026 0022     		movs	r2, #0
 324 0028 8021     		movs	r1, #128
 325 002a 0348     		ldr	r0, .L25
 326 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 327              	.LVL27:
 118:Dsp/iic.c     **** 
 328              		.loc 1 118 0
 329 0030 2000     		movs	r0, r4
 330              		@ sp needed
 331              	.LVL28:
 332 0032 10BD     		pop	{r4, pc}
 333              	.L24:
 108:Dsp/iic.c     **** 	}
 334              		.loc 1 108 0
 335 0034 0124     		movs	r4, #1
 336 0036 F6E7     		b	.L22
 337              	.L26:
 338              		.align	2
 339              	.L25:
 340 0038 00040048 		.word	1207960576
 341              		.cfi_endproc
 342              	.LFE41:
 344              		.section	.text.I2C_Ack,"ax",%progbits
 345              		.align	1
 346              		.global	I2C_Ack
 347              		.syntax unified
 348              		.code	16
ARM GAS  /tmp/cckuLtdp.s 			page 11


 349              		.thumb_func
 350              		.fpu softvfp
 352              	I2C_Ack:
 353              	.LFB42:
 127:Dsp/iic.c     **** 	I2C_SDA_LOW();	/* CPU驱动SDA = 0 */
 354              		.loc 1 127 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358 0000 10B5     		push	{r4, lr}
 359              	.LCFI6:
 360              		.cfi_def_cfa_offset 8
 361              		.cfi_offset 4, -8
 362              		.cfi_offset 14, -4
 128:Dsp/iic.c     **** 	I2C_Delay();
 363              		.loc 1 128 0
 364 0002 0B4C     		ldr	r4, .L28
 365 0004 0022     		movs	r2, #0
 366 0006 4021     		movs	r1, #64
 367 0008 2000     		movs	r0, r4
 368 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 369              	.LVL29:
 130:Dsp/iic.c     **** 	I2C_Delay();
 370              		.loc 1 130 0
 371 000e 0122     		movs	r2, #1
 372 0010 8021     		movs	r1, #128
 373 0012 2000     		movs	r0, r4
 374 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 375              	.LVL30:
 132:Dsp/iic.c     **** 	I2C_Delay();
 376              		.loc 1 132 0
 377 0018 0022     		movs	r2, #0
 378 001a 8021     		movs	r1, #128
 379 001c 2000     		movs	r0, r4
 380 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 381              	.LVL31:
 134:Dsp/iic.c     **** }
 382              		.loc 1 134 0
 383 0022 0122     		movs	r2, #1
 384 0024 4021     		movs	r1, #64
 385 0026 2000     		movs	r0, r4
 386 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 387              	.LVL32:
 135:Dsp/iic.c     **** 
 388              		.loc 1 135 0
 389              		@ sp needed
 390 002c 10BD     		pop	{r4, pc}
 391              	.L29:
 392 002e C046     		.align	2
 393              	.L28:
 394 0030 00040048 		.word	1207960576
 395              		.cfi_endproc
 396              	.LFE42:
 398              		.section	.text.I2C_NAck,"ax",%progbits
 399              		.align	1
 400              		.global	I2C_NAck
 401              		.syntax unified
ARM GAS  /tmp/cckuLtdp.s 			page 12


 402              		.code	16
 403              		.thumb_func
 404              		.fpu softvfp
 406              	I2C_NAck:
 407              	.LFB43:
 144:Dsp/iic.c     **** 	I2C_SDA_HIGH();	/* CPU驱动SDA = 1 */
 408              		.loc 1 144 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412 0000 10B5     		push	{r4, lr}
 413              	.LCFI7:
 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 4, -8
 416              		.cfi_offset 14, -4
 145:Dsp/iic.c     **** 	I2C_Delay();
 417              		.loc 1 145 0
 418 0002 084C     		ldr	r4, .L31
 419 0004 0122     		movs	r2, #1
 420 0006 4021     		movs	r1, #64
 421 0008 2000     		movs	r0, r4
 422 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 423              	.LVL33:
 147:Dsp/iic.c     **** 	I2C_Delay();
 424              		.loc 1 147 0
 425 000e 0122     		movs	r2, #1
 426 0010 8021     		movs	r1, #128
 427 0012 2000     		movs	r0, r4
 428 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 429              	.LVL34:
 149:Dsp/iic.c     **** 	I2C_Delay();	
 430              		.loc 1 149 0
 431 0018 0022     		movs	r2, #0
 432 001a 8021     		movs	r1, #128
 433 001c 2000     		movs	r0, r4
 434 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 435              	.LVL35:
 151:Dsp/iic.c     **** 
 436              		.loc 1 151 0
 437              		@ sp needed
 438 0022 10BD     		pop	{r4, pc}
 439              	.L32:
 440              		.align	2
 441              	.L31:
 442 0024 00040048 		.word	1207960576
 443              		.cfi_endproc
 444              	.LFE43:
 446              		.section	.text.I2C_ReadByte,"ax",%progbits
 447              		.align	1
 448              		.global	I2C_ReadByte
 449              		.syntax unified
 450              		.code	16
 451              		.thumb_func
 452              		.fpu softvfp
 454              	I2C_ReadByte:
 455              	.LFB44:
 161:Dsp/iic.c     **** 	uint8_t i;
ARM GAS  /tmp/cckuLtdp.s 			page 13


 456              		.loc 1 161 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460              	.LVL36:
 461 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 462              	.LCFI8:
 463              		.cfi_def_cfa_offset 24
 464              		.cfi_offset 3, -24
 465              		.cfi_offset 4, -20
 466              		.cfi_offset 5, -16
 467              		.cfi_offset 6, -12
 468              		.cfi_offset 7, -8
 469              		.cfi_offset 14, -4
 470 0002 0700     		movs	r7, r0
 471              	.LVL37:
 166:Dsp/iic.c     **** 	for (i = 0; i < 8; i++)
 472              		.loc 1 166 0
 473 0004 0024     		movs	r4, #0
 167:Dsp/iic.c     **** 	{
 474              		.loc 1 167 0
 475 0006 0025     		movs	r5, #0
 476 0008 06E0     		b	.L34
 477              	.LVL38:
 478              	.L35:
 176:Dsp/iic.c     **** 		I2C_Delay();
 479              		.loc 1 176 0 discriminator 2
 480 000a 0022     		movs	r2, #0
 481 000c 8021     		movs	r1, #128
 482 000e 1048     		ldr	r0, .L41
 483 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 484              	.LVL39:
 167:Dsp/iic.c     **** 	{
 485              		.loc 1 167 0 discriminator 2
 486 0014 0135     		adds	r5, r5, #1
 487              	.LVL40:
 488 0016 EDB2     		uxtb	r5, r5
 489              	.LVL41:
 490              	.L34:
 167:Dsp/iic.c     **** 	{
 491              		.loc 1 167 0 is_stmt 0 discriminator 1
 492 0018 072D     		cmp	r5, #7
 493 001a 10D8     		bhi	.L39
 169:Dsp/iic.c     **** 		I2C_SCL_HIGH();
 494              		.loc 1 169 0 is_stmt 1
 495 001c 6400     		lsls	r4, r4, #1
 496              	.LVL42:
 497 001e E4B2     		uxtb	r4, r4
 498              	.LVL43:
 170:Dsp/iic.c     **** 		I2C_Delay();
 499              		.loc 1 170 0
 500 0020 0B4E     		ldr	r6, .L41
 501 0022 0122     		movs	r2, #1
 502 0024 8021     		movs	r1, #128
 503 0026 3000     		movs	r0, r6
 504 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 505              	.LVL44:
ARM GAS  /tmp/cckuLtdp.s 			page 14


 172:Dsp/iic.c     **** 		{
 506              		.loc 1 172 0
 507 002c 4021     		movs	r1, #64
 508 002e 3000     		movs	r0, r6
 509 0030 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 510              	.LVL45:
 511 0034 0028     		cmp	r0, #0
 512 0036 E8D0     		beq	.L35
 174:Dsp/iic.c     **** 		}
 513              		.loc 1 174 0
 514 0038 0134     		adds	r4, r4, #1
 515              	.LVL46:
 516 003a E4B2     		uxtb	r4, r4
 517              	.LVL47:
 518 003c E5E7     		b	.L35
 519              	.L39:
 179:Dsp/iic.c     **** 	{
 520              		.loc 1 179 0
 521 003e 002F     		cmp	r7, #0
 522 0040 03D0     		beq	.L40
 185:Dsp/iic.c     **** 	}
 523              		.loc 1 185 0
 524 0042 FFF7FEFF 		bl	I2C_Ack
 525              	.LVL48:
 526              	.L38:
 189:Dsp/iic.c     **** 
 527              		.loc 1 189 0
 528 0046 2000     		movs	r0, r4
 529              		@ sp needed
 530              	.LVL49:
 531              	.LVL50:
 532 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 533              	.LVL51:
 534              	.L40:
 181:Dsp/iic.c     **** 	}
 535              		.loc 1 181 0
 536 004a FFF7FEFF 		bl	I2C_NAck
 537              	.LVL52:
 538 004e FAE7     		b	.L38
 539              	.L42:
 540              		.align	2
 541              	.L41:
 542 0050 00040048 		.word	1207960576
 543              		.cfi_endproc
 544              	.LFE44:
 546              		.section	.text.I2C_CheckDevice,"ax",%progbits
 547              		.align	1
 548              		.global	I2C_CheckDevice
 549              		.syntax unified
 550              		.code	16
 551              		.thumb_func
 552              		.fpu softvfp
 554              	I2C_CheckDevice:
 555              	.LFB46:
 212:Dsp/iic.c     **** 
 213:Dsp/iic.c     **** /**
 214:Dsp/iic.c     ****   * 函数功能: 检测I2C总线设备，CPU向发送设备地址，然后读取设备应答来判
ARM GAS  /tmp/cckuLtdp.s 			page 15


 215:Dsp/iic.c     ****   * 输入参数: _Address：设备的I2C总线地址
 216:Dsp/iic.c     ****   * 返 回 值: 返回值 0 表示正确， 返回1表示未探测到
 217:Dsp/iic.c     ****   * 说    明：在访问I2C设备前，请先调用 I2C_CheckDevice() 检测I2C设备是否正常
 218:Dsp/iic.c     ****   */
 219:Dsp/iic.c     **** uint8_t I2C_CheckDevice(uint8_t _Address)
 220:Dsp/iic.c     **** {
 556              		.loc 1 220 0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 560              	.LVL53:
 561 0000 10B5     		push	{r4, lr}
 562              	.LCFI9:
 563              		.cfi_def_cfa_offset 8
 564              		.cfi_offset 4, -8
 565              		.cfi_offset 14, -4
 566 0002 0400     		movs	r4, r0
 221:Dsp/iic.c     **** 	uint8_t ucAck;
 222:Dsp/iic.c     **** 
 223:Dsp/iic.c     **** 	I2C_InitGPIO();		/* 配置GPIO */	
 567              		.loc 1 223 0
 568 0004 FFF7FEFF 		bl	I2C_InitGPIO
 569              	.LVL54:
 224:Dsp/iic.c     **** 	I2C_Start();		/* 发送启动信号 */
 570              		.loc 1 224 0
 571 0008 FFF7FEFF 		bl	I2C_Start
 572              	.LVL55:
 225:Dsp/iic.c     **** 	/* 发送设备地址+读写控制bit（0 = w， 1 = r) bit7 先传 */
 226:Dsp/iic.c     **** 	I2C_SendByte(_Address | I2C_WR);
 573              		.loc 1 226 0
 574 000c 2000     		movs	r0, r4
 575 000e FFF7FEFF 		bl	I2C_SendByte
 576              	.LVL56:
 227:Dsp/iic.c     **** 	ucAck = I2C_WaitAck();	/* 检测设备的ACK应答 */
 577              		.loc 1 227 0
 578 0012 FFF7FEFF 		bl	I2C_WaitAck
 579              	.LVL57:
 580 0016 0400     		movs	r4, r0
 581              	.LVL58:
 228:Dsp/iic.c     **** 	I2C_Stop();			/* 发送停止信号 */
 582              		.loc 1 228 0
 583 0018 FFF7FEFF 		bl	I2C_Stop
 584              	.LVL59:
 229:Dsp/iic.c     **** 
 230:Dsp/iic.c     **** 	return ucAck;
 231:Dsp/iic.c     **** }
 585              		.loc 1 231 0
 586 001c 2000     		movs	r0, r4
 587              		@ sp needed
 588              	.LVL60:
 589 001e 10BD     		pop	{r4, pc}
 590              		.cfi_endproc
 591              	.LFE46:
 593              		.section	.text.EEPROM_CheckOk,"ax",%progbits
 594              		.align	1
 595              		.global	EEPROM_CheckOk
 596              		.syntax unified
ARM GAS  /tmp/cckuLtdp.s 			page 16


 597              		.code	16
 598              		.thumb_func
 599              		.fpu softvfp
 601              	EEPROM_CheckOk:
 602              	.LFB47:
 232:Dsp/iic.c     **** 
 233:Dsp/iic.c     **** /**
 234:Dsp/iic.c     ****   * 函数功能: 判断串行EERPOM是否正常
 235:Dsp/iic.c     ****   * 输入参数: 无
 236:Dsp/iic.c     ****   * 返 回 值: 1 表示正常， 0 表示不正常
 237:Dsp/iic.c     ****   * 说    明：无
 238:Dsp/iic.c     ****   */
 239:Dsp/iic.c     **** uint8_t EEPROM_CheckOk(void)
 240:Dsp/iic.c     **** {
 603              		.loc 1 240 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607 0000 10B5     		push	{r4, lr}
 608              	.LCFI10:
 609              		.cfi_def_cfa_offset 8
 610              		.cfi_offset 4, -8
 611              		.cfi_offset 14, -4
 241:Dsp/iic.c     **** 	if (I2C_CheckDevice(EEPROM_DEV_ADDR) == 0)
 612              		.loc 1 241 0
 613 0002 A020     		movs	r0, #160
 614 0004 FFF7FEFF 		bl	I2C_CheckDevice
 615              	.LVL61:
 616 0008 0028     		cmp	r0, #0
 617 000a 01D1     		bne	.L47
 242:Dsp/iic.c     **** 	{
 243:Dsp/iic.c     **** 		return 1;
 618              		.loc 1 243 0
 619 000c 0120     		movs	r0, #1
 620              	.L45:
 244:Dsp/iic.c     **** 	}
 245:Dsp/iic.c     **** 	else
 246:Dsp/iic.c     **** 	{
 247:Dsp/iic.c     **** 		/* 失败后，切记发送I2C总线停止信号 */
 248:Dsp/iic.c     **** 		I2C_Stop();		
 249:Dsp/iic.c     **** 
 250:Dsp/iic.c     **** 		return 0;
 251:Dsp/iic.c     **** 	}
 252:Dsp/iic.c     **** }
 621              		.loc 1 252 0
 622              		@ sp needed
 623 000e 10BD     		pop	{r4, pc}
 624              	.L47:
 248:Dsp/iic.c     **** 
 625              		.loc 1 248 0
 626 0010 FFF7FEFF 		bl	I2C_Stop
 627              	.LVL62:
 250:Dsp/iic.c     **** 	}
 628              		.loc 1 250 0
 629 0014 0020     		movs	r0, #0
 630 0016 FAE7     		b	.L45
 631              		.cfi_endproc
ARM GAS  /tmp/cckuLtdp.s 			page 17


 632              	.LFE47:
 634              		.section	.text.AT24CXX_ReadOneByte,"ax",%progbits
 635              		.align	1
 636              		.global	AT24CXX_ReadOneByte
 637              		.syntax unified
 638              		.code	16
 639              		.thumb_func
 640              		.fpu softvfp
 642              	AT24CXX_ReadOneByte:
 643              	.LFB48:
 253:Dsp/iic.c     **** 
 254:Dsp/iic.c     **** 
 255:Dsp/iic.c     **** /**
 256:Dsp/iic.c     ****   *在AT24CXX指定地址读出一个数据
 257:Dsp/iic.c     ****   *ReadAddr:开始读数的地址  
 258:Dsp/iic.c     ****   *返回值  :读到的数据
 259:Dsp/iic.c     ****   */
 260:Dsp/iic.c     **** uint8_t AT24CXX_ReadOneByte(uint16_t ReadAddr)
 261:Dsp/iic.c     **** {				  
 644              		.loc 1 261 0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 0
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 648              	.LVL63:
 649 0000 10B5     		push	{r4, lr}
 650              	.LCFI11:
 651              		.cfi_def_cfa_offset 8
 652              		.cfi_offset 4, -8
 653              		.cfi_offset 14, -4
 654 0002 0400     		movs	r4, r0
 655              	.LVL64:
 262:Dsp/iic.c     **** 	uint8_t temp = 0;		  	    																 
 263:Dsp/iic.c     ****     
 264:Dsp/iic.c     **** 	I2C_Start();  
 656              		.loc 1 264 0
 657 0004 FFF7FEFF 		bl	I2C_Start
 658              	.LVL65:
 265:Dsp/iic.c     **** 
 266:Dsp/iic.c     **** 	if(EE_TYPE > AT24C16)
 267:Dsp/iic.c     **** 	{
 268:Dsp/iic.c     **** 		I2C_SendByte(0XA0);	   //发送写命令
 269:Dsp/iic.c     **** 		I2C_WaitAck();
 270:Dsp/iic.c     **** 		I2C_SendByte(ReadAddr >> 8);//发送高地址
 271:Dsp/iic.c     **** 		I2C_WaitAck();		 
 272:Dsp/iic.c     **** 	}
 273:Dsp/iic.c     **** 	else
 274:Dsp/iic.c     **** 	{
 275:Dsp/iic.c     **** 		I2C_SendByte(0XA0 + ((ReadAddr / 256) << 1));   //发送器件地址0XA0,写数据 	 
 659              		.loc 1 275 0
 660 0008 200A     		lsrs	r0, r4, #8
 661 000a 4000     		lsls	r0, r0, #1
 662 000c C0B2     		uxtb	r0, r0
 663 000e 6038     		subs	r0, r0, #96
 664 0010 C0B2     		uxtb	r0, r0
 665 0012 FFF7FEFF 		bl	I2C_SendByte
 666              	.LVL66:
 276:Dsp/iic.c     **** 	}
ARM GAS  /tmp/cckuLtdp.s 			page 18


 277:Dsp/iic.c     **** 
 278:Dsp/iic.c     **** 	I2C_WaitAck(); 
 667              		.loc 1 278 0
 668 0016 FFF7FEFF 		bl	I2C_WaitAck
 669              	.LVL67:
 279:Dsp/iic.c     ****     I2C_SendByte(ReadAddr % 256);   //发送低地址
 670              		.loc 1 279 0
 671 001a E0B2     		uxtb	r0, r4
 672 001c FFF7FEFF 		bl	I2C_SendByte
 673              	.LVL68:
 280:Dsp/iic.c     **** 	I2C_WaitAck();	    
 674              		.loc 1 280 0
 675 0020 FFF7FEFF 		bl	I2C_WaitAck
 676              	.LVL69:
 281:Dsp/iic.c     **** 	I2C_Start();  	 	   
 677              		.loc 1 281 0
 678 0024 FFF7FEFF 		bl	I2C_Start
 679              	.LVL70:
 282:Dsp/iic.c     **** 	I2C_SendByte(0XA1);           //进入接收模式			   
 680              		.loc 1 282 0
 681 0028 A120     		movs	r0, #161
 682 002a FFF7FEFF 		bl	I2C_SendByte
 683              	.LVL71:
 283:Dsp/iic.c     **** 	I2C_WaitAck();	 
 684              		.loc 1 283 0
 685 002e FFF7FEFF 		bl	I2C_WaitAck
 686              	.LVL72:
 284:Dsp/iic.c     ****     temp = I2C_ReadByte(0);		   
 687              		.loc 1 284 0
 688 0032 0020     		movs	r0, #0
 689 0034 FFF7FEFF 		bl	I2C_ReadByte
 690              	.LVL73:
 691 0038 0400     		movs	r4, r0
 692              	.LVL74:
 285:Dsp/iic.c     ****     I2C_Stop();           //产生一个停止条件	    
 693              		.loc 1 285 0
 694 003a FFF7FEFF 		bl	I2C_Stop
 695              	.LVL75:
 286:Dsp/iic.c     **** 
 287:Dsp/iic.c     **** 
 288:Dsp/iic.c     **** 	return temp;
 289:Dsp/iic.c     **** }
 696              		.loc 1 289 0
 697 003e 2000     		movs	r0, r4
 698              		@ sp needed
 699              	.LVL76:
 700 0040 10BD     		pop	{r4, pc}
 701              		.cfi_endproc
 702              	.LFE48:
 704              		.section	.text.AT24CXX_WriteOneByte,"ax",%progbits
 705              		.align	1
 706              		.global	AT24CXX_WriteOneByte
 707              		.syntax unified
 708              		.code	16
 709              		.thumb_func
 710              		.fpu softvfp
 712              	AT24CXX_WriteOneByte:
ARM GAS  /tmp/cckuLtdp.s 			page 19


 713              	.LFB49:
 290:Dsp/iic.c     **** 
 291:Dsp/iic.c     **** /**
 292:Dsp/iic.c     ****   *在AT24CXX指定地址写入一个数据
 293:Dsp/iic.c     ****   *WriteAddr  :写入数据的目的地址    
 294:Dsp/iic.c     ****   *DataToWrite:要写入的数据
 295:Dsp/iic.c     ****   */
 296:Dsp/iic.c     **** void AT24CXX_WriteOneByte(uint16_t WriteAddr, uint8_t DataToWrite)
 297:Dsp/iic.c     **** {				   	  	    																 
 714              		.loc 1 297 0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 0, uses_anonymous_args = 0
 718              	.LVL77:
 719 0000 70B5     		push	{r4, r5, r6, lr}
 720              	.LCFI12:
 721              		.cfi_def_cfa_offset 16
 722              		.cfi_offset 4, -16
 723              		.cfi_offset 5, -12
 724              		.cfi_offset 6, -8
 725              		.cfi_offset 14, -4
 726 0002 0400     		movs	r4, r0
 727 0004 0D00     		movs	r5, r1
 298:Dsp/iic.c     ****     I2C_Start();  
 728              		.loc 1 298 0
 729 0006 FFF7FEFF 		bl	I2C_Start
 730              	.LVL78:
 299:Dsp/iic.c     **** 	if (EE_TYPE > AT24C16)
 300:Dsp/iic.c     **** 	{
 301:Dsp/iic.c     **** 		I2C_SendByte(0XA0);	    //发送写命令
 302:Dsp/iic.c     **** 		I2C_WaitAck();
 303:Dsp/iic.c     **** 		I2C_SendByte(WriteAddr >> 8);//发送高地址
 304:Dsp/iic.c     ****  	}
 305:Dsp/iic.c     **** 	else
 306:Dsp/iic.c     **** 	{
 307:Dsp/iic.c     **** 		I2C_SendByte(0XA0 + ((WriteAddr / 256) << 1));   //发送器件地址0XA0,写数据 
 731              		.loc 1 307 0
 732 000a 200A     		lsrs	r0, r4, #8
 733 000c 4000     		lsls	r0, r0, #1
 734 000e C0B2     		uxtb	r0, r0
 735 0010 6038     		subs	r0, r0, #96
 736 0012 C0B2     		uxtb	r0, r0
 737 0014 FFF7FEFF 		bl	I2C_SendByte
 738              	.LVL79:
 308:Dsp/iic.c     **** 	}	 
 309:Dsp/iic.c     **** 	I2C_WaitAck();	   
 739              		.loc 1 309 0
 740 0018 FFF7FEFF 		bl	I2C_WaitAck
 741              	.LVL80:
 310:Dsp/iic.c     ****     I2C_SendByte(WriteAddr % 256);   //发送低地址
 742              		.loc 1 310 0
 743 001c E0B2     		uxtb	r0, r4
 744 001e FFF7FEFF 		bl	I2C_SendByte
 745              	.LVL81:
 311:Dsp/iic.c     **** 	I2C_WaitAck(); 	 										  		   
 746              		.loc 1 311 0
 747 0022 FFF7FEFF 		bl	I2C_WaitAck
ARM GAS  /tmp/cckuLtdp.s 			page 20


 748              	.LVL82:
 312:Dsp/iic.c     **** 	I2C_SendByte(DataToWrite);     //发送字节							   
 749              		.loc 1 312 0
 750 0026 2800     		movs	r0, r5
 751 0028 FFF7FEFF 		bl	I2C_SendByte
 752              	.LVL83:
 313:Dsp/iic.c     **** 	I2C_WaitAck();  		    	   
 753              		.loc 1 313 0
 754 002c FFF7FEFF 		bl	I2C_WaitAck
 755              	.LVL84:
 314:Dsp/iic.c     ****     I2C_Stop();//产生一个停止条件 
 756              		.loc 1 314 0
 757 0030 FFF7FEFF 		bl	I2C_Stop
 758              	.LVL85:
 315:Dsp/iic.c     **** 	//I2C_Delay();
 316:Dsp/iic.c     **** 	HAL_Delay(2);
 759              		.loc 1 316 0
 760 0034 0220     		movs	r0, #2
 761 0036 FFF7FEFF 		bl	HAL_Delay
 762              	.LVL86:
 317:Dsp/iic.c     **** }
 763              		.loc 1 317 0
 764              		@ sp needed
 765 003a 70BD     		pop	{r4, r5, r6, pc}
 766              		.cfi_endproc
 767              	.LFE49:
 769              		.section	.text.AT24CXX_WriteLenByte,"ax",%progbits
 770              		.align	1
 771              		.global	AT24CXX_WriteLenByte
 772              		.syntax unified
 773              		.code	16
 774              		.thumb_func
 775              		.fpu softvfp
 777              	AT24CXX_WriteLenByte:
 778              	.LFB50:
 318:Dsp/iic.c     **** 
 319:Dsp/iic.c     **** /**
 320:Dsp/iic.c     ****   *在AT24CXX里面的指定地址开始写入长度为Len的数据
 321:Dsp/iic.c     ****   *函数用于写入16bit或者32bit的数据.
 322:Dsp/iic.c     ****   *WriteAddr  :开始写入的地址  
 323:Dsp/iic.c     ****   *DataToWrite:数据数组首地址
 324:Dsp/iic.c     ****   *Len        :要写入数据的长度2,4
 325:Dsp/iic.c     ****   */
 326:Dsp/iic.c     **** void AT24CXX_WriteLenByte(uint16_t WriteAddr, uint32_t DataToWrite, uint8_t Len)
 327:Dsp/iic.c     **** {  	
 779              		.loc 1 327 0
 780              		.cfi_startproc
 781              		@ args = 0, pretend = 0, frame = 0
 782              		@ frame_needed = 0, uses_anonymous_args = 0
 783              	.LVL87:
 784 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 785              	.LCFI13:
 786              		.cfi_def_cfa_offset 24
 787              		.cfi_offset 3, -24
 788              		.cfi_offset 4, -20
 789              		.cfi_offset 5, -16
 790              		.cfi_offset 6, -12
ARM GAS  /tmp/cckuLtdp.s 			page 21


 791              		.cfi_offset 7, -8
 792              		.cfi_offset 14, -4
 793 0002 0700     		movs	r7, r0
 794 0004 0E00     		movs	r6, r1
 795 0006 1500     		movs	r5, r2
 796              	.LVL88:
 328:Dsp/iic.c     **** 	uint8_t t;
 329:Dsp/iic.c     **** 
 330:Dsp/iic.c     **** 	for(t = 0;t < Len;t++)
 797              		.loc 1 330 0
 798 0008 0024     		movs	r4, #0
 799 000a 09E0     		b	.L51
 800              	.LVL89:
 801              	.L52:
 331:Dsp/iic.c     **** 	{
 332:Dsp/iic.c     **** 		AT24CXX_WriteOneByte(WriteAddr + t, (DataToWrite >> (8 * t)) & 0xff);
 802              		.loc 1 332 0 discriminator 3
 803 000c E300     		lsls	r3, r4, #3
 804 000e 3100     		movs	r1, r6
 805 0010 D940     		lsrs	r1, r1, r3
 806 0012 C9B2     		uxtb	r1, r1
 807 0014 3819     		adds	r0, r7, r4
 808 0016 80B2     		uxth	r0, r0
 809 0018 FFF7FEFF 		bl	AT24CXX_WriteOneByte
 810              	.LVL90:
 330:Dsp/iic.c     **** 	{
 811              		.loc 1 330 0 discriminator 3
 812 001c 0134     		adds	r4, r4, #1
 813              	.LVL91:
 814 001e E4B2     		uxtb	r4, r4
 815              	.LVL92:
 816              	.L51:
 330:Dsp/iic.c     **** 	{
 817              		.loc 1 330 0 is_stmt 0 discriminator 1
 818 0020 AC42     		cmp	r4, r5
 819 0022 F3D3     		bcc	.L52
 333:Dsp/iic.c     **** 	}												    
 334:Dsp/iic.c     **** }
 820              		.loc 1 334 0 is_stmt 1
 821              		@ sp needed
 822              	.LVL93:
 823              	.LVL94:
 824 0024 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 825              		.cfi_endproc
 826              	.LFE50:
 828              		.section	.text.AT24CXX_ReadLenByte,"ax",%progbits
 829              		.align	1
 830              		.global	AT24CXX_ReadLenByte
 831              		.syntax unified
 832              		.code	16
 833              		.thumb_func
 834              		.fpu softvfp
 836              	AT24CXX_ReadLenByte:
 837              	.LFB51:
 335:Dsp/iic.c     **** 
 336:Dsp/iic.c     **** /**
 337:Dsp/iic.c     ****   *在AT24CXX里面的指定地址开始读出长度为Len的数据
ARM GAS  /tmp/cckuLtdp.s 			page 22


 338:Dsp/iic.c     ****   *该函数用于读出16bit或者32bit的数据.
 339:Dsp/iic.c     ****   *ReadAddr   :开始读出的地址 
 340:Dsp/iic.c     ****   *返回值     :数据
 341:Dsp/iic.c     ****   *Len        :要读出数据的长度2,4
 342:Dsp/iic.c     ****   */
 343:Dsp/iic.c     **** uint32_t AT24CXX_ReadLenByte(uint16_t ReadAddr, uint8_t Len)
 344:Dsp/iic.c     **** {  	
 838              		.loc 1 344 0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 0
 841              		@ frame_needed = 0, uses_anonymous_args = 0
 842              	.LVL95:
 843 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 844              	.LCFI14:
 845              		.cfi_def_cfa_offset 24
 846              		.cfi_offset 3, -24
 847              		.cfi_offset 4, -20
 848              		.cfi_offset 5, -16
 849              		.cfi_offset 6, -12
 850              		.cfi_offset 7, -8
 851              		.cfi_offset 14, -4
 852 0002 0700     		movs	r7, r0
 853 0004 0E00     		movs	r6, r1
 854              	.LVL96:
 345:Dsp/iic.c     **** 	uint8_t t;
 346:Dsp/iic.c     **** 	uint32_t temp = 0;
 855              		.loc 1 346 0
 856 0006 0025     		movs	r5, #0
 347:Dsp/iic.c     **** 
 348:Dsp/iic.c     **** 	for (t = 0; t < Len; t++)
 857              		.loc 1 348 0
 858 0008 0024     		movs	r4, #0
 859 000a 0BE0     		b	.L54
 860              	.LVL97:
 861              	.L55:
 349:Dsp/iic.c     **** 	{
 350:Dsp/iic.c     **** 		temp <<= 8;
 862              		.loc 1 350 0 discriminator 3
 863 000c 2D02     		lsls	r5, r5, #8
 864              	.LVL98:
 351:Dsp/iic.c     **** 		temp += AT24CXX_ReadOneByte(ReadAddr + Len - t - 1); 	 				   
 865              		.loc 1 351 0 discriminator 3
 866 000e B819     		adds	r0, r7, r6
 867 0010 80B2     		uxth	r0, r0
 868 0012 001B     		subs	r0, r0, r4
 869 0014 80B2     		uxth	r0, r0
 870 0016 0138     		subs	r0, r0, #1
 871 0018 80B2     		uxth	r0, r0
 872 001a FFF7FEFF 		bl	AT24CXX_ReadOneByte
 873              	.LVL99:
 874 001e 4519     		adds	r5, r0, r5
 875              	.LVL100:
 348:Dsp/iic.c     **** 	{
 876              		.loc 1 348 0 discriminator 3
 877 0020 0134     		adds	r4, r4, #1
 878              	.LVL101:
 879 0022 E4B2     		uxtb	r4, r4
ARM GAS  /tmp/cckuLtdp.s 			page 23


 880              	.LVL102:
 881              	.L54:
 348:Dsp/iic.c     **** 	{
 882              		.loc 1 348 0 is_stmt 0 discriminator 1
 883 0024 B442     		cmp	r4, r6
 884 0026 F1D3     		bcc	.L55
 352:Dsp/iic.c     **** 	}
 353:Dsp/iic.c     **** 
 354:Dsp/iic.c     **** 	return temp;												    
 355:Dsp/iic.c     **** }
 885              		.loc 1 355 0 is_stmt 1
 886 0028 2800     		movs	r0, r5
 887              		@ sp needed
 888              	.LVL103:
 889              	.LVL104:
 890 002a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 891              		.cfi_endproc
 892              	.LFE51:
 894              		.section	.text.AT24CXX_Check,"ax",%progbits
 895              		.align	1
 896              		.global	AT24CXX_Check
 897              		.syntax unified
 898              		.code	16
 899              		.thumb_func
 900              		.fpu softvfp
 902              	AT24CXX_Check:
 903              	.LFB52:
 356:Dsp/iic.c     **** 
 357:Dsp/iic.c     **** /**
 358:Dsp/iic.c     ****   *检查AT24CXX是否正常
 359:Dsp/iic.c     ****   *这里用了24XX的最后一个地址(255)来存储标志字.
 360:Dsp/iic.c     ****   *如果用其他24C系列,这个地址要修改
 361:Dsp/iic.c     ****   *返回1:检测失败
 362:Dsp/iic.c     ****   *返回0:检测成功
 363:Dsp/iic.c     ****   */
 364:Dsp/iic.c     **** uint8_t AT24CXX_Check(void)
 365:Dsp/iic.c     **** {
 904              		.loc 1 365 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908 0000 10B5     		push	{r4, lr}
 909              	.LCFI15:
 910              		.cfi_def_cfa_offset 8
 911              		.cfi_offset 4, -8
 912              		.cfi_offset 14, -4
 366:Dsp/iic.c     **** 	uint8_t temp;
 367:Dsp/iic.c     **** 
 368:Dsp/iic.c     **** 	temp = AT24CXX_ReadOneByte(255);//避免每次开机都写AT24CXX			   
 913              		.loc 1 368 0
 914 0002 FF20     		movs	r0, #255
 915 0004 FFF7FEFF 		bl	AT24CXX_ReadOneByte
 916              	.LVL105:
 369:Dsp/iic.c     **** 	if (temp == 0X55)
 917              		.loc 1 369 0
 918 0008 5528     		cmp	r0, #85
 919 000a 0CD0     		beq	.L58
ARM GAS  /tmp/cckuLtdp.s 			page 24


 370:Dsp/iic.c     **** 	{
 371:Dsp/iic.c     **** 		return 0;		   
 372:Dsp/iic.c     **** 	}
 373:Dsp/iic.c     **** 	else                     //排除第一次初始化的情况
 374:Dsp/iic.c     **** 	{
 375:Dsp/iic.c     **** 		AT24CXX_WriteOneByte(255, 0X55);
 920              		.loc 1 375 0
 921 000c 5521     		movs	r1, #85
 922 000e FF20     		movs	r0, #255
 923              	.LVL106:
 924 0010 FFF7FEFF 		bl	AT24CXX_WriteOneByte
 925              	.LVL107:
 376:Dsp/iic.c     **** 	    temp = AT24CXX_ReadOneByte(255);	  
 926              		.loc 1 376 0
 927 0014 FF20     		movs	r0, #255
 928 0016 FFF7FEFF 		bl	AT24CXX_ReadOneByte
 929              	.LVL108:
 377:Dsp/iic.c     **** 		if (temp == 0X55)
 930              		.loc 1 377 0
 931 001a 5528     		cmp	r0, #85
 932 001c 01D0     		beq	.L60
 378:Dsp/iic.c     **** 		{
 379:Dsp/iic.c     **** 			return 0;
 380:Dsp/iic.c     **** 		}
 381:Dsp/iic.c     **** 	}
 382:Dsp/iic.c     **** 
 383:Dsp/iic.c     **** 	return 1;											  
 933              		.loc 1 383 0
 934 001e 0120     		movs	r0, #1
 935              	.LVL109:
 936 0020 02E0     		b	.L57
 937              	.LVL110:
 938              	.L60:
 379:Dsp/iic.c     **** 		}
 939              		.loc 1 379 0
 940 0022 0020     		movs	r0, #0
 941              	.LVL111:
 942 0024 00E0     		b	.L57
 943              	.LVL112:
 944              	.L58:
 371:Dsp/iic.c     **** 	}
 945              		.loc 1 371 0
 946 0026 0020     		movs	r0, #0
 947              	.LVL113:
 948              	.L57:
 384:Dsp/iic.c     **** }
 949              		.loc 1 384 0
 950              		@ sp needed
 951 0028 10BD     		pop	{r4, pc}
 952              		.cfi_endproc
 953              	.LFE52:
 955              		.section	.text.AT24CXX_Read,"ax",%progbits
 956              		.align	1
 957              		.global	AT24CXX_Read
 958              		.syntax unified
 959              		.code	16
 960              		.thumb_func
ARM GAS  /tmp/cckuLtdp.s 			page 25


 961              		.fpu softvfp
 963              	AT24CXX_Read:
 964              	.LFB53:
 385:Dsp/iic.c     **** 
 386:Dsp/iic.c     **** /**
 387:Dsp/iic.c     ****   *在AT24CXX里面的指定地址开始读出指定个数的数据
 388:Dsp/iic.c     ****   *ReadAddr :开始读出的地址 对24c02为0~255
 389:Dsp/iic.c     ****   *pBuffer  :数据数组首地址
 390:Dsp/iic.c     ****   *NumToRead:要读出数据的个数
 391:Dsp/iic.c     ****   */
 392:Dsp/iic.c     **** void AT24CXX_Read(uint16_t ReadAddr, uint8_t *pBuffer, uint16_t NumToRead)
 393:Dsp/iic.c     **** {
 965              		.loc 1 393 0
 966              		.cfi_startproc
 967              		@ args = 0, pretend = 0, frame = 0
 968              		@ frame_needed = 0, uses_anonymous_args = 0
 969              	.LVL114:
 970 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 971              	.LCFI16:
 972              		.cfi_def_cfa_offset 24
 973              		.cfi_offset 3, -24
 974              		.cfi_offset 4, -20
 975              		.cfi_offset 5, -16
 976              		.cfi_offset 6, -12
 977              		.cfi_offset 7, -8
 978              		.cfi_offset 14, -4
 979 0002 0E00     		movs	r6, r1
 980 0004 1400     		movs	r4, r2
 394:Dsp/iic.c     **** 	while (NumToRead)
 981              		.loc 1 394 0
 982 0006 09E0     		b	.L62
 983              	.LVL115:
 984              	.L63:
 395:Dsp/iic.c     **** 	{
 396:Dsp/iic.c     **** 		*pBuffer++ = AT24CXX_ReadOneByte(ReadAddr++);	
 985              		.loc 1 396 0
 986 0008 451C     		adds	r5, r0, #1
 987 000a ADB2     		uxth	r5, r5
 988              	.LVL116:
 989 000c 771C     		adds	r7, r6, #1
 990              	.LVL117:
 991 000e FFF7FEFF 		bl	AT24CXX_ReadOneByte
 992              	.LVL118:
 993 0012 3070     		strb	r0, [r6]
 397:Dsp/iic.c     **** 		NumToRead--;
 994              		.loc 1 397 0
 995 0014 013C     		subs	r4, r4, #1
 996              	.LVL119:
 997 0016 A4B2     		uxth	r4, r4
 998              	.LVL120:
 396:Dsp/iic.c     **** 		NumToRead--;
 999              		.loc 1 396 0
 1000 0018 3E00     		movs	r6, r7
 1001 001a 2800     		movs	r0, r5
 1002              	.LVL121:
 1003              	.L62:
 394:Dsp/iic.c     **** 	{
ARM GAS  /tmp/cckuLtdp.s 			page 26


 1004              		.loc 1 394 0
 1005 001c 002C     		cmp	r4, #0
 1006 001e F3D1     		bne	.L63
 398:Dsp/iic.c     **** 	}
 399:Dsp/iic.c     **** }  
 1007              		.loc 1 399 0
 1008              		@ sp needed
 1009              	.LVL122:
 1010              	.LVL123:
 1011 0020 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1012              		.cfi_endproc
 1013              	.LFE53:
 1015              		.section	.text.AT24CXX_Write,"ax",%progbits
 1016              		.align	1
 1017              		.global	AT24CXX_Write
 1018              		.syntax unified
 1019              		.code	16
 1020              		.thumb_func
 1021              		.fpu softvfp
 1023              	AT24CXX_Write:
 1024              	.LFB54:
 400:Dsp/iic.c     **** 
 401:Dsp/iic.c     **** /**
 402:Dsp/iic.c     ****   *在AT24CXX里面的指定地址开始写入指定个数的数据
 403:Dsp/iic.c     ****   *WriteAddr :开始写入的地址 对24c02为0~255
 404:Dsp/iic.c     ****   *pBuffer   :数据数组首地址
 405:Dsp/iic.c     ****   *NumToWrite:要写入数据的个数
 406:Dsp/iic.c     ****   */
 407:Dsp/iic.c     **** void AT24CXX_Write(uint16_t WriteAddr, uint8_t *pBuffer, uint16_t NumToWrite)
 408:Dsp/iic.c     **** {
 1025              		.loc 1 408 0
 1026              		.cfi_startproc
 1027              		@ args = 0, pretend = 0, frame = 0
 1028              		@ frame_needed = 0, uses_anonymous_args = 0
 1029              	.LVL124:
 1030 0000 70B5     		push	{r4, r5, r6, lr}
 1031              	.LCFI17:
 1032              		.cfi_def_cfa_offset 16
 1033              		.cfi_offset 4, -16
 1034              		.cfi_offset 5, -12
 1035              		.cfi_offset 6, -8
 1036              		.cfi_offset 14, -4
 1037 0002 0400     		movs	r4, r0
 1038 0004 0E00     		movs	r6, r1
 409:Dsp/iic.c     **** 	while (NumToWrite--)
 1039              		.loc 1 409 0
 1040 0006 07E0     		b	.L65
 1041              	.LVL125:
 1042              	.L66:
 410:Dsp/iic.c     **** 	{
 411:Dsp/iic.c     **** 		AT24CXX_WriteOneByte(WriteAddr, *pBuffer);
 1043              		.loc 1 411 0
 1044 0008 3178     		ldrb	r1, [r6]
 1045 000a 2000     		movs	r0, r4
 1046 000c FFF7FEFF 		bl	AT24CXX_WriteOneByte
 1047              	.LVL126:
 412:Dsp/iic.c     **** 		WriteAddr++;
ARM GAS  /tmp/cckuLtdp.s 			page 27


 1048              		.loc 1 412 0
 1049 0010 0134     		adds	r4, r4, #1
 1050              	.LVL127:
 1051 0012 A4B2     		uxth	r4, r4
 1052              	.LVL128:
 413:Dsp/iic.c     **** 		pBuffer++;
 1053              		.loc 1 413 0
 1054 0014 0136     		adds	r6, r6, #1
 1055              	.LVL129:
 409:Dsp/iic.c     **** 	{
 1056              		.loc 1 409 0
 1057 0016 2A00     		movs	r2, r5
 1058              	.LVL130:
 1059              	.L65:
 1060 0018 551E     		subs	r5, r2, #1
 1061 001a ADB2     		uxth	r5, r5
 1062              	.LVL131:
 1063 001c 002A     		cmp	r2, #0
 1064 001e F3D1     		bne	.L66
 414:Dsp/iic.c     **** 	}
 415:Dsp/iic.c     **** }
 1065              		.loc 1 415 0
 1066              		@ sp needed
 1067              	.LVL132:
 1068              	.LVL133:
 1069              	.LVL134:
 1070 0020 70BD     		pop	{r4, r5, r6, pc}
 1071              		.cfi_endproc
 1072              	.LFE54:
 1074              		.text
 1075              	.Letext0:
 1076              		.file 2 "/home/xiao/Tool/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_
 1077              		.file 3 "/home/xiao/Tool/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1078              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 1079              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x6.h"
 1080              		.file 6 "/home/xiao/Tool/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 1081              		.file 7 "/home/xiao/Tool/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 1082              		.file 8 "/home/xiao/Tool/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/std
 1083              		.file 9 "/home/xiao/Tool/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 1084              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1085              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /tmp/cckuLtdp.s 			page 28


DEFINED SYMBOLS
                            *ABS*:0000000000000000 iic.c
     /tmp/cckuLtdp.s:16     .text.I2C_Start:0000000000000000 $t
     /tmp/cckuLtdp.s:23     .text.I2C_Start:0000000000000000 I2C_Start
     /tmp/cckuLtdp.s:66     .text.I2C_Start:0000000000000030 $d
     /tmp/cckuLtdp.s:71     .text.I2C_Stop:0000000000000000 $t
     /tmp/cckuLtdp.s:78     .text.I2C_Stop:0000000000000000 I2C_Stop
     /tmp/cckuLtdp.s:114    .text.I2C_Stop:0000000000000024 $d
     /tmp/cckuLtdp.s:119    .text.I2C_InitGPIO:0000000000000000 $t
     /tmp/cckuLtdp.s:125    .text.I2C_InitGPIO:0000000000000000 I2C_InitGPIO
     /tmp/cckuLtdp.s:175    .text.I2C_InitGPIO:0000000000000034 $d
     /tmp/cckuLtdp.s:181    .text.I2C_SendByte:0000000000000000 $t
     /tmp/cckuLtdp.s:188    .text.I2C_SendByte:0000000000000000 I2C_SendByte
     /tmp/cckuLtdp.s:275    .text.I2C_SendByte:0000000000000058 $d
     /tmp/cckuLtdp.s:280    .text.I2C_WaitAck:0000000000000000 $t
     /tmp/cckuLtdp.s:287    .text.I2C_WaitAck:0000000000000000 I2C_WaitAck
     /tmp/cckuLtdp.s:340    .text.I2C_WaitAck:0000000000000038 $d
     /tmp/cckuLtdp.s:345    .text.I2C_Ack:0000000000000000 $t
     /tmp/cckuLtdp.s:352    .text.I2C_Ack:0000000000000000 I2C_Ack
     /tmp/cckuLtdp.s:394    .text.I2C_Ack:0000000000000030 $d
     /tmp/cckuLtdp.s:399    .text.I2C_NAck:0000000000000000 $t
     /tmp/cckuLtdp.s:406    .text.I2C_NAck:0000000000000000 I2C_NAck
     /tmp/cckuLtdp.s:442    .text.I2C_NAck:0000000000000024 $d
     /tmp/cckuLtdp.s:447    .text.I2C_ReadByte:0000000000000000 $t
     /tmp/cckuLtdp.s:454    .text.I2C_ReadByte:0000000000000000 I2C_ReadByte
     /tmp/cckuLtdp.s:542    .text.I2C_ReadByte:0000000000000050 $d
     /tmp/cckuLtdp.s:547    .text.I2C_CheckDevice:0000000000000000 $t
     /tmp/cckuLtdp.s:554    .text.I2C_CheckDevice:0000000000000000 I2C_CheckDevice
     /tmp/cckuLtdp.s:594    .text.EEPROM_CheckOk:0000000000000000 $t
     /tmp/cckuLtdp.s:601    .text.EEPROM_CheckOk:0000000000000000 EEPROM_CheckOk
     /tmp/cckuLtdp.s:635    .text.AT24CXX_ReadOneByte:0000000000000000 $t
     /tmp/cckuLtdp.s:642    .text.AT24CXX_ReadOneByte:0000000000000000 AT24CXX_ReadOneByte
     /tmp/cckuLtdp.s:705    .text.AT24CXX_WriteOneByte:0000000000000000 $t
     /tmp/cckuLtdp.s:712    .text.AT24CXX_WriteOneByte:0000000000000000 AT24CXX_WriteOneByte
     /tmp/cckuLtdp.s:770    .text.AT24CXX_WriteLenByte:0000000000000000 $t
     /tmp/cckuLtdp.s:777    .text.AT24CXX_WriteLenByte:0000000000000000 AT24CXX_WriteLenByte
     /tmp/cckuLtdp.s:829    .text.AT24CXX_ReadLenByte:0000000000000000 $t
     /tmp/cckuLtdp.s:836    .text.AT24CXX_ReadLenByte:0000000000000000 AT24CXX_ReadLenByte
     /tmp/cckuLtdp.s:895    .text.AT24CXX_Check:0000000000000000 $t
     /tmp/cckuLtdp.s:902    .text.AT24CXX_Check:0000000000000000 AT24CXX_Check
     /tmp/cckuLtdp.s:956    .text.AT24CXX_Read:0000000000000000 $t
     /tmp/cckuLtdp.s:963    .text.AT24CXX_Read:0000000000000000 AT24CXX_Read
     /tmp/cckuLtdp.s:1016   .text.AT24CXX_Write:0000000000000000 $t
     /tmp/cckuLtdp.s:1023   .text.AT24CXX_Write:0000000000000000 AT24CXX_Write

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_GPIO_ReadPin
HAL_Delay
